/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

/* store state of warning output, restored at later pop */
#pragma GCC diagnostic push
/* ignore warnings for pragma below, where for older GCC it can produce a
   warning if the cast-function-type warning is absent. */
#pragma GCC diagnostic ignored "-Wpragmas"
/* ignore gcc8 METH_NOARGS function cast warnings for swig function pointers */
#pragma GCC diagnostic ignored "-Wcast-function-type"



#define SWIG_VERSION 0x040100
#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(__GNUC__) && defined(_WIN32) && !defined(SWIG_PYTHON_NO_HYPOT_WORKAROUND)
/* Workaround for '::hypot' has not been declared', see https://bugs.python.org/issue11566 */
# include <math.h>
#endif

#if !defined(PY_SSIZE_T_CLEAN) && !defined(SWIG_NO_PY_SSIZE_T_CLEAN)
#define PY_SSIZE_T_CLEAN
#endif

#if __GNUC__ >= 7
#pragma GCC diagnostic push
#if defined(__cplusplus) && __cplusplus >=201703L
#pragma GCC diagnostic ignored "-Wregister" /* For python-2.7 headers that use register */
#endif
#endif

#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */

#if defined(_MSC_VER) && _MSC_VER >= 1929
/* Workaround compilation errors when redefining _DEBUG in MSVC 2019 version 16.10 and later
 * See https://github.com/swig/swig/issues/2090 */
# include <corecrt.h>
#endif

# undef _DEBUG
# include <Python.h>
# define _DEBUG 1
#else
# include <Python.h>
#endif

#if __GNUC__ >= 7
#pragma GCC diagnostic pop
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4
#define SWIG_POINTER_CLEAR         0x8
#define SWIG_POINTER_RELEASE       (SWIG_POINTER_CLEAR | SWIG_POINTER_DISOWN)

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows returning the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
/* Runtime errors are < 0 */
#define SWIG_ERROR                 (-1)
/* Errors in range -1 to -99 are in swigerrors.swg (errors for all languages including those not using the runtime) */
/* Errors in range -100 to -199 are language specific errors defined in *errors.swg */
/* Errors < -200 are generic runtime specific errors */
#define SWIG_ERROR_RELEASE_NOT_OWNED (-200)

#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del object mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(const swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  Choose the last
     name. It should be the most specific; a fully resolved name
     but not necessarily with default template parameters expanded. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/* SWIG Errors applicable to all language modules, values are reserved from -1 to -99 */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13


/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03030000
  return (char *)PyUnicode_AsUTF8(str);
#else
  return PyString_AsString(str);
#endif
}

/* Was useful for Python 3.0.x-3.2.x - now provided only for compatibility
 * with any uses in user interface files. */
#define SWIG_Python_str_DelForPy3(x)


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* SWIGPY_USE_CAPSULE is no longer used within SWIG itself, but some user interface files check for it. */
# define SWIGPY_USE_CAPSULE
#ifdef SWIGPYTHON_BUILTIN
# define SWIGPY_CAPSULE_ATTR_NAME "type_pointer_capsule_builtin" SWIG_TYPE_TABLE_NAME
#else
# define SWIGPY_CAPSULE_ATTR_NAME "type_pointer_capsule" SWIG_TYPE_TABLE_NAME
#endif
# define SWIGPY_CAPSULE_NAME ("swig_runtime_data" SWIG_RUNTIME_VERSION "." SWIGPY_CAPSULE_ATTR_NAME)

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#define Py_hash_t long
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred())
    PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    const char *tmp = SWIG_Python_str_AsChar(old_str);
    PyErr_Clear();
    Py_XINCREF(type);
    if (tmp)
      PyErr_Format(type, "%s %s", tmp, mesg);
    else
      PyErr_Format(type, "%s", mesg);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

SWIGRUNTIME int
SWIG_Python_TypeErrorOccurred(PyObject *obj)
{
  PyObject *error;
  if (obj)
    return 0;
  error = PyErr_Occurred();
  return error && PyErr_GivenExceptionMatches(error, PyExc_TypeError);
}

SWIGRUNTIME void
SWIG_Python_RaiseOrModifyTypeError(const char *message)
{
  if (SWIG_Python_TypeErrorOccurred(NULL)) {
    /* Use existing TypeError to preserve stacktrace and enhance with given message */
    PyObject *newvalue;
    PyObject *type = NULL, *value = NULL, *traceback = NULL;
    PyErr_Fetch(&type, &value, &traceback);
#if PY_VERSION_HEX >= 0x03000000
    newvalue = PyUnicode_FromFormat("%S\nAdditional information:\n%s", value, message);
#else
    newvalue = PyString_FromFormat("%s\nAdditional information:\n%s", PyString_AsString(value), message);
#endif
    if (newvalue) {
      Py_XDECREF(value);
      PyErr_Restore(type, newvalue, traceback);
    } else {
      PyErr_Restore(type, value, traceback);
    }
  } else {
    /* Raise TypeError using given message */
    PyErr_SetString(PyExc_TypeError, message);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    define SWIG_PYTHON_USE_GIL
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      if PY_VERSION_HEX < 0x03070000
#        define SWIG_PYTHON_INITIALIZE_THREADS PyEval_InitThreads()
#      else
#        define SWIG_PYTHON_INITIALIZE_THREADS
#      endif
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  const char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

#if PY_VERSION_HEX < 0x02070000 /* 2.7.0 */
# error "This version of SWIG only supports Python >= 2.7"
#endif

#if PY_VERSION_HEX >= 0x03000000 && PY_VERSION_HEX < 0x03030000
# error "This version of SWIG only supports Python 3 >= 3.3"
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      if (result) {
        PyList_SET_ITEM(result, 0, o2);
      } else {
        Py_DECREF(obj);
        return o2;
      }
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

SWIGINTERN int
SWIG_Python_CheckNoKeywords(PyObject *kwargs, const char *name) {
  int no_kwargs = 1;
  if (kwargs) {
    assert(PyDict_Check(kwargs));
    if (PyDict_Size(kwargs) > 0) {
      PyErr_Format(PyExc_TypeError, "%s() does not take keyword arguments", name);
      no_kwargs = 0;
    }
  }
  return no_kwargs;
}

/* A functor is a function object with one single object argument */
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
 
/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */
 
typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

SWIGINTERN PyObject *
swig_varlink_repr(PyObject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_InternFromString("<Swig global variables>");
#else
  return PyString_FromString("<Swig global variables>");
#endif
}

SWIGINTERN PyObject *
swig_varlink_str(PyObject *o) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
#if PY_VERSION_HEX >= 0x03000000
  PyObject *str = PyUnicode_InternFromString("(");
  PyObject *tail;
  PyObject *joined;
  swig_globalvar *var;
  for (var = v->vars; var; var=var->next) {
    tail = PyUnicode_FromString(var->name);
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
    if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
    }
  }
  tail = PyUnicode_InternFromString(")");
  joined = PyUnicode_Concat(str, tail);
  Py_DecRef(str);
  Py_DecRef(tail);
  str = joined;
#else
  PyObject *str = PyString_FromString("(");
  swig_globalvar *var;
  for (var = v->vars; var; var=var->next) {
    PyString_ConcatAndDel(&str,PyString_FromString(var->name));
    if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
  }
  PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
  return str;
}

SWIGINTERN void
swig_varlink_dealloc(PyObject *o) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
  swig_globalvar *var = v->vars;
  while (var) {
    swig_globalvar *n = var->next;
    free(var->name);
    free(var);
    var = n;
  }
}

SWIGINTERN PyObject *
swig_varlink_getattr(PyObject *o, char *n) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
  PyObject *res = NULL;
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      res = (*var->get_attr)();
      break;
    }
    var = var->next;
  }
  if (res == NULL && !PyErr_Occurred()) {
    PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
  }
  return res;
}

SWIGINTERN int
swig_varlink_setattr(PyObject *o, char *n, PyObject *p) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
  int res = 1;
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      res = (*var->set_attr)(p);
      break;
    }
    var = var->next;
  }
  if (res == 1 && !PyErr_Occurred()) {
    PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
  }
  return res;
}

SWIGINTERN PyTypeObject*
swig_varlink_type(void) {
  static char varlink__doc__[] = "Swig var link object";
  static PyTypeObject varlink_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                  /* ob_size */
#endif
      "swigvarlink",                      /* tp_name */
      sizeof(swig_varlinkobject),         /* tp_basicsize */
      0,                                  /* tp_itemsize */
      (destructor) swig_varlink_dealloc,  /* tp_dealloc */
#if PY_VERSION_HEX < 0x030800b4
      (printfunc)0,                       /*tp_print*/
#else
      (Py_ssize_t)0,                      /*tp_vectorcall_offset*/
#endif
      (getattrfunc) swig_varlink_getattr, /* tp_getattr */
      (setattrfunc) swig_varlink_setattr, /* tp_setattr */
      0,                                  /* tp_compare */
      (reprfunc) swig_varlink_repr,       /* tp_repr */
      0,                                  /* tp_as_number */
      0,                                  /* tp_as_sequence */
      0,                                  /* tp_as_mapping */
      0,                                  /* tp_hash */
      0,                                  /* tp_call */
      (reprfunc) swig_varlink_str,        /* tp_str */
      0,                                  /* tp_getattro */
      0,                                  /* tp_setattro */
      0,                                  /* tp_as_buffer */
      0,                                  /* tp_flags */
      varlink__doc__,                     /* tp_doc */
      0,                                  /* tp_traverse */
      0,                                  /* tp_clear */
      0,                                  /* tp_richcompare */
      0,                                  /* tp_weaklistoffset */
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
      0,                                  /* tp_del */
      0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                  /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                  /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                  /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                  /* tp_allocs */
      0,                                  /* tp_frees */
      0,                                  /* tp_maxalloc */
      0,                                  /* tp_prev */
      0                                   /* tp_next */
#endif
    };
    varlink_type = tmp;
    type_init = 1;
    if (PyType_Ready(&varlink_type) < 0)
      return NULL;
  }
  return &varlink_type;
}

/* Create a variable linking object for use later */
SWIGINTERN PyObject *
SWIG_Python_newvarlink(void) {
  swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
  if (result) {
    result->vars = 0;
  }
  return ((PyObject*) result);
}

SWIGINTERN void 
SWIG_Python_addvarlink(PyObject *p, const char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v = (swig_varlinkobject *) p;
  swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  if (gv) {
    size_t size = strlen(name)+1;
    gv->name = (char *)malloc(size);
    if (gv->name) {
      memcpy(gv->name, name, size);
      gv->get_attr = get_attr;
      gv->set_attr = set_attr;
      gv->next = v->vars;
    }
  }
  v->vars = gv;
}


static PyObject *Swig_Globals_global = NULL;
  
SWIGINTERN PyObject *
SWIG_globals(void) {
  if (Swig_Globals_global == NULL) {
    Swig_Globals_global = SWIG_newvarlink();
  }
  return Swig_Globals_global;
}

#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  int fail = data ? data->implicitconv : 0;
  if (fail)
    PyErr_SetString(PyExc_TypeError, "Implicit conversion is prohibited for explicit constructors.");
  return fail;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      Py_INCREF(obj);
      data->newargs = obj;
    } else {
      data->newraw = PyObject_GetAttrString(data->klass, "__new__");
      if (data->newraw) {
        data->newargs = PyTuple_New(1);
        if (data->newargs) {
          Py_INCREF(obj);
          PyTuple_SET_ITEM(data->newargs, 0, obj);
        } else {
          Py_DECREF(data->newraw);
          Py_DECREF(data->klass);
          free(data);
          return 0;
        }
      } else {
        Py_INCREF(obj);
        data->newargs = obj;
      }
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, "__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      data->delargs = !(PyCFunction_GET_FLAGS(data->destroy) & METH_O);
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data)
{
  Py_XDECREF(data->klass);
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
  free(data);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_XINCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    PyObject *val = SwigPyObject_long(v);
    if (val) {
      PyObject *ofmt;
      PyTuple_SET_ITEM(args, 0, val);
      ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
        res = PyUnicode_Format(ofmt,args);
#else
        res = PyString_Format(ofmt,args);
#endif
        Py_DECREF(ofmt);
      }
    }
    Py_DECREF(args);
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_repr(SwigPyObject *v)
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (repr && v->next) {
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
    if (nrep) {
# if PY_VERSION_HEX >= 0x03000000
      PyObject *joined = PyUnicode_Concat(repr, nrep);
      Py_DecRef(repr);
      Py_DecRef(nrep);
      repr = joined;
# else
      PyString_ConcatAndDel(&repr,nrep);
# endif
    } else {
      Py_DecRef(repr);
      repr = NULL;
    }
  }
  return repr;
}

/* We need a version taking two PyObject* parameters so it's a valid
 * PyCFunction to use in swigobject_methods[]. */
SWIGRUNTIME PyObject *
SwigPyObject_repr2(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  return SwigPyObject_repr((SwigPyObject*)v);
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

static PyObject* Swig_Capsule_global = NULL;

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *type = NULL, *value = NULL, *traceback = NULL;
      PyErr_Fetch(&type, &value, &traceback);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        if (tmp) {
          res = SWIG_Python_CallFunctor(destroy, tmp);
        } else {
          res = 0;
        }
        Py_XDECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(type, value, traceback);

      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
    Py_XDECREF(Swig_Capsule_global);
  }
  Py_XDECREF(next);
#ifdef SWIGPYTHON_BUILTIN
  Py_XDECREF(sobj->dict);
#endif
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  ((SwigPyObject *)next)->next = sobj->next;
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) {
    return NULL;
  } else {
    SwigPyObject *sobj = (SwigPyObject *)v;
    PyObject *obj = PyBool_FromLong(sobj->own);
    if (val) {
      if (PyObject_IsTrue(val)) {
        Py_DECREF(SwigPyObject_acquire(v,args));
      } else {
        Py_DECREF(SwigPyObject_disown(v,args));
      }
    } 
    return obj;
  }
}

static PyMethodDef
swigobject_methods[] = {
  {"disown",  SwigPyObject_disown,  METH_NOARGS,  "releases ownership of the pointer"},
  {"acquire", SwigPyObject_acquire, METH_NOARGS,  "acquires ownership of the pointer"},
  {"own",     SwigPyObject_own,     METH_VARARGS, "returns/sets ownership of the pointer"},
  {"append",  SwigPyObject_append,  METH_O,       "appends another 'this' object"},
  {"next",    SwigPyObject_next,    METH_NOARGS,  "returns the next 'this' object"},
  {"__repr__",SwigPyObject_repr2,   METH_NOARGS,  "returns object representation"},
  {0, 0, 0, 0}  
};

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#else
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyObject",                       /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
#if PY_VERSION_HEX < 0x030800b4
      (printfunc)0,                         /*tp_print*/
#else
      (Py_ssize_t)0,                        /*tp_vectorcall_offset*/
#endif
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
      0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,                                    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpyobject_type) != 0)
      return NULL;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
    sobj->dict = 0;
#endif
    if (own == SWIG_POINTER_OWN) {
      /* Obtain a reference to the Python capsule wrapping the module information, so that the
       * module information is correctly destroyed after all SWIG python objects have been freed
       * by the GC (and corresponding destructors invoked) */
      Py_XINCREF(Swig_Capsule_global);
    }
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((const char *)v->pack, (const char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyPacked",                       /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
#if PY_VERSION_HEX < 0x030800b4
      (printfunc)0,                         /*tp_print*/
#else
      (Py_ssize_t)0,                        /*tp_vectorcall_offset*/
#endif
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpypacked_type) != 0)
      return NULL;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

static PyObject *Swig_This_global = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (Swig_This_global == NULL)
    Swig_This_global = SWIG_Python_str_FromChar("this");
  return Swig_This_global;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (((flags & SWIG_POINTER_RELEASE) == SWIG_POINTER_RELEASE) && !sobj->own) {
      res = SWIG_ERROR_RELEASE_NOT_OWNED;
    } else {
      if (own)
        *own = *own | sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
        sobj->own = 0;
      }
      if (flags & SWIG_POINTER_CLEAR) {
        sobj->ptr = 0;
      }
      res = SWIG_OK;
    }
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
      if (!SWIG_IsOK(res) && obj == Py_None) {
        if (ptr)
          *ptr = 0;
        if (PyErr_Occurred())
          PyErr_Clear();
        res = SWIG_OK;
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    swig_cast_info *tc;

    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc)
      return SWIG_ERROR;
    tc = SWIG_TypeCheck(desc,ty);
    if (tc) {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    } else {
      return SWIG_ERROR;
    }
    return SWIG_OK;
  }
}

/* Convert a packed pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
        PyObject *dict = *dictptr;
        if (dict == NULL) {
          dict = PyDict_New();
          *dictptr = dict;
        }
        if (dict) {
          PyDict_SetItem(dict, SWIG_This(), swig_this);
        } else{
          Py_DECREF(inst);
          inst = 0;
        }
      }
#else
      if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
        Py_DECREF(inst);
        inst = 0;
      }
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *empty_args = PyTuple_New(0);
    if (empty_args) {
      PyObject *empty_kwargs = PyDict_New();
      if (empty_kwargs) {
        inst = ((PyTypeObject *)data->newargs)->tp_new((PyTypeObject *)data->newargs, empty_args, empty_kwargs);
        Py_DECREF(empty_kwargs);
        if (inst) {
          if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
            Py_DECREF(inst);
            inst = 0;
          } else {
            PyType_Modified(Py_TYPE(inst));
          }
        }
      }
      Py_DECREF(empty_args);
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
}

SWIGRUNTIME int
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  PyObject **dictptr = _PyObject_GetDictPtr(inst);
  if (dictptr != NULL) {
    PyObject *dict = *dictptr;
    if (dict == NULL) {
      dict = PyDict_New();
      *dictptr = dict;
    }
    if (dict) {
      return PyDict_SetItem(dict, SWIG_This(), swig_this);
    } else{
      return -1;
    }
  }
#endif
  return PyObject_SetAttr(inst, SWIG_This(), swig_this);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      Py_DECREF(SwigPyObject_append((PyObject*) sthis, obj[1]));
    } else {
      if (SWIG_Python_SetSwigThis(obj[0], obj[1]) != 0)
        return NULL;
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      if (newobj) {
        newobj->dict = 0;
      }
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

static PyObject *Swig_TypeCache_global = NULL;

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  if (Swig_TypeCache_global == NULL) {
    Swig_TypeCache_global = PyDict_New();
  }
  return Swig_TypeCache_global;
}

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
#ifdef SWIG_LINK_RUNTIME
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
  }
#else
  void *type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
  if (PyErr_Occurred()) {
    PyErr_Clear();
    type_pointer = (void *)0;
  }
#endif
  return (swig_module_info *) type_pointer;
}


static int interpreter_counter = 0; // how many (sub-)interpreters are using swig_module's types

SWIGRUNTIME void
SWIG_Python_DestroyModule(PyObject *obj)
{
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
  swig_type_info **types = swig_module->types;
  size_t i;
  if (--interpreter_counter != 0) // another sub-interpreter may still be using the swig_module's types
    return;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      ty->clientdata = 0;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  Swig_This_global = NULL;
  Py_DECREF(SWIG_globals());
  Swig_Globals_global = NULL;
  Py_DECREF(SWIG_Python_TypeCache());
  Swig_TypeCache_global = NULL;
  Swig_Capsule_global = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule("swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule("swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    if (PyModule_AddObject(module, SWIGPY_CAPSULE_ATTR_NAME, pointer) == 0) {
      ++interpreter_counter;
      Swig_Capsule_global = pointer;
    } else {
      Py_DECREF(pointer);
    }
  } else {
    Py_XDECREF(pointer);
  }
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
      if (obj) {
        PyDict_SetItem(cache, key, obj);
        Py_DECREF(obj);
      }
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      const char *tmp = SWIG_Python_str_AsChar(old_str);
      const char *errmesg = tmp ? tmp : "Invalid error message";
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, errmesg);
      } else {
	PyErr_Format(type, "%s %s", errmesg, mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) != 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
      if (!encoded_name)
        goto done;
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) do { if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } } while (0) 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_alloc_cache swig_types[0]
#define SWIGTYPE_p_char swig_types[1]
#define SWIGTYPE_p_comm_reply swig_types[2]
#define SWIGTYPE_p_comm_timer swig_types[3]
#define SWIGTYPE_p_config_file swig_types[4]
#define SWIGTYPE_p_config_str2list swig_types[5]
#define SWIGTYPE_p_config_strlist swig_types[6]
#define SWIGTYPE_p_config_strlist_head swig_types[7]
#define SWIGTYPE_p_config_stub swig_types[8]
#define SWIGTYPE_p_delegpt swig_types[9]
#define SWIGTYPE_p_delegpt_addr swig_types[10]
#define SWIGTYPE_p_delegpt_ns swig_types[11]
#define SWIGTYPE_p_dns_msg swig_types[12]
#define SWIGTYPE_p_edns_data swig_types[13]
#define SWIGTYPE_p_edns_known_option swig_types[14]
#define SWIGTYPE_p_edns_option swig_types[15]
#define SWIGTYPE_p_f_p_struct_module_qstate__void swig_types[16]
#define SWIGTYPE_p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int__int swig_types[17]
#define SWIGTYPE_p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int_p_p_struct_module_qstate__int swig_types[18]
#define SWIGTYPE_p_f_p_struct_query_info_unsigned_short_int_int_int_int_p_struct_sockaddr_storage_socklen_t_p_unsigned_char_size_t_int_int_p_char_p_struct_module_qstate_p_int__p_outbound_entry swig_types[19]
#define SWIGTYPE_p_hashvalue_type swig_types[20]
#define SWIGTYPE_p_infra_cache swig_types[21]
#define SWIGTYPE_p_int swig_types[22]
#define SWIGTYPE_p_iter_forwards swig_types[23]
#define SWIGTYPE_p_iter_hints swig_types[24]
#define SWIGTYPE_p_iter_hints_stub swig_types[25]
#define SWIGTYPE_p_key_cache swig_types[26]
#define SWIGTYPE_p_lock_rw_type swig_types[27]
#define SWIGTYPE_p_long_long swig_types[28]
#define SWIGTYPE_p_lruhash_entry swig_types[29]
#define SWIGTYPE_p_mesh_area swig_types[30]
#define SWIGTYPE_p_mesh_reply swig_types[31]
#define SWIGTYPE_p_mesh_state swig_types[32]
#define SWIGTYPE_p_module_env swig_types[33]
#define SWIGTYPE_p_module_qstate swig_types[34]
#define SWIGTYPE_p_p_char swig_types[35]
#define SWIGTYPE_p_p_dns_msg swig_types[36]
#define SWIGTYPE_p_p_edns_option swig_types[37]
#define SWIGTYPE_p_p_void swig_types[38]
#define SWIGTYPE_p_packed_rrset_data swig_types[39]
#define SWIGTYPE_p_packed_rrset_key swig_types[40]
#define SWIGTYPE_p_query_info swig_types[41]
#define SWIGTYPE_p_regional swig_types[42]
#define SWIGTYPE_p_reply_info swig_types[43]
#define SWIGTYPE_p_rrset_cache swig_types[44]
#define SWIGTYPE_p_rrset_ref swig_types[45]
#define SWIGTYPE_p_short swig_types[46]
#define SWIGTYPE_p_signed_char swig_types[47]
#define SWIGTYPE_p_slabhash swig_types[48]
#define SWIGTYPE_p_sldns_buffer swig_types[49]
#define SWIGTYPE_p_sockaddr_storage swig_types[50]
#define SWIGTYPE_p_time_t swig_types[51]
#define SWIGTYPE_p_timeval swig_types[52]
#define SWIGTYPE_p_ub_packed_rrset_key swig_types[53]
#define SWIGTYPE_p_ub_randstate swig_types[54]
#define SWIGTYPE_p_unsigned_char swig_types[55]
#define SWIGTYPE_p_unsigned_int swig_types[56]
#define SWIGTYPE_p_unsigned_long_long swig_types[57]
#define SWIGTYPE_p_unsigned_short swig_types[58]
#define SWIGTYPE_p_val_anchors swig_types[59]
#define SWIGTYPE_p_val_neg_cache swig_types[60]
#define SWIGTYPE_p_void swig_types[61]
#define SWIGTYPE_p_worker swig_types[62]
static swig_type_info *swig_types[64];
static swig_module_info swig_module = {swig_types, 63, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#ifdef SWIG_TypeQuery
# undef SWIG_TypeQuery
#endif
#define SWIG_TypeQuery SWIG_Python_TypeQuery

/*-----------------------------------------------
              @(target):= _unboundmodule.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__unboundmodule

#else
#  define SWIG_init    init_unboundmodule

#endif
#define SWIG_name    "_unboundmodule"

#define SWIG_as_voidptr(a) (void *)((const void *)(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),(void**)(a)) 


/* restore state of warning output, remove the functioncast ignore */
#pragma GCC diagnostic pop
/**
 * \file
 * This is the interface between the unbound server and a python module
 * called to perform operations on queries.
 */
   #include <sys/types.h>
   #include <time.h>
   #ifdef HAVE_SYS_SOCKET_H
   #include <sys/socket.h>
   #endif
   #ifdef HAVE_NETINET_IN_H
   #include <netinet/in.h>
   #endif
   #ifdef HAVE_ARPA_INET_H
   #include <arpa/inet.h>
   #endif
   #ifdef HAVE_NETDB_H
   #include <netdb.h>
   #endif
   #ifdef HAVE_SYS_UN_H
   #include <sys/un.h>
   #endif
   #include <stdarg.h>
   #include "config.h"
   #include "util/log.h"
   #include "util/module.h"
   #include "util/netevent.h"
   #include "util/regional.h"
   #include "util/config_file.h"
   #include "util/data/msgreply.h"
   #include "util/data/packed_rrset.h"
   #include "util/data/dname.h"
   #include "util/storage/lruhash.h"
   #include "services/cache/dns.h"
   #include "services/mesh.h"
   #include "iterator/iter_delegpt.h"
   #include "iterator/iter_hints.h"
   #include "iterator/iter_utils.h"
   #include "sldns/wire2str.h"
   #include "sldns/str2wire.h"
   #include "sldns/pkthdr.h"


#include <stdint.h>		// Use the C99 official header


   /* converts [len][data][len][data][0] string to a List of labels (PyBytes) */
   PyObject* GetNameAsLabelList(const char* name, int len) {
     PyObject* list;
     int cnt=0, i;

     i = 0;
     while (i < len) {
        i += ((unsigned int)name[i]) + 1;
        cnt++;
     }

     list = PyList_New(cnt);
     i = 0; cnt = 0;
     while (i < len) {
        char buf[LDNS_MAX_LABELLEN+1];
        if(((unsigned int)name[i])+1 <= (unsigned int)sizeof(buf) &&
                i+(int)((unsigned int)name[i]) < len) {
                memmove(buf, name + i + 1, (unsigned int)name[i]);
                buf[(unsigned int)name[i]] = 0;
                PyList_SetItem(list, cnt, PyString_FromString(buf));
        }
        i += ((unsigned int)name[i]) + 1;
        cnt++;
     }
     return list;
   }

   /* converts an array of strings (char**) to a List of strings */
   PyObject* CharArrayAsStringList(char** array, int len) {
     PyObject* list;
     int i;

     if(!array||len==0) return PyList_New(0);

     list = PyList_New(len);
     for (i=0; i < len; i++) {
            PyList_SET_ITEM(list, i, PyString_FromString(array[i]));
     }
     return list;
   }


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
  if (PyBytes_Check(obj))
#else
  if (PyUnicode_Check(obj))
#endif
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
    int ret = SWIG_OK;
#if PY_VERSION_HEX>=0x03000000
#if !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    if (!obj)
      return SWIG_TypeError;
    if (alloc)
      *alloc = SWIG_NEWOBJ;
#endif
    if (PyBytes_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#else
    if (PyString_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#endif
    if (cptr) {
      if (alloc) {
	if (*alloc == SWIG_NEWOBJ) {
	  *cptr = (char *)memcpy(malloc((len + 1)*sizeof(char)), cstr, sizeof(char)*(len + 1));
	  *alloc = SWIG_NEWOBJ;
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
	*cptr = PyBytes_AsString(obj);
#else
	assert(0); /* Should never reach here with Unicode strings in Python 3 */
#endif
#else
	*cptr = SWIG_Python_str_AsChar(obj);
        if (!*cptr)
          ret = SWIG_TypeError;
#endif
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000 && !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    Py_XDECREF(obj);
#endif
    return ret;
  } else {
#if defined(SWIG_PYTHON_2_UNICODE)
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
#error "Cannot use both SWIG_PYTHON_2_UNICODE and SWIG_PYTHON_STRICT_BYTE_CHAR at once"
#endif
#if PY_VERSION_HEX<0x03000000
    if (PyUnicode_Check(obj)) {
      char *cstr; Py_ssize_t len;
      if (!alloc && cptr) {
        return SWIG_RuntimeError;
      }
      obj = PyUnicode_AsUTF8String(obj);
      if (!obj)
        return SWIG_TypeError;
      if (PyString_AsStringAndSize(obj, &cstr, &len) != -1) {
        if (cptr) {
          if (alloc) *alloc = SWIG_NEWOBJ;
          *cptr = (char *)memcpy(malloc((len + 1)*sizeof(char)), cstr, sizeof(char)*(len + 1));
        }
        if (psize) *psize = len + 1;

        Py_XDECREF(obj);
        return SWIG_OK;
      } else {
        Py_XDECREF(obj);
      }
    }
#endif
#endif

    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}





#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = (double) PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = (int)(v);
    }
  }  
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong((long)(value));
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_short  (unsigned short value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


   enum enum_rr_class  {
      RR_CLASS_IN = 1,
      RR_CLASS_CH = 3,
      RR_CLASS_HS = 4,
      RR_CLASS_NONE = 254,
      RR_CLASS_ANY = 255,
   };

   enum enum_rr_type {
      RR_TYPE_A = 1,
      RR_TYPE_NS = 2,
      RR_TYPE_MD = 3,
      RR_TYPE_MF = 4,
      RR_TYPE_CNAME = 5,
      RR_TYPE_SOA = 6,
      RR_TYPE_MB = 7,
      RR_TYPE_MG = 8,
      RR_TYPE_MR = 9,
      RR_TYPE_NULL = 10,
      RR_TYPE_WKS = 11,
      RR_TYPE_PTR = 12,
      RR_TYPE_HINFO = 13,
      RR_TYPE_MINFO = 14,
      RR_TYPE_MX = 15,
      RR_TYPE_TXT = 16,
      RR_TYPE_RP = 17,
      RR_TYPE_AFSDB = 18,
      RR_TYPE_X25 = 19,
      RR_TYPE_ISDN = 20,
      RR_TYPE_RT = 21,
      RR_TYPE_NSAP = 22,
      RR_TYPE_NSAP_PTR = 23,
      RR_TYPE_SIG = 24,
      RR_TYPE_KEY = 25,
      RR_TYPE_PX = 26,
      RR_TYPE_GPOS = 27,
      RR_TYPE_AAAA = 28,
      RR_TYPE_LOC = 29,
      RR_TYPE_NXT = 30,
      RR_TYPE_EID = 31,
      RR_TYPE_NIMLOC = 32,
      RR_TYPE_SRV = 33,
      RR_TYPE_ATMA = 34,
      RR_TYPE_NAPTR = 35,
      RR_TYPE_KX = 36,
      RR_TYPE_CERT = 37,
      RR_TYPE_A6 = 38,
      RR_TYPE_DNAME = 39,
      RR_TYPE_SINK = 40,
      RR_TYPE_OPT = 41,
      RR_TYPE_APL = 42,
      RR_TYPE_DS = 43,
      RR_TYPE_SSHFP = 44,
      RR_TYPE_IPSECKEY = 45,
      RR_TYPE_RRSIG = 46,
      RR_TYPE_NSEC = 47,
      RR_TYPE_DNSKEY = 48,
      RR_TYPE_DHCID = 49,
      RR_TYPE_NSEC3 = 50,
      RR_TYPE_NSEC3PARAMS = 51,
      RR_TYPE_UINFO = 100,
      RR_TYPE_UID = 101,
      RR_TYPE_GID = 102,
      RR_TYPE_UNSPEC = 103,
      RR_TYPE_TSIG = 250,
      RR_TYPE_IXFR = 251,
      RR_TYPE_AXFR = 252,
      RR_TYPE_MAILB = 253,
      RR_TYPE_MAILA = 254,
      RR_TYPE_ANY = 255,
      RR_TYPE_DLV = 32769,
   };

   PyObject* _get_qname(struct query_info* q) {
      return PyBytes_FromStringAndSize((char*)q->qname, q->qname_len);
   }

   PyObject* _get_qname_components(struct query_info* q) {
      return GetNameAsLabelList((const char*)q->qname, q->qname_len);
   }


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


   PyObject* dnameAsStr(PyObject* dname) {
       char buf[LDNS_MAX_DOMAINLEN+1];
       buf[0] = '\0';
       dname_str((uint8_t*)PyBytes_AsString(dname), buf);
       return PyString_FromString(buf);
   }


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short (PyObject * obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = (unsigned short)(v);
    }
  }  
  return res;
}


   PyObject* _get_dname(struct packed_rrset_key* k) {
      return PyBytes_FromStringAndSize((char*)k->dname, k->dname_len);
   }
   PyObject* _get_dname_components(struct packed_rrset_key* k) {
      return GetNameAsLabelList((char*)k->dname, k->dname_len);
   }


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, mant_min, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong((long)(value));
}
#endif


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = (unsigned int)(v);
    }
  }  
  return res;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, 0, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = (size_t)(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
    unsigned long long v;
    res = SWIG_AsVal_unsigned_SS_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = (size_t)(v);
  }
#endif
  return res;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyInt_FromLong((long)(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    return SWIG_From_unsigned_SS_long  ((unsigned long)(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(size_t) <= sizeof(unsigned long long) */
    return SWIG_From_unsigned_SS_long_SS_long  ((unsigned long long)(value));
  }
#endif
}


   PyObject* _get_data_rr_len(struct packed_rrset_data* d, int idx) {
     if ((d != NULL) && (idx >= 0) &&
             ((size_t)idx < (d->count+d->rrsig_count)))
        return PyInt_FromLong(d->rr_len[idx]);
     return Py_None;
   }
   void _set_data_rr_ttl(struct packed_rrset_data* d, int idx, uint32_t ttl)
   {
     if ((d != NULL) && (idx >= 0) &&
             ((size_t)idx < (d->count+d->rrsig_count)))
        d->rr_ttl[idx] = ttl;
   }
   PyObject* _get_data_rr_ttl(struct packed_rrset_data* d, int idx) {
     if ((d != NULL) && (idx >= 0) &&
             ((size_t)idx < (d->count+d->rrsig_count)))
        return PyInt_FromLong(d->rr_ttl[idx]);
     return Py_None;
   }
   PyObject* _get_data_rr_data(struct packed_rrset_data* d, int idx) {
     if ((d != NULL) && (idx >= 0) &&
             ((size_t)idx < (d->count+d->rrsig_count)))
        return PyBytes_FromStringAndSize((char*)d->rr_data[idx],
                d->rr_len[idx]);
     return Py_None;
   }


   struct ub_packed_rrset_key* _rrset_rrsets_get(struct reply_info* r, int idx) {
     if ((r != NULL) && (idx >= 0) && ((size_t)idx < r->rrset_count))
        return r->rrsets[idx];
     return NULL;
   }

   struct rrset_ref* _rrset_ref_get(struct reply_info* r, int idx) {
     if ((r != NULL) && (idx >= 0) && ((size_t)idx < r->rrset_count)) {
/* printf("_rrset_ref_get: %lX key:%lX\n", r->ref + idx, r->ref[idx].key); */
             return &(r->ref[idx]);
/*        return &(r->ref[idx]); */
     }
/* printf("_rrset_ref_get: NULL\n"); */
     return NULL;
   }


    static size_t _sockaddr_storage_len(const struct sockaddr_storage *ss) {
        if (ss == NULL) {
            return 0;
        }

        switch (ss->ss_family) {
        case AF_INET:  return sizeof(struct sockaddr_in);
        case AF_INET6: return sizeof(struct sockaddr_in6);
#ifdef HAVE_SYS_UN_H
        case AF_UNIX:  return sizeof(struct sockaddr_un);
#endif
        default:
            return 0;
        }
    }

    PyObject *_sockaddr_storage_family(const struct sockaddr_storage *ss) {
        if (ss == NULL) {
            return Py_None;
        }

        switch (ss->ss_family) {
        case AF_INET:  return PyUnicode_FromString("ip4");
        case AF_INET6: return PyUnicode_FromString("ip6");
        case AF_UNIX:  return PyUnicode_FromString("unix");
        default:
            return Py_None;
        }
    }

    PyObject *_sockaddr_storage_addr(const struct sockaddr_storage *ss) {
        const struct sockaddr *sa;
        size_t sa_len;
        char name[NI_MAXHOST] = {0};

        if (ss == NULL) {
            return Py_None;
        }

        sa = (struct sockaddr *)ss;
        sa_len = _sockaddr_storage_len(ss);
        if (sa_len == 0) {
            return Py_None;
        }

        if (getnameinfo(sa, sa_len, name, sizeof(name), NULL, 0, NI_NUMERICHOST) != 0) {
            return Py_None;
        }

        return PyUnicode_FromString(name);
    }

    PyObject *_sockaddr_storage_raw_addr(const struct sockaddr_storage *ss) {
        size_t sa_len;

        if (ss == NULL) {
            return Py_None;
        }

        sa_len = _sockaddr_storage_len(ss);
        if (sa_len == 0) {
            return Py_None;
        }

        if (ss->ss_family == AF_INET) {
            const struct sockaddr_in *sa = (struct sockaddr_in *)ss;
            const struct in_addr *raw = (struct in_addr *)&sa->sin_addr;
            return PyBytes_FromStringAndSize((const char *)raw, sizeof(*raw));
        }

        if (ss->ss_family == AF_INET6) {
            const struct sockaddr_in6 *sa = (struct sockaddr_in6 *)ss;
            const struct in6_addr *raw = (struct in6_addr *)&sa->sin6_addr;
            return PyBytes_FromStringAndSize((const char *)raw, sizeof(*raw));
        }

#ifdef HAVE_SYS_UN_H
        if (ss->ss_family == AF_UNIX) {
            const struct sockaddr_un *sa = (struct sockaddr_un *)ss;
            return PyBytes_FromString(sa->sun_path);
        }
#endif

        return Py_None;
    }

    PyObject *_sockaddr_storage_port(const struct sockaddr_storage *ss) {
        if (ss == NULL) {
            return Py_None;
        }

        if (ss->ss_family == AF_INET) {
            const struct sockaddr_in *sa4 = (struct sockaddr_in *)ss;
            return PyInt_FromLong(ntohs(sa4->sin_port));
        }

        if (ss->ss_family == AF_INET6) {
            const struct sockaddr_in6 *sa6 = (struct sockaddr_in6 *)ss;
            return PyInt_FromLong(ntohs(sa6->sin6_port));
        }

        return Py_None;
    }

    PyObject *_sockaddr_storage_flowinfo(const struct sockaddr_storage *ss) {
        const struct sockaddr_in6 *sa6;

        if (ss == NULL || ss->ss_family != AF_INET6) {
            return Py_None;
        }

        sa6 = (struct sockaddr_in6 *)ss;
        return PyInt_FromLong(ntohl(sa6->sin6_flowinfo));
    }

    PyObject *_sockaddr_storage_scope_id(const struct sockaddr_storage *ss) {
        const struct sockaddr_in6 *sa6;

        if (ss == NULL || ss->ss_family != AF_INET6) {
            return Py_None;
        }

        sa6 = (struct sockaddr_in6 *)ss;
        return PyInt_FromLong(ntohl(sa6->sin6_scope_id));
    }


    PyObject* _edns_option_opt_code_get(struct edns_option* option) {
        uint16_t opt_code = option->opt_code;
        return PyInt_FromLong(opt_code);
    }

    PyObject* _edns_option_opt_data_get(struct edns_option* option) {
        return PyByteArray_FromStringAndSize((void*)option->opt_data,
            option->opt_len);
    }


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (PyObject * obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = (unsigned char)(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


    struct edns_option** _edns_data_opt_list_get(struct edns_data* edns) {
       return &edns->opt_list_in;
    }


    PyObject* _module_env_now_get(struct module_env* env) {
        double ts = env->now_tv->tv_sec + env->now_tv->tv_usec / 1e6;
        return PyFloat_FromDouble(ts);
    }


 enum enum_return_rcode {
   RCODE_NOERROR = 0,
   RCODE_FORMERR = 1,
   RCODE_SERVFAIL = 2,
   RCODE_NXDOMAIN = 3,
   RCODE_NOTIMPL = 4,
   RCODE_REFUSED = 5,
   RCODE_YXDOMAIN = 6,
   RCODE_YXRRSET = 7,
   RCODE_NXRRSET = 8,
   RCODE_NOTAUTH = 9,
   RCODE_NOTZONE = 10
 };


   enum module_ext_state _ext_state_get(struct module_qstate* q, int idx) {
     if ((q != NULL) && (idx >= 0) && (idx < MAX_MODULE)) {
        return q->ext_state[idx];
     }
     return 0;
   }

   void _ext_state_set(struct module_qstate* q, int idx, enum module_ext_state state) {
     if ((q != NULL) && (idx >= 0) && (idx < MAX_MODULE)) {
        q->ext_state[idx] = state;
     }
   }

   int edns_opt_list_is_empty(struct edns_option** opt) {
        if (!opt || !(*opt)) return 1;
        return 0;
   }

   struct edns_option* _dereference_edns_option(struct edns_option** opt) {
        if (!opt) return NULL;
        return *opt;
   }

   struct edns_option** _p_p_edns_option_get_next(struct edns_option** opt) {
        return &(*opt)->next;
   }

   struct edns_option** _edns_opts_front_in_get(struct module_qstate* q) {
        return &q->edns_opts_front_in;
   }

   struct edns_option** _edns_opts_back_out_get(struct module_qstate* q) {
        return &q->edns_opts_back_out;
   }

   struct edns_option** _edns_opts_back_in_get(struct module_qstate* q) {
        return &q->edns_opts_back_in;
   }

   struct edns_option** _edns_opts_front_out_get(struct module_qstate* q) {
        return &q->edns_opts_front_out;
   }


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj((char *)(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
      return PyBytes_FromStringAndSize(carray, (Py_ssize_t)(size));
#else
      return PyUnicode_DecodeUTF8(carray, (Py_ssize_t)(size), "surrogateescape");
#endif
#else
      return PyString_FromStringAndSize(carray, (Py_ssize_t)(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


   PyObject* _get_ifs_tuple(struct config_file* cfg) {
      return CharArrayAsStringList(cfg->ifs, cfg->num_ifs);
   }
   PyObject* _get_ifs_out_tuple(struct config_file* cfg) {
      return CharArrayAsStringList(cfg->out_ifs, cfg->num_out_ifs);
   }


   PyObject* _get_dp_dname(struct delegpt* dp) {
      return PyBytes_FromStringAndSize((char*)dp->name, dp->namelen);
   }
   PyObject* _get_dp_dname_components(struct delegpt* dp) {
      return GetNameAsLabelList((char*)dp->name, dp->namelen);
   }
   PyObject* _get_dpns_dname(struct delegpt_ns* dpns) {
      return PyBytes_FromStringAndSize((char*)dpns->name, dpns->namelen);
   }
   PyObject* _get_dpns_dname_components(struct delegpt_ns* dpns) {
      return GetNameAsLabelList((char*)dpns->name, dpns->namelen);
   }

  PyObject* _delegpt_addr_addr_get(struct delegpt_addr* target) {
     char dest[64];
     delegpt_addr_addr2str(target, dest, 64);
     if (dest[0] == 0)
        return Py_None;
     return PyBytes_FromString(dest);
  }



int checkList(PyObject *l)
{
    PyObject* item;
    int i;

    if (l == Py_None)
       return 1;

    if (PyList_Check(l))
    {
       for (i=0; i < PyList_Size(l); i++)
       {
           item = PyList_GetItem(l, i);
           if (!PyBytes_Check(item) && !PyUnicode_Check(item))
              return 0;
       }
       return 1;
    }

    return 0;
}

int pushRRList(sldns_buffer* qb, PyObject *l, uint32_t default_ttl, int qsec,
        size_t count_offset)
{
    PyObject* item;
    int i;
    size_t len;
    char* s;
    PyObject* ascstr;

    for (i=0; i < PyList_Size(l); i++)
    {
        ascstr = NULL;
        item = PyList_GetItem(l, i);
        if(PyObject_TypeCheck(item, &PyBytes_Type)) {
                s = PyBytes_AsString(item);
        } else {
                ascstr = PyUnicode_AsASCIIString(item);
                s = PyBytes_AsString(ascstr);
        }

        len = sldns_buffer_remaining(qb);
        if(qsec) {
                if(sldns_str2wire_rr_question_buf(s,
                        sldns_buffer_current(qb), &len, NULL, NULL, 0, NULL, 0)
                        != 0) {
                        if(ascstr)
                            Py_DECREF(ascstr);
                        return 0;
                }
        } else {
                if(sldns_str2wire_rr_buf(s,
                        sldns_buffer_current(qb), &len, NULL, default_ttl,
                        NULL, 0, NULL, 0) != 0) {
                        if(ascstr)
                            Py_DECREF(ascstr);
                        return 0;
                }
        }
        if(ascstr)
            Py_DECREF(ascstr);
        sldns_buffer_skip(qb, len);

        sldns_buffer_write_u16_at(qb, count_offset,
                sldns_buffer_read_u16_at(qb, count_offset)+1);
    }
    return 1;
}

int set_return_msg(struct module_qstate* qstate,
                   const char* rr_name, sldns_rr_type rr_type, sldns_rr_class rr_class , uint16_t flags, uint32_t default_ttl,
                   PyObject* question, PyObject* answer, PyObject* authority, PyObject* additional)
{
     sldns_buffer *qb = 0;
     int res = 1;
     size_t l;
     uint16_t PKT_QR = 1;
     uint16_t PKT_AA = 2;
     uint16_t PKT_TC = 4;
     uint16_t PKT_RD = 8;
     uint16_t PKT_CD = 16;
     uint16_t PKT_RA = 32;
     uint16_t PKT_AD = 64;

     if ((!checkList(question)) || (!checkList(answer)) || (!checkList(authority)) || (!checkList(additional)))
        return 0;
     if ((qb = sldns_buffer_new(LDNS_RR_BUF_SIZE)) == 0) return 0;

     /* write header */
     sldns_buffer_write_u16(qb, 0); /* ID */
     sldns_buffer_write_u16(qb, 0); /* flags */
     sldns_buffer_write_u16(qb, 1); /* qdcount */
     sldns_buffer_write_u16(qb, 0); /* ancount */
     sldns_buffer_write_u16(qb, 0); /* nscount */
     sldns_buffer_write_u16(qb, 0); /* arcount */
     if ((flags&PKT_QR)) LDNS_QR_SET(sldns_buffer_begin(qb));
     if ((flags&PKT_AA)) LDNS_AA_SET(sldns_buffer_begin(qb));
     if ((flags&PKT_TC)) LDNS_TC_SET(sldns_buffer_begin(qb));
     if ((flags&PKT_RD)) LDNS_RD_SET(sldns_buffer_begin(qb));
     if ((flags&PKT_CD)) LDNS_CD_SET(sldns_buffer_begin(qb));
     if ((flags&PKT_RA)) LDNS_RA_SET(sldns_buffer_begin(qb));
     if ((flags&PKT_AD)) LDNS_AD_SET(sldns_buffer_begin(qb));

     /* write the query */
     l = sldns_buffer_remaining(qb);
     if(sldns_str2wire_dname_buf(rr_name, sldns_buffer_current(qb), &l) != 0) {
             sldns_buffer_free(qb);
             return 0;
     }
     sldns_buffer_skip(qb, l);
     if (rr_type == 0) { rr_type = LDNS_RR_TYPE_A; }
     if (rr_class == 0) { rr_class = LDNS_RR_CLASS_IN; }
     sldns_buffer_write_u16(qb, rr_type);
     sldns_buffer_write_u16(qb, rr_class);

     /* write RR sections */
     if(res && !pushRRList(qb, question, default_ttl, 1, LDNS_QDCOUNT_OFF))
             res = 0;
     if(res && !pushRRList(qb, answer, default_ttl, 0, LDNS_ANCOUNT_OFF))
             res = 0;
     if(res && !pushRRList(qb, authority, default_ttl, 0, LDNS_NSCOUNT_OFF))
             res = 0;
     if(res && !pushRRList(qb, additional, default_ttl, 0, LDNS_ARCOUNT_OFF))
             res = 0;

     if (res) res = createResponse(qstate, qb);

     if (qb) sldns_buffer_free(qb);
     return res;
}


#define BIT_RD 0x100

struct delegpt* find_delegation(struct module_qstate* qstate, char *nm, size_t nmlen)
{
    struct delegpt *dp;
    struct dns_msg *msg = NULL;
    struct regional* region = qstate->env->scratch;
    char b[260];
    struct query_info qinfo;
    struct iter_hints_stub* stub;
    uint32_t timenow = *qstate->env->now;

    regional_free_all(region);
    qinfo.qname = (uint8_t*)nm;
    qinfo.qname_len = nmlen;
    qinfo.qtype = LDNS_RR_TYPE_A;
    qinfo.qclass = LDNS_RR_CLASS_IN;

    while(1) {
        dp = dns_cache_find_delegation(qstate->env, (uint8_t*)nm, nmlen, qinfo.qtype, qinfo.qclass, region, &msg, timenow, 0, NULL, 0);
        if(!dp)
            return NULL;
        if(iter_dp_is_useless(&qinfo, BIT_RD, dp,
                qstate->env->cfg->do_ip4, qstate->env->cfg->do_ip6,
                qstate->env->cfg->do_nat64)) {
            if (dname_is_root((uint8_t*)nm))
                return NULL;
            nm = (char*)dp->name;
            nmlen = dp->namelen;
            dname_remove_label((uint8_t**)&nm, &nmlen);
            dname_str((uint8_t*)nm, b);
            continue;
        }
        stub = hints_lookup_stub(qstate->env->hints, qinfo.qname, qinfo.qclass, dp);
        if (stub) {
            return stub->dp;
        } else {
            return dp;
        }
    }
    return NULL;
}


void pymod_log_info(const char* str) { log_info("%s", str); }
void pymod_log_err(const char* str) { log_err("%s", str); }
void pymod_log_warn(const char* str) { log_warn("%s", str); }
void pymod_verbose(enum verbosity_value level, const char* str) {
        verbose(level, "%s", str); }


    /* This function is called by unbound in order to call the python
     * callback function. */
    int python_inplace_cb_reply_generic(struct query_info* qinfo,
        struct module_qstate* qstate, struct reply_info* rep, int rcode,
        struct edns_data* edns, struct edns_option** opt_list_out,
        struct comm_reply* repinfo, struct regional* region,
        struct timeval* start_time, int id, void* python_callback)
    {
        PyObject *func = NULL, *py_edns = NULL, *py_qstate = NULL;
        PyObject *py_opt_list_out = NULL, *py_qinfo = NULL;
        PyObject *py_rep = NULL, *py_repinfo = NULL, *py_region = NULL;
        PyObject *py_args = NULL, *py_kwargs = NULL, *result = NULL;
        int res = 0;
        double py_start_time = ((double)start_time->tv_sec) + ((double)start_time->tv_usec) / 1.0e6;

        PyGILState_STATE gstate = PyGILState_Ensure();

        func = (PyObject *) python_callback;
        py_edns = SWIG_NewPointerObj((void*) edns, SWIGTYPE_p_edns_data, 0);
        py_qstate = SWIG_NewPointerObj((void*) qstate,
            SWIGTYPE_p_module_qstate, 0);
        py_opt_list_out = SWIG_NewPointerObj((void*) opt_list_out,
            SWIGTYPE_p_p_edns_option, 0);
        py_qinfo = SWIG_NewPointerObj((void*) qinfo, SWIGTYPE_p_query_info, 0);
        py_rep = SWIG_NewPointerObj((void*) rep, SWIGTYPE_p_reply_info, 0);
        py_repinfo = SWIG_NewPointerObj((void*) repinfo, SWIGTYPE_p_comm_reply, 0);
        py_region = SWIG_NewPointerObj((void*) region, SWIGTYPE_p_regional, 0);
        if(!(py_qinfo && py_qstate && py_rep && py_edns && py_opt_list_out
                && py_region && py_repinfo)) {
                log_err("pythonmod: swig pointer failure in python_inplace_cb_reply_generic");
                goto out;
        }
        py_args = Py_BuildValue("(OOOiOOO)", py_qinfo, py_qstate, py_rep,
                rcode, py_edns, py_opt_list_out, py_region);
        py_kwargs = Py_BuildValue("{s:O,s:d}", "repinfo", py_repinfo, "start_time",
                py_start_time);
        if(!(py_args && py_kwargs)) {
                log_err("pythonmod: BuildValue failure in python_inplace_cb_reply_generic");
                goto out;
        }
        result = PyObject_Call(func, py_args, py_kwargs);
        if (result) {
            res = PyInt_AsLong(result);
        }
out:
        Py_XDECREF(py_edns);
        Py_XDECREF(py_qstate);
        Py_XDECREF(py_opt_list_out);
        Py_XDECREF(py_qinfo);
        Py_XDECREF(py_rep);
        Py_XDECREF(py_repinfo);
        Py_XDECREF(py_region);
        Py_XDECREF(py_args);
        Py_XDECREF(py_kwargs);
        Py_XDECREF(result);
        PyGILState_Release(gstate);
        return res;
    }

    /* register a callback */
    static int python_inplace_cb_register(enum inplace_cb_list_type type,
        PyObject* py_cb, struct module_env* env, int id)
    {
        int ret = inplace_cb_register(python_inplace_cb_reply_generic,
                type, (void*) py_cb, env, id);
        if (ret) Py_INCREF(py_cb);
        return ret;
    }

    /* Swig implementations for Python */
    static int register_inplace_cb_reply(PyObject* py_cb,
        struct module_env* env, int id)
    {
        return python_inplace_cb_register(inplace_cb_reply, py_cb, env, id);
    }
    static int register_inplace_cb_reply_cache(PyObject* py_cb,
        struct module_env* env, int id)
    {
        return python_inplace_cb_register(inplace_cb_reply_cache, py_cb, env, id);
    }
    static int register_inplace_cb_reply_local(PyObject* py_cb,
        struct module_env* env, int id)
    {
        return python_inplace_cb_register(inplace_cb_reply_local, py_cb, env, id);
    }
    static int register_inplace_cb_reply_servfail(PyObject* py_cb,
        struct module_env* env, int id)
    {
        return python_inplace_cb_register(inplace_cb_reply_servfail,
                py_cb, env, id);
    }

    int python_inplace_cb_query_generic(
        struct query_info* qinfo, uint16_t flags, struct module_qstate* qstate,
        struct sockaddr_storage* addr, socklen_t addrlen,
        uint8_t* zone, size_t zonelen, struct regional* region, int id,
        void* python_callback)
    {
        int res = 0;
        PyObject *func = python_callback;
        PyObject *py_args = NULL, *py_kwargs = NULL, *result = NULL;
        PyObject *py_qinfo = NULL;
        PyObject *py_qstate = NULL;
        PyObject *py_addr = NULL;
        PyObject *py_zone = NULL;
        PyObject *py_region = NULL;

        PyGILState_STATE gstate = PyGILState_Ensure();

        py_qinfo = SWIG_NewPointerObj((void*) qinfo, SWIGTYPE_p_query_info, 0);
        py_qstate = SWIG_NewPointerObj((void*) qstate, SWIGTYPE_p_module_qstate, 0);
        py_addr = SWIG_NewPointerObj((void *) addr, SWIGTYPE_p_sockaddr_storage, 0);
        py_zone = PyBytes_FromStringAndSize((const char *)zone, zonelen);
        py_region = SWIG_NewPointerObj((void*) region, SWIGTYPE_p_regional, 0);
        if(!(py_qinfo && py_qstate && py_addr && py_zone && py_region)) {
                log_err("pythonmod: swig pointer failure in python_inplace_cb_query_generic");
                goto out;
        }
        py_args = Py_BuildValue("(OiOOOO)", py_qinfo, flags, py_qstate, py_addr, py_zone, py_region);
        py_kwargs = Py_BuildValue("{}");
        if(!(py_args && py_kwargs)) {
                log_err("pythonmod: BuildValue failure in python_inplace_cb_query_generic");
                goto out;
        }
        result = PyObject_Call(func, py_args, py_kwargs);
        if (result) {
            res = PyInt_AsLong(result);
        }
out:
        Py_XDECREF(py_qinfo);
        Py_XDECREF(py_qstate);
        Py_XDECREF(py_addr);
        Py_XDECREF(py_zone);
        Py_XDECREF(py_region);

        Py_XDECREF(py_args);
        Py_XDECREF(py_kwargs);
        Py_XDECREF(result);

        PyGILState_Release(gstate);

        return res;
    }

    static int register_inplace_cb_query(PyObject* py_cb,
        struct module_env* env, int id)
    {
        int ret = inplace_cb_register(python_inplace_cb_query_generic,
                inplace_cb_query, (void*) py_cb, env, id);
        if (ret) Py_INCREF(py_cb);
        return ret;
    }

    int python_inplace_cb_query_response(struct module_qstate* qstate,
        struct dns_msg* response, int id, void* python_callback)
    {
        int res = 0;
        PyObject *func = python_callback;
        PyObject *py_qstate = NULL;
        PyObject *py_response = NULL;
        PyObject *py_args = NULL;
        PyObject *py_kwargs = NULL;
        PyObject *result = NULL;

        PyGILState_STATE gstate = PyGILState_Ensure();

        py_qstate = SWIG_NewPointerObj((void*) qstate, SWIGTYPE_p_module_qstate, 0);
        py_response = SWIG_NewPointerObj((void*) response, SWIGTYPE_p_dns_msg, 0);
        if(!(py_qstate && py_response)) {
                log_err("pythonmod: swig pointer failure in python_inplace_cb_query_response");
                goto out;
        }
        py_args = Py_BuildValue("(OO)", py_qstate, py_response);
        py_kwargs = Py_BuildValue("{}");
        if(!(py_args && py_kwargs)) {
                log_err("pythonmod: BuildValue failure in python_inplace_cb_query_response");
                goto out;
        }
        result = PyObject_Call(func, py_args, py_kwargs);
        if (result) {
            res = PyInt_AsLong(result);
        }
out:
        Py_XDECREF(py_qstate);
        Py_XDECREF(py_response);

        Py_XDECREF(py_args);
        Py_XDECREF(py_kwargs);
        Py_XDECREF(result);

        PyGILState_Release(gstate);

        return res;
    }

    static int register_inplace_cb_query_response(PyObject* py_cb,
        struct module_env* env, int id)
    {
        int ret = inplace_cb_register(python_inplace_cb_query_response,
            inplace_cb_query_response, (void*) py_cb, env, id);
        if (ret) Py_INCREF(py_cb);
        return ret;
    }

    int python_inplace_cb_edns_back_parsed_call(struct module_qstate* qstate,
        int id, void* python_callback)
    {
        int res = 0;
        PyObject *func = python_callback;
        PyObject *py_qstate = NULL;
        PyObject *py_args = NULL;
        PyObject *py_kwargs = NULL;
        PyObject *result = NULL;

        PyGILState_STATE gstate = PyGILState_Ensure();

        py_qstate = SWIG_NewPointerObj((void*) qstate, SWIGTYPE_p_module_qstate, 0);
        if(!py_qstate) {
                log_err("pythonmod: swig pointer failure in python_inplace_cb_edns_back_parsed_call");
                goto out;
        }
        py_args = Py_BuildValue("(O)", py_qstate);
        py_kwargs = Py_BuildValue("{}");
        if(!(py_args && py_kwargs)) {
                log_err("pythonmod: BuildValue failure in python_inplace_cb_edns_back_parsed_call");
                goto out;
        }
        result = PyObject_Call(func, py_args, py_kwargs);
        if (result) {
            res = PyInt_AsLong(result);
        }
out:
        Py_XDECREF(py_qstate);

        Py_XDECREF(py_args);
        Py_XDECREF(py_kwargs);
        Py_XDECREF(result);

        PyGILState_Release(gstate);

        return res;
    }

    static int register_inplace_cb_edns_back_parsed_call(PyObject* py_cb,
        struct module_env* env, int id)
    {
        int ret = inplace_cb_register(python_inplace_cb_edns_back_parsed_call,
            inplace_cb_edns_back_parsed, (void*) py_cb, env, id);
        if (ret) Py_INCREF(py_cb);
        return ret;
    }

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_GetNameAsLabelList(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  PyObject *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "GetNameAsLabelList", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetNameAsLabelList" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GetNameAsLabelList" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (PyObject *)GetNameAsLabelList((char const *)arg1,arg2);
  resultobj = result;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CharArrayAsStringList(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char **arg1 = (char **) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  PyObject *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "CharArrayAsStringList", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CharArrayAsStringList" "', argument " "1"" of type '" "char **""'"); 
  }
  arg1 = (char **)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CharArrayAsStringList" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (PyObject *)CharArrayAsStringList(arg1,arg2);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_query_info_qtype_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct query_info *arg1 = (struct query_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_query_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "query_info_qtype_get" "', argument " "1"" of type '" "struct query_info *""'"); 
  }
  arg1 = (struct query_info *)(argp1);
  result = (uint16_t) ((arg1)->qtype);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_query_info_qclass_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct query_info *arg1 = (struct query_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_query_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "query_info_qclass_get" "', argument " "1"" of type '" "struct query_info *""'"); 
  }
  arg1 = (struct query_info *)(argp1);
  result = (uint16_t) ((arg1)->qclass);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_query_info(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct query_info *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_query_info", 0, 0, 0)) SWIG_fail;
  result = (struct query_info *)calloc(1, sizeof(struct query_info));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_query_info, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_query_info(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct query_info *arg1 = (struct query_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_query_info, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_query_info" "', argument " "1"" of type '" "struct query_info *""'"); 
  }
  arg1 = (struct query_info *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *query_info_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_query_info, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *query_info_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap__get_qname(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct query_info *arg1 = (struct query_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_query_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_qname" "', argument " "1"" of type '" "struct query_info *""'"); 
  }
  arg1 = (struct query_info *)(argp1);
  result = (PyObject *)_get_qname(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__get_qname_components(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct query_info *arg1 = (struct query_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_query_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_qname_components" "', argument " "1"" of type '" "struct query_info *""'"); 
  }
  arg1 = (struct query_info *)(argp1);
  result = (PyObject *)_get_qname_components(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dnameAsStr(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  arg1 = swig_obj[0];
  result = (PyObject *)dnameAsStr(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_key_flags_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_key *arg1 = (struct packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint32_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_key_flags_get" "', argument " "1"" of type '" "struct packed_rrset_key *""'"); 
  }
  arg1 = (struct packed_rrset_key *)(argp1);
  result = (uint32_t) ((arg1)->flags);
  resultobj = SWIG_From_unsigned_SS_int((unsigned int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_key_type_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_key *arg1 = (struct packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_key_type_get" "', argument " "1"" of type '" "struct packed_rrset_key *""'"); 
  }
  arg1 = (struct packed_rrset_key *)(argp1);
  result = (uint16_t) ((arg1)->type);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_key_rrset_class_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_key *arg1 = (struct packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_key_rrset_class_get" "', argument " "1"" of type '" "struct packed_rrset_key *""'"); 
  }
  arg1 = (struct packed_rrset_key *)(argp1);
  result = (uint16_t) ((arg1)->rrset_class);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_packed_rrset_key(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_key *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_packed_rrset_key", 0, 0, 0)) SWIG_fail;
  result = (struct packed_rrset_key *)calloc(1, sizeof(struct packed_rrset_key));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_packed_rrset_key, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_packed_rrset_key(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_key *arg1 = (struct packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_key, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_packed_rrset_key" "', argument " "1"" of type '" "struct packed_rrset_key *""'"); 
  }
  arg1 = (struct packed_rrset_key *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *packed_rrset_key_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_packed_rrset_key, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *packed_rrset_key_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ntohs(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  uint16_t arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_short(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ntohs" "', argument " "1"" of type '" "uint16_t""'");
  } 
  arg1 = (uint16_t)(val1);
  result = (uint16_t)ntohs(arg1);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__get_dname(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_key *arg1 = (struct packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_dname" "', argument " "1"" of type '" "struct packed_rrset_key *""'"); 
  }
  arg1 = (struct packed_rrset_key *)(argp1);
  result = (PyObject *)_get_dname(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__get_dname_components(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_key *arg1 = (struct packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_dname_components" "', argument " "1"" of type '" "struct packed_rrset_key *""'"); 
  }
  arg1 = (struct packed_rrset_key *)(argp1);
  result = (PyObject *)_get_dname_components(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ub_packed_rrset_key_entry_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct ub_packed_rrset_key *arg1 = (struct ub_packed_rrset_key *) 0 ;
  struct lruhash_entry *arg2 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ub_packed_rrset_key_entry_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ub_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ub_packed_rrset_key_entry_set" "', argument " "1"" of type '" "struct ub_packed_rrset_key *""'"); 
  }
  arg1 = (struct ub_packed_rrset_key *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ub_packed_rrset_key_entry_set" "', argument " "2"" of type '" "struct lruhash_entry *""'"); 
  }
  arg2 = (struct lruhash_entry *)(argp2);
  if (arg1) (arg1)->entry = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ub_packed_rrset_key_entry_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct ub_packed_rrset_key *arg1 = (struct ub_packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct lruhash_entry *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ub_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ub_packed_rrset_key_entry_get" "', argument " "1"" of type '" "struct ub_packed_rrset_key *""'"); 
  }
  arg1 = (struct ub_packed_rrset_key *)(argp1);
  result = (struct lruhash_entry *)& ((arg1)->entry);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_lruhash_entry, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ub_packed_rrset_key_id_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct ub_packed_rrset_key *arg1 = (struct ub_packed_rrset_key *) 0 ;
  rrset_id_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ub_packed_rrset_key_id_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ub_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ub_packed_rrset_key_id_set" "', argument " "1"" of type '" "struct ub_packed_rrset_key *""'"); 
  }
  arg1 = (struct ub_packed_rrset_key *)(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ub_packed_rrset_key_id_set" "', argument " "2"" of type '" "rrset_id_type""'");
  } 
  arg2 = (rrset_id_type)(val2);
  if (arg1) (arg1)->id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ub_packed_rrset_key_id_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct ub_packed_rrset_key *arg1 = (struct ub_packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  rrset_id_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ub_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ub_packed_rrset_key_id_get" "', argument " "1"" of type '" "struct ub_packed_rrset_key *""'"); 
  }
  arg1 = (struct ub_packed_rrset_key *)(argp1);
  result = (rrset_id_type) ((arg1)->id);
  resultobj = SWIG_From_long_SS_long((long long)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ub_packed_rrset_key_rk_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct ub_packed_rrset_key *arg1 = (struct ub_packed_rrset_key *) 0 ;
  struct packed_rrset_key *arg2 = (struct packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ub_packed_rrset_key_rk_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ub_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ub_packed_rrset_key_rk_set" "', argument " "1"" of type '" "struct ub_packed_rrset_key *""'"); 
  }
  arg1 = (struct ub_packed_rrset_key *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ub_packed_rrset_key_rk_set" "', argument " "2"" of type '" "struct packed_rrset_key *""'"); 
  }
  arg2 = (struct packed_rrset_key *)(argp2);
  if (arg1) (arg1)->rk = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ub_packed_rrset_key_rk_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct ub_packed_rrset_key *arg1 = (struct ub_packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct packed_rrset_key *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ub_packed_rrset_key, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ub_packed_rrset_key_rk_get" "', argument " "1"" of type '" "struct ub_packed_rrset_key *""'"); 
  }
  arg1 = (struct ub_packed_rrset_key *)(argp1);
  result = (struct packed_rrset_key *)& ((arg1)->rk);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_packed_rrset_key, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ub_packed_rrset_key(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct ub_packed_rrset_key *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ub_packed_rrset_key", 0, 0, 0)) SWIG_fail;
  result = (struct ub_packed_rrset_key *)calloc(1, sizeof(struct ub_packed_rrset_key));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ub_packed_rrset_key, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ub_packed_rrset_key(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct ub_packed_rrset_key *arg1 = (struct ub_packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ub_packed_rrset_key, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ub_packed_rrset_key" "', argument " "1"" of type '" "struct ub_packed_rrset_key *""'"); 
  }
  arg1 = (struct ub_packed_rrset_key *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ub_packed_rrset_key_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ub_packed_rrset_key, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ub_packed_rrset_key_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_lruhash_entry_lock_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  lock_rw_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lruhash_entry_lock_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_lock_set" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_lock_rw_type,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lruhash_entry_lock_set" "', argument " "2"" of type '" "lock_rw_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "lruhash_entry_lock_set" "', argument " "2"" of type '" "lock_rw_type""'");
    } else {
      arg2 = *((lock_rw_type *)(argp2));
    }
  }
  if (arg1) (arg1)->lock = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_lock_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  lock_rw_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_lock_get" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  result =  ((arg1)->lock);
  resultobj = SWIG_NewPointerObj((lock_rw_type *)memcpy((lock_rw_type *)calloc(1,sizeof(lock_rw_type)),&result,sizeof(lock_rw_type)), SWIGTYPE_p_lock_rw_type, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_overflow_next_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  struct lruhash_entry *arg2 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lruhash_entry_overflow_next_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_overflow_next_set" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_lruhash_entry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lruhash_entry_overflow_next_set" "', argument " "2"" of type '" "struct lruhash_entry *""'"); 
  }
  arg2 = (struct lruhash_entry *)(argp2);
  if (arg1) (arg1)->overflow_next = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_overflow_next_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct lruhash_entry *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_overflow_next_get" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  result = (struct lruhash_entry *) ((arg1)->overflow_next);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_lruhash_entry, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_lru_next_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  struct lruhash_entry *arg2 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lruhash_entry_lru_next_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_lru_next_set" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_lruhash_entry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lruhash_entry_lru_next_set" "', argument " "2"" of type '" "struct lruhash_entry *""'"); 
  }
  arg2 = (struct lruhash_entry *)(argp2);
  if (arg1) (arg1)->lru_next = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_lru_next_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct lruhash_entry *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_lru_next_get" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  result = (struct lruhash_entry *) ((arg1)->lru_next);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_lruhash_entry, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_lru_prev_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  struct lruhash_entry *arg2 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lruhash_entry_lru_prev_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_lru_prev_set" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_lruhash_entry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lruhash_entry_lru_prev_set" "', argument " "2"" of type '" "struct lruhash_entry *""'"); 
  }
  arg2 = (struct lruhash_entry *)(argp2);
  if (arg1) (arg1)->lru_prev = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_lru_prev_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct lruhash_entry *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_lru_prev_get" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  result = (struct lruhash_entry *) ((arg1)->lru_prev);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_lruhash_entry, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_hash_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  hashvalue_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lruhash_entry_hash_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_hash_set" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_hashvalue_type,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lruhash_entry_hash_set" "', argument " "2"" of type '" "hashvalue_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "lruhash_entry_hash_set" "', argument " "2"" of type '" "hashvalue_type""'");
    } else {
      arg2 = *((hashvalue_type *)(argp2));
    }
  }
  if (arg1) (arg1)->hash = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_hash_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  hashvalue_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_hash_get" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  result =  ((arg1)->hash);
  resultobj = SWIG_NewPointerObj((hashvalue_type *)memcpy((hashvalue_type *)calloc(1,sizeof(hashvalue_type)),&result,sizeof(hashvalue_type)), SWIGTYPE_p_hashvalue_type, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_key_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lruhash_entry_key_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_key_set" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lruhash_entry_key_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->key = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_key_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  void *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_key_get" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  result = (void *) ((arg1)->key);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_data_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  struct packed_rrset_data *arg2 = (struct packed_rrset_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lruhash_entry_data_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_data_set" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_packed_rrset_data, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lruhash_entry_data_set" "', argument " "2"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg2 = (struct packed_rrset_data *)(argp2);
  if (arg1) (arg1)->data = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lruhash_entry_data_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct packed_rrset_data *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lruhash_entry_data_get" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  result = (struct packed_rrset_data *) ((arg1)->data);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lruhash_entry(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_lruhash_entry", 0, 0, 0)) SWIG_fail;
  result = (struct lruhash_entry *)calloc(1, sizeof(struct lruhash_entry));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_lruhash_entry, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_lruhash_entry(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct lruhash_entry *arg1 = (struct lruhash_entry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_lruhash_entry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_lruhash_entry" "', argument " "1"" of type '" "struct lruhash_entry *""'"); 
  }
  arg1 = (struct lruhash_entry *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *lruhash_entry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_lruhash_entry, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *lruhash_entry_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_packed_rrset_data_ttl_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "packed_rrset_data_ttl_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_data_ttl_set" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "packed_rrset_data_ttl_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = (uint32_t)(val2);
  if (arg1) (arg1)->ttl = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_data_ttl_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint32_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_data_ttl_get" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  result = (uint32_t) ((arg1)->ttl);
  resultobj = SWIG_From_unsigned_SS_int((unsigned int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_data_count_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "packed_rrset_data_count_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_data_count_set" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "packed_rrset_data_count_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_data_count_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_data_count_get" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  result =  ((arg1)->count);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_data_rrsig_count_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "packed_rrset_data_rrsig_count_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_data_rrsig_count_set" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "packed_rrset_data_rrsig_count_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->rrsig_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_data_rrsig_count_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_data_rrsig_count_get" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  result =  ((arg1)->rrsig_count);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_data_trust_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  enum rrset_trust arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "packed_rrset_data_trust_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_data_trust_set" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "packed_rrset_data_trust_set" "', argument " "2"" of type '" "enum rrset_trust""'");
  } 
  arg2 = (enum rrset_trust)(val2);
  if (arg1) (arg1)->trust = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_data_trust_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  enum rrset_trust result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_data_trust_get" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  result = (enum rrset_trust) ((arg1)->trust);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_data_security_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  enum sec_status arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "packed_rrset_data_security_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_data_security_set" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "packed_rrset_data_security_set" "', argument " "2"" of type '" "enum sec_status""'");
  } 
  arg2 = (enum sec_status)(val2);
  if (arg1) (arg1)->security = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_packed_rrset_data_security_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  enum sec_status result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "packed_rrset_data_security_get" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  result = (enum sec_status) ((arg1)->security);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_packed_rrset_data(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_packed_rrset_data", 0, 0, 0)) SWIG_fail;
  result = (struct packed_rrset_data *)calloc(1, sizeof(struct packed_rrset_data));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_packed_rrset_data, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_packed_rrset_data(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_packed_rrset_data" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *packed_rrset_data_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_packed_rrset_data, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *packed_rrset_data_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap__get_data_rr_len(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  PyObject *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "_get_data_rr_len", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_data_rr_len" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_get_data_rr_len" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (PyObject *)_get_data_rr_len(arg1,arg2);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__set_data_rr_ttl(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  int arg2 ;
  uint32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "_set_data_rr_ttl", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_set_data_rr_ttl" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_set_data_rr_ttl" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "_set_data_rr_ttl" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = (uint32_t)(val3);
  _set_data_rr_ttl(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__get_data_rr_ttl(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  PyObject *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "_get_data_rr_ttl", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_data_rr_ttl" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_get_data_rr_ttl" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (PyObject *)_get_data_rr_ttl(arg1,arg2);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__get_data_rr_data(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct packed_rrset_data *arg1 = (struct packed_rrset_data *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  PyObject *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "_get_data_rr_data", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_packed_rrset_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_data_rr_data" "', argument " "1"" of type '" "struct packed_rrset_data *""'"); 
  }
  arg1 = (struct packed_rrset_data *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_get_data_rr_data" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (PyObject *)_get_data_rr_data(arg1,arg2);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_flags_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "reply_info_flags_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_flags_set" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reply_info_flags_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  if (arg1) (arg1)->flags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_flags_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_flags_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  result = (uint16_t) ((arg1)->flags);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_qdcount_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "reply_info_qdcount_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_qdcount_set" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reply_info_qdcount_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  if (arg1) (arg1)->qdcount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_qdcount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_qdcount_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  result = (uint16_t) ((arg1)->qdcount);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_ttl_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "reply_info_ttl_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_ttl_set" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reply_info_ttl_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = (uint32_t)(val2);
  if (arg1) (arg1)->ttl = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_ttl_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint32_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_ttl_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  result = (uint32_t) ((arg1)->ttl);
  resultobj = SWIG_From_unsigned_SS_int((unsigned int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_prefetch_ttl_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "reply_info_prefetch_ttl_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_prefetch_ttl_set" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reply_info_prefetch_ttl_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = (uint32_t)(val2);
  if (arg1) (arg1)->prefetch_ttl = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_prefetch_ttl_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint32_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_prefetch_ttl_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  result = (uint32_t) ((arg1)->prefetch_ttl);
  resultobj = SWIG_From_unsigned_SS_int((unsigned int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_authoritative_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "reply_info_authoritative_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_authoritative_set" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reply_info_authoritative_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  if (arg1) (arg1)->authoritative = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_authoritative_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_authoritative_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  result = (uint16_t) ((arg1)->authoritative);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_security_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  enum sec_status arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "reply_info_security_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_security_set" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reply_info_security_set" "', argument " "2"" of type '" "enum sec_status""'");
  } 
  arg2 = (enum sec_status)(val2);
  if (arg1) (arg1)->security = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_security_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  enum sec_status result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_security_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  result = (enum sec_status) ((arg1)->security);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_an_numrrsets_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "reply_info_an_numrrsets_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_an_numrrsets_set" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reply_info_an_numrrsets_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->an_numrrsets = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_an_numrrsets_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_an_numrrsets_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  result =  ((arg1)->an_numrrsets);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_ns_numrrsets_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "reply_info_ns_numrrsets_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_ns_numrrsets_set" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reply_info_ns_numrrsets_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->ns_numrrsets = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_ns_numrrsets_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_ns_numrrsets_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  result =  ((arg1)->ns_numrrsets);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_ar_numrrsets_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "reply_info_ar_numrrsets_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_ar_numrrsets_set" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reply_info_ar_numrrsets_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->ar_numrrsets = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_ar_numrrsets_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_ar_numrrsets_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  result =  ((arg1)->ar_numrrsets);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_rrset_count_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "reply_info_rrset_count_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_rrset_count_set" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reply_info_rrset_count_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->rrset_count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reply_info_rrset_count_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reply_info_rrset_count_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  result =  ((arg1)->rrset_count);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_reply_info(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_reply_info", 0, 0, 0)) SWIG_fail;
  result = (struct reply_info *)calloc(1, sizeof(struct reply_info));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_reply_info, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_reply_info(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_reply_info" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *reply_info_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_reply_info, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *reply_info_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_rrset_ref_key_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct rrset_ref *arg1 = (struct rrset_ref *) 0 ;
  struct ub_packed_rrset_key *arg2 = (struct ub_packed_rrset_key *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "rrset_ref_key_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_rrset_ref, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rrset_ref_key_set" "', argument " "1"" of type '" "struct rrset_ref *""'"); 
  }
  arg1 = (struct rrset_ref *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ub_packed_rrset_key, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "rrset_ref_key_set" "', argument " "2"" of type '" "struct ub_packed_rrset_key *""'"); 
  }
  arg2 = (struct ub_packed_rrset_key *)(argp2);
  if (arg1) (arg1)->key = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rrset_ref_key_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct rrset_ref *arg1 = (struct rrset_ref *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct ub_packed_rrset_key *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_rrset_ref, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rrset_ref_key_get" "', argument " "1"" of type '" "struct rrset_ref *""'"); 
  }
  arg1 = (struct rrset_ref *)(argp1);
  result = (struct ub_packed_rrset_key *) ((arg1)->key);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ub_packed_rrset_key, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rrset_ref_id_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct rrset_ref *arg1 = (struct rrset_ref *) 0 ;
  rrset_id_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "rrset_ref_id_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_rrset_ref, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rrset_ref_id_set" "', argument " "1"" of type '" "struct rrset_ref *""'"); 
  }
  arg1 = (struct rrset_ref *)(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "rrset_ref_id_set" "', argument " "2"" of type '" "rrset_id_type""'");
  } 
  arg2 = (rrset_id_type)(val2);
  if (arg1) (arg1)->id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rrset_ref_id_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct rrset_ref *arg1 = (struct rrset_ref *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  rrset_id_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_rrset_ref, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rrset_ref_id_get" "', argument " "1"" of type '" "struct rrset_ref *""'"); 
  }
  arg1 = (struct rrset_ref *)(argp1);
  result = (rrset_id_type) ((arg1)->id);
  resultobj = SWIG_From_long_SS_long((long long)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_rrset_ref(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct rrset_ref *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_rrset_ref", 0, 0, 0)) SWIG_fail;
  result = (struct rrset_ref *)calloc(1, sizeof(struct rrset_ref));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_rrset_ref, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_rrset_ref(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct rrset_ref *arg1 = (struct rrset_ref *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_rrset_ref, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_rrset_ref" "', argument " "1"" of type '" "struct rrset_ref *""'"); 
  }
  arg1 = (struct rrset_ref *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *rrset_ref_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_rrset_ref, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *rrset_ref_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_dns_msg_qinfo_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct dns_msg *arg1 = (struct dns_msg *) 0 ;
  struct query_info *arg2 = (struct query_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dns_msg_qinfo_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dns_msg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dns_msg_qinfo_set" "', argument " "1"" of type '" "struct dns_msg *""'"); 
  }
  arg1 = (struct dns_msg *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_query_info, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dns_msg_qinfo_set" "', argument " "2"" of type '" "struct query_info *""'"); 
  }
  arg2 = (struct query_info *)(argp2);
  if (arg1) (arg1)->qinfo = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dns_msg_qinfo_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct dns_msg *arg1 = (struct dns_msg *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct query_info *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dns_msg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dns_msg_qinfo_get" "', argument " "1"" of type '" "struct dns_msg *""'"); 
  }
  arg1 = (struct dns_msg *)(argp1);
  result = (struct query_info *)& ((arg1)->qinfo);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_query_info, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dns_msg_rep_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct dns_msg *arg1 = (struct dns_msg *) 0 ;
  struct reply_info *arg2 = (struct reply_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dns_msg_rep_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dns_msg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dns_msg_rep_set" "', argument " "1"" of type '" "struct dns_msg *""'"); 
  }
  arg1 = (struct dns_msg *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_reply_info, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dns_msg_rep_set" "', argument " "2"" of type '" "struct reply_info *""'"); 
  }
  arg2 = (struct reply_info *)(argp2);
  if (arg1) (arg1)->rep = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dns_msg_rep_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct dns_msg *arg1 = (struct dns_msg *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct reply_info *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dns_msg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dns_msg_rep_get" "', argument " "1"" of type '" "struct dns_msg *""'"); 
  }
  arg1 = (struct dns_msg *)(argp1);
  result = (struct reply_info *) ((arg1)->rep);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_reply_info, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dns_msg(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct dns_msg *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_dns_msg", 0, 0, 0)) SWIG_fail;
  result = (struct dns_msg *)calloc(1, sizeof(struct dns_msg));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dns_msg, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_dns_msg(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct dns_msg *arg1 = (struct dns_msg *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dns_msg, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dns_msg" "', argument " "1"" of type '" "struct dns_msg *""'"); 
  }
  arg1 = (struct dns_msg *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *dns_msg_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_dns_msg, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *dns_msg_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap__rrset_rrsets_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  struct ub_packed_rrset_key *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "_rrset_rrsets_get", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_rrset_rrsets_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_rrset_rrsets_get" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (struct ub_packed_rrset_key *)_rrset_rrsets_get(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ub_packed_rrset_key, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__rrset_ref_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct reply_info *arg1 = (struct reply_info *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  struct rrset_ref *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "_rrset_ref_get", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_rrset_ref_get" "', argument " "1"" of type '" "struct reply_info *""'"); 
  }
  arg1 = (struct reply_info *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_rrset_ref_get" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (struct rrset_ref *)_rrset_ref_get(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_rrset_ref, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_sockaddr_storage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct sockaddr_storage *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_sockaddr_storage", 0, 0, 0)) SWIG_fail;
  result = (struct sockaddr_storage *)calloc(1, sizeof(struct sockaddr_storage));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sockaddr_storage, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_sockaddr_storage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct sockaddr_storage *arg1 = (struct sockaddr_storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_sockaddr_storage, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_sockaddr_storage" "', argument " "1"" of type '" "struct sockaddr_storage *""'"); 
  }
  arg1 = (struct sockaddr_storage *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *sockaddr_storage_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_sockaddr_storage, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *sockaddr_storage_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap__sockaddr_storage_len(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct sockaddr_storage *arg1 = (struct sockaddr_storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_sockaddr_storage_len" "', argument " "1"" of type '" "struct sockaddr_storage const *""'"); 
  }
  arg1 = (struct sockaddr_storage *)(argp1);
  result = _sockaddr_storage_len((struct sockaddr_storage const *)arg1);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__sockaddr_storage_family(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct sockaddr_storage *arg1 = (struct sockaddr_storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_sockaddr_storage_family" "', argument " "1"" of type '" "struct sockaddr_storage const *""'"); 
  }
  arg1 = (struct sockaddr_storage *)(argp1);
  result = (PyObject *)_sockaddr_storage_family((struct sockaddr_storage const *)arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__sockaddr_storage_addr(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct sockaddr_storage *arg1 = (struct sockaddr_storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_sockaddr_storage_addr" "', argument " "1"" of type '" "struct sockaddr_storage const *""'"); 
  }
  arg1 = (struct sockaddr_storage *)(argp1);
  result = (PyObject *)_sockaddr_storage_addr((struct sockaddr_storage const *)arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__sockaddr_storage_raw_addr(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct sockaddr_storage *arg1 = (struct sockaddr_storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_sockaddr_storage_raw_addr" "', argument " "1"" of type '" "struct sockaddr_storage const *""'"); 
  }
  arg1 = (struct sockaddr_storage *)(argp1);
  result = (PyObject *)_sockaddr_storage_raw_addr((struct sockaddr_storage const *)arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__sockaddr_storage_port(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct sockaddr_storage *arg1 = (struct sockaddr_storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_sockaddr_storage_port" "', argument " "1"" of type '" "struct sockaddr_storage const *""'"); 
  }
  arg1 = (struct sockaddr_storage *)(argp1);
  result = (PyObject *)_sockaddr_storage_port((struct sockaddr_storage const *)arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__sockaddr_storage_flowinfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct sockaddr_storage *arg1 = (struct sockaddr_storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_sockaddr_storage_flowinfo" "', argument " "1"" of type '" "struct sockaddr_storage const *""'"); 
  }
  arg1 = (struct sockaddr_storage *)(argp1);
  result = (PyObject *)_sockaddr_storage_flowinfo((struct sockaddr_storage const *)arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__sockaddr_storage_scope_id(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct sockaddr_storage *arg1 = (struct sockaddr_storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_sockaddr_storage_scope_id" "', argument " "1"" of type '" "struct sockaddr_storage const *""'"); 
  }
  arg1 = (struct sockaddr_storage *)(argp1);
  result = (PyObject *)_sockaddr_storage_scope_id((struct sockaddr_storage const *)arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mesh_state_reply_list_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct mesh_state *arg1 = (struct mesh_state *) 0 ;
  struct mesh_reply *arg2 = (struct mesh_reply *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "mesh_state_reply_list_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mesh_state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mesh_state_reply_list_set" "', argument " "1"" of type '" "struct mesh_state *""'"); 
  }
  arg1 = (struct mesh_state *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mesh_reply, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mesh_state_reply_list_set" "', argument " "2"" of type '" "struct mesh_reply *""'"); 
  }
  arg2 = (struct mesh_reply *)(argp2);
  if (arg1) (arg1)->reply_list = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mesh_state_reply_list_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct mesh_state *arg1 = (struct mesh_state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct mesh_reply *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mesh_state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mesh_state_reply_list_get" "', argument " "1"" of type '" "struct mesh_state *""'"); 
  }
  arg1 = (struct mesh_state *)(argp1);
  result = (struct mesh_reply *) ((arg1)->reply_list);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mesh_reply, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_mesh_state(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct mesh_state *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_mesh_state", 0, 0, 0)) SWIG_fail;
  result = (struct mesh_state *)calloc(1, sizeof(struct mesh_state));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mesh_state, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_mesh_state(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct mesh_state *arg1 = (struct mesh_state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mesh_state, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_mesh_state" "', argument " "1"" of type '" "struct mesh_state *""'"); 
  }
  arg1 = (struct mesh_state *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *mesh_state_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mesh_state, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *mesh_state_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_mesh_reply_next_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct mesh_reply *arg1 = (struct mesh_reply *) 0 ;
  struct mesh_reply *arg2 = (struct mesh_reply *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "mesh_reply_next_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mesh_reply, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mesh_reply_next_set" "', argument " "1"" of type '" "struct mesh_reply *""'"); 
  }
  arg1 = (struct mesh_reply *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mesh_reply, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mesh_reply_next_set" "', argument " "2"" of type '" "struct mesh_reply *""'"); 
  }
  arg2 = (struct mesh_reply *)(argp2);
  if (arg1) (arg1)->next = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mesh_reply_next_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct mesh_reply *arg1 = (struct mesh_reply *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct mesh_reply *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mesh_reply, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mesh_reply_next_get" "', argument " "1"" of type '" "struct mesh_reply *""'"); 
  }
  arg1 = (struct mesh_reply *)(argp1);
  result = (struct mesh_reply *) ((arg1)->next);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mesh_reply, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mesh_reply_query_reply_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct mesh_reply *arg1 = (struct mesh_reply *) 0 ;
  struct comm_reply *arg2 = (struct comm_reply *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "mesh_reply_query_reply_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mesh_reply, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mesh_reply_query_reply_set" "', argument " "1"" of type '" "struct mesh_reply *""'"); 
  }
  arg1 = (struct mesh_reply *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_comm_reply, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mesh_reply_query_reply_set" "', argument " "2"" of type '" "struct comm_reply *""'"); 
  }
  arg2 = (struct comm_reply *)(argp2);
  if (arg1) (arg1)->query_reply = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mesh_reply_query_reply_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct mesh_reply *arg1 = (struct mesh_reply *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct comm_reply *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mesh_reply, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mesh_reply_query_reply_get" "', argument " "1"" of type '" "struct mesh_reply *""'"); 
  }
  arg1 = (struct mesh_reply *)(argp1);
  result = (struct comm_reply *)& ((arg1)->query_reply);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_comm_reply, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_mesh_reply(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct mesh_reply *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_mesh_reply", 0, 0, 0)) SWIG_fail;
  result = (struct mesh_reply *)calloc(1, sizeof(struct mesh_reply));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mesh_reply, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_mesh_reply(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct mesh_reply *arg1 = (struct mesh_reply *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mesh_reply, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_mesh_reply" "', argument " "1"" of type '" "struct mesh_reply *""'"); 
  }
  arg1 = (struct mesh_reply *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *mesh_reply_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mesh_reply, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *mesh_reply_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_comm_reply__addr_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct comm_reply *arg1 = (struct comm_reply *) 0 ;
  struct sockaddr_storage *arg2 = (struct sockaddr_storage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "comm_reply__addr_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_comm_reply, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "comm_reply__addr_set" "', argument " "1"" of type '" "struct comm_reply *""'"); 
  }
  arg1 = (struct comm_reply *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "comm_reply__addr_set" "', argument " "2"" of type '" "struct sockaddr_storage *""'"); 
  }
  arg2 = (struct sockaddr_storage *)(argp2);
  if (arg1) (arg1)->client_addr = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_comm_reply__addr_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct comm_reply *arg1 = (struct comm_reply *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct sockaddr_storage *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_comm_reply, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "comm_reply__addr_get" "', argument " "1"" of type '" "struct comm_reply *""'"); 
  }
  arg1 = (struct comm_reply *)(argp1);
  result = (struct sockaddr_storage *)& ((arg1)->client_addr);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sockaddr_storage, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_comm_reply(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct comm_reply *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_comm_reply", 0, 0, 0)) SWIG_fail;
  result = (struct comm_reply *)calloc(1, sizeof(struct comm_reply));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_comm_reply, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_comm_reply(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct comm_reply *arg1 = (struct comm_reply *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_comm_reply, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_comm_reply" "', argument " "1"" of type '" "struct comm_reply *""'"); 
  }
  arg1 = (struct comm_reply *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *comm_reply_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_comm_reply, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *comm_reply_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_edns_option__next_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  struct edns_option *arg2 = (struct edns_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_option__next_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_option__next_set" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_edns_option, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "edns_option__next_set" "', argument " "2"" of type '" "struct edns_option *""'"); 
  }
  arg2 = (struct edns_option *)(argp2);
  if (arg1) (arg1)->next = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_option__next_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_option *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_option__next_get" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  result = (struct edns_option *) ((arg1)->next);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_option__opt_code_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_option__opt_code_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_option__opt_code_set" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_option__opt_code_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  if (arg1) (arg1)->opt_code = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_option__opt_code_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_option__opt_code_get" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  result = (uint16_t) ((arg1)->opt_code);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_option__opt_len_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_option__opt_len_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_option__opt_len_set" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_option__opt_len_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->opt_len = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_option__opt_len_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_option__opt_len_get" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  result =  ((arg1)->opt_len);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_option__opt_data_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_option__opt_data_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_option__opt_data_set" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_unsigned_char, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "edns_option__opt_data_set" "', argument " "2"" of type '" "uint8_t *""'"); 
  }
  arg2 = (uint8_t *)(argp2);
  if (arg1) (arg1)->opt_data = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_option__opt_data_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint8_t *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_option__opt_data_get" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  result = (uint8_t *) ((arg1)->opt_data);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_edns_option(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_edns_option", 0, 0, 0)) SWIG_fail;
  result = (struct edns_option *)calloc(1, sizeof(struct edns_option));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_edns_option, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_edns_option(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_edns_option" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *edns_option_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_edns_option, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *edns_option_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap__edns_option_opt_code_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_edns_option_opt_code_get" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  result = (PyObject *)_edns_option_opt_code_get(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__edns_option_opt_data_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_edns_option_opt_data_get" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  result = (PyObject *)_edns_option_opt_data_get(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_edns_present_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_data_edns_present_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_edns_present_set" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_data_edns_present_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->edns_present = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_edns_present_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_edns_present_get" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  result = (int) ((arg1)->edns_present);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_ext_rcode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_data_ext_rcode_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_ext_rcode_set" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_data_ext_rcode_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = (uint8_t)(val2);
  if (arg1) (arg1)->ext_rcode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_ext_rcode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint8_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_ext_rcode_get" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  result = (uint8_t) ((arg1)->ext_rcode);
  resultobj = SWIG_From_unsigned_SS_char((unsigned char)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_edns_version_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_data_edns_version_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_edns_version_set" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_data_edns_version_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = (uint8_t)(val2);
  if (arg1) (arg1)->edns_version = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_edns_version_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint8_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_edns_version_get" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  result = (uint8_t) ((arg1)->edns_version);
  resultobj = SWIG_From_unsigned_SS_char((unsigned char)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_bits_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_data_bits_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_bits_set" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_data_bits_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  if (arg1) (arg1)->bits = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_bits_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_bits_get" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  result = (uint16_t) ((arg1)->bits);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_udp_size_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_data_udp_size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_udp_size_set" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_data_udp_size_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  if (arg1) (arg1)->udp_size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_udp_size_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_udp_size_get" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  result = (uint16_t) ((arg1)->udp_size);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_opt_list_in_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  struct edns_option *arg2 = (struct edns_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_data_opt_list_in_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_opt_list_in_set" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_edns_option, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "edns_data_opt_list_in_set" "', argument " "2"" of type '" "struct edns_option *""'"); 
  }
  arg2 = (struct edns_option *)(argp2);
  if (arg1) (arg1)->opt_list_in = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_opt_list_in_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_option *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_opt_list_in_get" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  result = (struct edns_option *) ((arg1)->opt_list_in);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_opt_list_out_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  struct edns_option *arg2 = (struct edns_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_data_opt_list_out_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_opt_list_out_set" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_edns_option, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "edns_data_opt_list_out_set" "', argument " "2"" of type '" "struct edns_option *""'"); 
  }
  arg2 = (struct edns_option *)(argp2);
  if (arg1) (arg1)->opt_list_out = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_opt_list_out_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_option *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_opt_list_out_get" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  result = (struct edns_option *) ((arg1)->opt_list_out);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_opt_list_inplace_cb_out_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  struct edns_option *arg2 = (struct edns_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_data_opt_list_inplace_cb_out_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_opt_list_inplace_cb_out_set" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_edns_option, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "edns_data_opt_list_inplace_cb_out_set" "', argument " "2"" of type '" "struct edns_option *""'"); 
  }
  arg2 = (struct edns_option *)(argp2);
  if (arg1) (arg1)->opt_list_inplace_cb_out = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_opt_list_inplace_cb_out_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_option *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_opt_list_inplace_cb_out_get" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  result = (struct edns_option *) ((arg1)->opt_list_inplace_cb_out);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_padding_block_size_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_data_padding_block_size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_padding_block_size_set" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_data_padding_block_size_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  if (arg1) (arg1)->padding_block_size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_data_padding_block_size_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_data_padding_block_size_get" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  result = (uint16_t) ((arg1)->padding_block_size);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_edns_data(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_edns_data", 0, 0, 0)) SWIG_fail;
  result = (struct edns_data *)calloc(1, sizeof(struct edns_data));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_edns_data, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_edns_data(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_edns_data" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *edns_data_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_edns_data, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *edns_data_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap__edns_data_opt_list_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_data *arg1 = (struct edns_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_option **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_edns_data_opt_list_get" "', argument " "1"" of type '" "struct edns_data *""'"); 
  }
  arg1 = (struct edns_data *)(argp1);
  result = (struct edns_option **)_edns_data_opt_list_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_cfg_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct config_file *arg2 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_cfg_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_cfg_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_file, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_cfg_set" "', argument " "2"" of type '" "struct config_file *""'"); 
  }
  arg2 = (struct config_file *)(argp2);
  if (arg1) (arg1)->cfg = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_cfg_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_file *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_cfg_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct config_file *) ((arg1)->cfg);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_file, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_msg_cache_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct slabhash *arg2 = (struct slabhash *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_msg_cache_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_msg_cache_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_slabhash, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_msg_cache_set" "', argument " "2"" of type '" "struct slabhash *""'"); 
  }
  arg2 = (struct slabhash *)(argp2);
  if (arg1) (arg1)->msg_cache = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_msg_cache_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct slabhash *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_msg_cache_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct slabhash *) ((arg1)->msg_cache);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_slabhash, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_rrset_cache_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct rrset_cache *arg2 = (struct rrset_cache *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_rrset_cache_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_rrset_cache_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_rrset_cache, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_rrset_cache_set" "', argument " "2"" of type '" "struct rrset_cache *""'"); 
  }
  arg2 = (struct rrset_cache *)(argp2);
  if (arg1) (arg1)->rrset_cache = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_rrset_cache_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct rrset_cache *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_rrset_cache_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct rrset_cache *) ((arg1)->rrset_cache);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_rrset_cache, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_infra_cache_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct infra_cache *arg2 = (struct infra_cache *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_infra_cache_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_infra_cache_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_infra_cache, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_infra_cache_set" "', argument " "2"" of type '" "struct infra_cache *""'"); 
  }
  arg2 = (struct infra_cache *)(argp2);
  if (arg1) (arg1)->infra_cache = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_infra_cache_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct infra_cache *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_infra_cache_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct infra_cache *) ((arg1)->infra_cache);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_infra_cache, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_key_cache_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct key_cache *arg2 = (struct key_cache *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_key_cache_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_key_cache_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_key_cache, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_key_cache_set" "', argument " "2"" of type '" "struct key_cache *""'"); 
  }
  arg2 = (struct key_cache *)(argp2);
  if (arg1) (arg1)->key_cache = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_key_cache_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct key_cache *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_key_cache_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct key_cache *) ((arg1)->key_cache);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_key_cache, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_send_query_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct outbound_entry *(*arg2)(struct query_info *,uint16_t,int,int,int,int,struct sockaddr_storage *,socklen_t,uint8_t *,size_t,int,int,char *,struct module_qstate *,int *) = (struct outbound_entry *(*)(struct query_info *,uint16_t,int,int,int,int,struct sockaddr_storage *,socklen_t,uint8_t *,size_t,int,int,char *,struct module_qstate *,int *)) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_send_query_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_send_query_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_p_struct_query_info_unsigned_short_int_int_int_int_p_struct_sockaddr_storage_socklen_t_p_unsigned_char_size_t_int_int_p_char_p_struct_module_qstate_p_int__p_outbound_entry);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "module_env_send_query_set" "', argument " "2"" of type '" "struct outbound_entry *(*)(struct query_info *,uint16_t,int,int,int,int,struct sockaddr_storage *,socklen_t,uint8_t *,size_t,int,int,char *,struct module_qstate *,int *)""'"); 
    }
  }
  if (arg1) (arg1)->send_query = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_send_query_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct outbound_entry *(*result)(struct query_info *,uint16_t,int,int,int,int,struct sockaddr_storage *,socklen_t,uint8_t *,size_t,int,int,char *,struct module_qstate *,int *) = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_send_query_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct outbound_entry *(*)(struct query_info *,uint16_t,int,int,int,int,struct sockaddr_storage *,socklen_t,uint8_t *,size_t,int,int,char *,struct module_qstate *,int *)) ((arg1)->send_query);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_struct_query_info_unsigned_short_int_int_int_int_p_struct_sockaddr_storage_socklen_t_p_unsigned_char_size_t_int_int_p_char_p_struct_module_qstate_p_int__p_outbound_entry);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_detach_subs_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void (*arg2)(struct module_qstate *) = (void (*)(struct module_qstate *)) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_detach_subs_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_detach_subs_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_p_struct_module_qstate__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "module_env_detach_subs_set" "', argument " "2"" of type '" "void (*)(struct module_qstate *)""'"); 
    }
  }
  if (arg1) (arg1)->detach_subs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_detach_subs_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  void (*result)(struct module_qstate *) = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_detach_subs_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (void (*)(struct module_qstate *)) ((arg1)->detach_subs);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_struct_module_qstate__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_attach_sub_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  int (*arg2)(struct module_qstate *,struct query_info *,uint16_t,int,int,struct module_qstate **) = (int (*)(struct module_qstate *,struct query_info *,uint16_t,int,int,struct module_qstate **)) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_attach_sub_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_attach_sub_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int_p_p_struct_module_qstate__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "module_env_attach_sub_set" "', argument " "2"" of type '" "int (*)(struct module_qstate *,struct query_info *,uint16_t,int,int,struct module_qstate **)""'"); 
    }
  }
  if (arg1) (arg1)->attach_sub = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_attach_sub_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int (*result)(struct module_qstate *,struct query_info *,uint16_t,int,int,struct module_qstate **) = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_attach_sub_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (int (*)(struct module_qstate *,struct query_info *,uint16_t,int,int,struct module_qstate **)) ((arg1)->attach_sub);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int_p_p_struct_module_qstate__int);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_kill_sub_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void (*arg2)(struct module_qstate *) = (void (*)(struct module_qstate *)) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_kill_sub_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_kill_sub_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_p_struct_module_qstate__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "module_env_kill_sub_set" "', argument " "2"" of type '" "void (*)(struct module_qstate *)""'"); 
    }
  }
  if (arg1) (arg1)->kill_sub = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_kill_sub_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  void (*result)(struct module_qstate *) = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_kill_sub_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (void (*)(struct module_qstate *)) ((arg1)->kill_sub);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_struct_module_qstate__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_detect_cycle_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  int (*arg2)(struct module_qstate *,struct query_info *,uint16_t,int,int) = (int (*)(struct module_qstate *,struct query_info *,uint16_t,int,int)) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_detect_cycle_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_detect_cycle_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "module_env_detect_cycle_set" "', argument " "2"" of type '" "int (*)(struct module_qstate *,struct query_info *,uint16_t,int,int)""'"); 
    }
  }
  if (arg1) (arg1)->detect_cycle = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_detect_cycle_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int (*result)(struct module_qstate *,struct query_info *,uint16_t,int,int) = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_detect_cycle_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (int (*)(struct module_qstate *,struct query_info *,uint16_t,int,int)) ((arg1)->detect_cycle);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int__int);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_scratch_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct regional *arg2 = (struct regional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_scratch_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_scratch_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_regional, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_scratch_set" "', argument " "2"" of type '" "struct regional *""'"); 
  }
  arg2 = (struct regional *)(argp2);
  if (arg1) (arg1)->scratch = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_scratch_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct regional *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_scratch_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct regional *) ((arg1)->scratch);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_regional, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_scratch_buffer_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct sldns_buffer *arg2 = (struct sldns_buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_scratch_buffer_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_scratch_buffer_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_sldns_buffer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_scratch_buffer_set" "', argument " "2"" of type '" "struct sldns_buffer *""'"); 
  }
  arg2 = (struct sldns_buffer *)(argp2);
  if (arg1) (arg1)->scratch_buffer = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_scratch_buffer_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct sldns_buffer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_scratch_buffer_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct sldns_buffer *) ((arg1)->scratch_buffer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sldns_buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_worker_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct worker *arg2 = (struct worker *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_worker_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_worker_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_worker, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_worker_set" "', argument " "2"" of type '" "struct worker *""'"); 
  }
  arg2 = (struct worker *)(argp2);
  if (arg1) (arg1)->worker = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_worker_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct worker *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_worker_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct worker *) ((arg1)->worker);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_worker, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_mesh_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct mesh_area *arg2 = (struct mesh_area *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_mesh_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_mesh_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mesh_area, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_mesh_set" "', argument " "2"" of type '" "struct mesh_area *""'"); 
  }
  arg2 = (struct mesh_area *)(argp2);
  if (arg1) (arg1)->mesh = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_mesh_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct mesh_area *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_mesh_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct mesh_area *) ((arg1)->mesh);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mesh_area, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_alloc_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct alloc_cache *arg2 = (struct alloc_cache *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_alloc_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_alloc_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_alloc_cache, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_alloc_set" "', argument " "2"" of type '" "struct alloc_cache *""'"); 
  }
  arg2 = (struct alloc_cache *)(argp2);
  if (arg1) (arg1)->alloc = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_alloc_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct alloc_cache *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_alloc_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct alloc_cache *) ((arg1)->alloc);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_alloc_cache, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_rnd_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct ub_randstate *arg2 = (struct ub_randstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_rnd_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_rnd_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ub_randstate, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_rnd_set" "', argument " "2"" of type '" "struct ub_randstate *""'"); 
  }
  arg2 = (struct ub_randstate *)(argp2);
  if (arg1) (arg1)->rnd = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_rnd_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct ub_randstate *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_rnd_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct ub_randstate *) ((arg1)->rnd);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ub_randstate, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env__now_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  time_t *arg2 = (time_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env__now_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env__now_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_time_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env__now_set" "', argument " "2"" of type '" "time_t *""'"); 
  }
  arg2 = (time_t *)(argp2);
  if (arg1) (arg1)->now = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env__now_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  time_t *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env__now_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (time_t *) ((arg1)->now);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_time_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env__now_tv_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct timeval *arg2 = (struct timeval *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env__now_tv_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env__now_tv_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_timeval, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env__now_tv_set" "', argument " "2"" of type '" "struct timeval *""'"); 
  }
  arg2 = (struct timeval *)(argp2);
  if (arg1) (arg1)->now_tv = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env__now_tv_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct timeval *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env__now_tv_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct timeval *) ((arg1)->now_tv);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_timeval, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_need_to_validate_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_need_to_validate_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_need_to_validate_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "module_env_need_to_validate_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->need_to_validate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_need_to_validate_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_need_to_validate_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (int) ((arg1)->need_to_validate);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_anchors_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct val_anchors *arg2 = (struct val_anchors *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_anchors_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_anchors_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_val_anchors, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_anchors_set" "', argument " "2"" of type '" "struct val_anchors *""'"); 
  }
  arg2 = (struct val_anchors *)(argp2);
  if (arg1) (arg1)->anchors = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_anchors_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct val_anchors *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_anchors_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct val_anchors *) ((arg1)->anchors);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_val_anchors, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_neg_cache_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct val_neg_cache *arg2 = (struct val_neg_cache *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_neg_cache_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_neg_cache_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_val_neg_cache, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_neg_cache_set" "', argument " "2"" of type '" "struct val_neg_cache *""'"); 
  }
  arg2 = (struct val_neg_cache *)(argp2);
  if (arg1) (arg1)->neg_cache = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_neg_cache_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct val_neg_cache *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_neg_cache_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct val_neg_cache *) ((arg1)->neg_cache);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_val_neg_cache, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_probe_timer_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct comm_timer *arg2 = (struct comm_timer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_probe_timer_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_probe_timer_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_comm_timer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_probe_timer_set" "', argument " "2"" of type '" "struct comm_timer *""'"); 
  }
  arg2 = (struct comm_timer *)(argp2);
  if (arg1) (arg1)->probe_timer = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_probe_timer_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct comm_timer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_probe_timer_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct comm_timer *) ((arg1)->probe_timer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_comm_timer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_fwds_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct iter_forwards *arg2 = (struct iter_forwards *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_fwds_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_fwds_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_iter_forwards, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_fwds_set" "', argument " "2"" of type '" "struct iter_forwards *""'"); 
  }
  arg2 = (struct iter_forwards *)(argp2);
  if (arg1) (arg1)->fwds = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_fwds_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct iter_forwards *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_fwds_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct iter_forwards *) ((arg1)->fwds);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iter_forwards, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_hints_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct iter_hints *arg2 = (struct iter_hints *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_hints_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_hints_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_iter_hints, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_hints_set" "', argument " "2"" of type '" "struct iter_hints *""'"); 
  }
  arg2 = (struct iter_hints *)(argp2);
  if (arg1) (arg1)->hints = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_hints_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct iter_hints *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_hints_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct iter_hints *) ((arg1)->hints);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iter_hints, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_modinfo_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_modinfo_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_modinfo_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_modinfo_set" "', argument " "2"" of type '" "void *[MAX_MODULE]""'"); 
  } 
  arg2 = (void **)(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)MAX_MODULE; ++ii) *(void * *)&arg1->modinfo[ii] = *((void * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""modinfo""' of type '""void *[MAX_MODULE]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_modinfo_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  void **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_modinfo_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (void **)(void **) ((arg1)->modinfo);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_inplace_cb_lists_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void **arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_inplace_cb_lists_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_inplace_cb_lists_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_inplace_cb_lists_set" "', argument " "2"" of type '" "void *[inplace_cb_types_total]""'"); 
  } 
  arg2 = (void **)(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)inplace_cb_types_total; ++ii) *(void * *)&arg1->inplace_cb_lists[ii] = *((void * *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""inplace_cb_lists""' of type '""void *[inplace_cb_types_total]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_inplace_cb_lists_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  void **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_inplace_cb_lists_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (void **)(void **) ((arg1)->inplace_cb_lists);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_edns_known_options_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  struct edns_known_option *arg2 = (struct edns_known_option *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_edns_known_options_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_edns_known_options_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_edns_known_option, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_env_edns_known_options_set" "', argument " "2"" of type '" "struct edns_known_option *""'"); 
  }
  arg2 = (struct edns_known_option *)(argp2);
  if (arg1) (arg1)->edns_known_options = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_edns_known_options_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_known_option *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_edns_known_options_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (struct edns_known_option *) ((arg1)->edns_known_options);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_edns_known_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_edns_known_options_num_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_env_edns_known_options_num_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_edns_known_options_num_set" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "module_env_edns_known_options_num_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->edns_known_options_num = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_env_edns_known_options_num_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_env_edns_known_options_num_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result =  ((arg1)->edns_known_options_num);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_module_env(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_module_env", 0, 0, 0)) SWIG_fail;
  result = (struct module_env *)calloc(1, sizeof(struct module_env));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_module_env, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_module_env(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_module_env" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *module_env_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_module_env, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *module_env_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap__module_env_now_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_module_env_now_get" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  result = (PyObject *)_module_env_now_get(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_qinfo_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  struct query_info *arg2 = (struct query_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_qinfo_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_qinfo_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_query_info, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_qstate_qinfo_set" "', argument " "2"" of type '" "struct query_info *""'"); 
  }
  arg2 = (struct query_info *)(argp2);
  if (arg1) (arg1)->qinfo = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_qinfo_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct query_info *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_qinfo_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (struct query_info *)& ((arg1)->qinfo);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_query_info, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_query_flags_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_query_flags_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_query_flags_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "module_qstate_query_flags_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  if (arg1) (arg1)->query_flags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_query_flags_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint16_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_query_flags_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (uint16_t) ((arg1)->query_flags);
  resultobj = SWIG_From_unsigned_SS_short((unsigned short)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_is_priming_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_is_priming_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_is_priming_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "module_qstate_is_priming_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->is_priming = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_is_priming_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_is_priming_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (int) ((arg1)->is_priming);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_is_valrec_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_is_valrec_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_is_valrec_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "module_qstate_is_valrec_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->is_valrec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_is_valrec_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_is_valrec_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (int) ((arg1)->is_valrec);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_reply_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  struct comm_reply *arg2 = (struct comm_reply *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_reply_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_reply_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_comm_reply, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_qstate_reply_set" "', argument " "2"" of type '" "struct comm_reply *""'"); 
  }
  arg2 = (struct comm_reply *)(argp2);
  if (arg1) (arg1)->reply = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_reply_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct comm_reply *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_reply_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (struct comm_reply *) ((arg1)->reply);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_comm_reply, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_return_msg_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  struct dns_msg *arg2 = (struct dns_msg *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_return_msg_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_return_msg_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dns_msg, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_qstate_return_msg_set" "', argument " "2"" of type '" "struct dns_msg *""'"); 
  }
  arg2 = (struct dns_msg *)(argp2);
  if (arg1) (arg1)->return_msg = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_return_msg_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct dns_msg *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_return_msg_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (struct dns_msg *) ((arg1)->return_msg);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dns_msg, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_return_rcode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_return_rcode_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_return_rcode_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "module_qstate_return_rcode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->return_rcode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_return_rcode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_return_rcode_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (int) ((arg1)->return_rcode);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_region_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  struct regional *arg2 = (struct regional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_region_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_region_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_regional, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_qstate_region_set" "', argument " "2"" of type '" "struct regional *""'"); 
  }
  arg2 = (struct regional *)(argp2);
  if (arg1) (arg1)->region = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_region_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct regional *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_region_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (struct regional *) ((arg1)->region);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_regional, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_curmod_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_curmod_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_curmod_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "module_qstate_curmod_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->curmod = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_curmod_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_curmod_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (int) ((arg1)->curmod);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_prefetch_leeway_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_prefetch_leeway_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_prefetch_leeway_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_time_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_qstate_prefetch_leeway_set" "', argument " "2"" of type '" "time_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "module_qstate_prefetch_leeway_set" "', argument " "2"" of type '" "time_t""'");
    } else {
      arg2 = *((time_t *)(argp2));
    }
  }
  if (arg1) (arg1)->prefetch_leeway = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_prefetch_leeway_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  time_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_prefetch_leeway_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result =  ((arg1)->prefetch_leeway);
  resultobj = SWIG_NewPointerObj((time_t *)memcpy((time_t *)calloc(1,sizeof(time_t)),&result,sizeof(time_t)), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_env_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  struct module_env *arg2 = (struct module_env *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_env_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_env_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_module_env, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_qstate_env_set" "', argument " "2"" of type '" "struct module_env *""'"); 
  }
  arg2 = (struct module_env *)(argp2);
  if (arg1) (arg1)->env = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_env_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct module_env *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_env_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (struct module_env *) ((arg1)->env);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_module_env, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_mesh_info_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  struct mesh_state *arg2 = (struct mesh_state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_mesh_info_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_mesh_info_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mesh_state, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "module_qstate_mesh_info_set" "', argument " "2"" of type '" "struct mesh_state *""'"); 
  }
  arg2 = (struct mesh_state *)(argp2);
  if (arg1) (arg1)->mesh_info = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_mesh_info_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct mesh_state *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_mesh_info_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (struct mesh_state *) ((arg1)->mesh_info);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mesh_state, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_no_cache_lookup_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_no_cache_lookup_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_no_cache_lookup_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "module_qstate_no_cache_lookup_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->no_cache_lookup = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_no_cache_lookup_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_no_cache_lookup_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (int) ((arg1)->no_cache_lookup);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_no_cache_store_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "module_qstate_no_cache_store_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_no_cache_store_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "module_qstate_no_cache_store_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->no_cache_store = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_module_qstate_no_cache_store_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "module_qstate_no_cache_store_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (int) ((arg1)->no_cache_store);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_module_qstate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_module_qstate", 0, 0, 0)) SWIG_fail;
  result = (struct module_qstate *)calloc(1, sizeof(struct module_qstate));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_module_qstate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_module_qstate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_module_qstate" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *module_qstate_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_module_qstate, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *module_qstate_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap__ext_state_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  enum module_ext_state result;
  
  if (!SWIG_Python_UnpackTuple(args, "_ext_state_get", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_ext_state_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_ext_state_get" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  result = (enum module_ext_state)_ext_state_get(arg1,arg2);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__ext_state_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  int arg2 ;
  enum module_ext_state arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "_ext_state_set", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_ext_state_set" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_ext_state_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "_ext_state_set" "', argument " "3"" of type '" "enum module_ext_state""'");
  } 
  arg3 = (enum module_ext_state)(val3);
  _ext_state_set(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_opt_list_is_empty(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option **arg1 = (struct edns_option **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_opt_list_is_empty" "', argument " "1"" of type '" "struct edns_option **""'"); 
  }
  arg1 = (struct edns_option **)(argp1);
  result = (int)edns_opt_list_is_empty(arg1);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__dereference_edns_option(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option **arg1 = (struct edns_option **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_option *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_dereference_edns_option" "', argument " "1"" of type '" "struct edns_option **""'"); 
  }
  arg1 = (struct edns_option **)(argp1);
  result = (struct edns_option *)_dereference_edns_option(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__p_p_edns_option_get_next(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option **arg1 = (struct edns_option **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_option **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_p_p_edns_option_get_next" "', argument " "1"" of type '" "struct edns_option **""'"); 
  }
  arg1 = (struct edns_option **)(argp1);
  result = (struct edns_option **)_p_p_edns_option_get_next(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__edns_opts_front_in_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_option **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_edns_opts_front_in_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (struct edns_option **)_edns_opts_front_in_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__edns_opts_back_out_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_option **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_edns_opts_back_out_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (struct edns_option **)_edns_opts_back_out_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__edns_opts_back_in_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_option **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_edns_opts_back_in_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (struct edns_option **)_edns_opts_back_in_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__edns_opts_front_out_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct edns_option **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_edns_opts_front_out_get" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  result = (struct edns_option **)_edns_opts_front_out_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_strlist_next_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_strlist *arg1 = (struct config_strlist *) 0 ;
  struct config_strlist *arg2 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_strlist_next_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_strlist, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_strlist_next_set" "', argument " "1"" of type '" "struct config_strlist *""'"); 
  }
  arg1 = (struct config_strlist *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_strlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_strlist_next_set" "', argument " "2"" of type '" "struct config_strlist *""'"); 
  }
  arg2 = (struct config_strlist *)(argp2);
  if (arg1) (arg1)->next = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_strlist_next_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_strlist *arg1 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_strlist *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_strlist, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_strlist_next_get" "', argument " "1"" of type '" "struct config_strlist *""'"); 
  }
  arg1 = (struct config_strlist *)(argp1);
  result = (struct config_strlist *) ((arg1)->next);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_strlist, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_strlist_str_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_strlist *arg1 = (struct config_strlist *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_strlist_str_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_strlist, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_strlist_str_set" "', argument " "1"" of type '" "struct config_strlist *""'"); 
  }
  arg1 = (struct config_strlist *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_strlist_str_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->str);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->str = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->str = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_strlist_str_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_strlist *arg1 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_strlist, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_strlist_str_get" "', argument " "1"" of type '" "struct config_strlist *""'"); 
  }
  arg1 = (struct config_strlist *)(argp1);
  result = (char *) ((arg1)->str);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_config_strlist(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_strlist *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_config_strlist", 0, 0, 0)) SWIG_fail;
  result = (struct config_strlist *)calloc(1, sizeof(struct config_strlist));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_strlist, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_config_strlist(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_strlist *arg1 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_strlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_config_strlist" "', argument " "1"" of type '" "struct config_strlist *""'"); 
  }
  arg1 = (struct config_strlist *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *config_strlist_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_config_strlist, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *config_strlist_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_config_str2list_next_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_str2list *arg1 = (struct config_str2list *) 0 ;
  struct config_str2list *arg2 = (struct config_str2list *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_str2list_next_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_str2list, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_str2list_next_set" "', argument " "1"" of type '" "struct config_str2list *""'"); 
  }
  arg1 = (struct config_str2list *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_str2list, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_str2list_next_set" "', argument " "2"" of type '" "struct config_str2list *""'"); 
  }
  arg2 = (struct config_str2list *)(argp2);
  if (arg1) (arg1)->next = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_str2list_next_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_str2list *arg1 = (struct config_str2list *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_str2list *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_str2list, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_str2list_next_get" "', argument " "1"" of type '" "struct config_str2list *""'"); 
  }
  arg1 = (struct config_str2list *)(argp1);
  result = (struct config_str2list *) ((arg1)->next);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_str2list, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_str2list_str_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_str2list *arg1 = (struct config_str2list *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_str2list_str_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_str2list, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_str2list_str_set" "', argument " "1"" of type '" "struct config_str2list *""'"); 
  }
  arg1 = (struct config_str2list *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_str2list_str_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->str);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->str = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->str = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_str2list_str_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_str2list *arg1 = (struct config_str2list *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_str2list, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_str2list_str_get" "', argument " "1"" of type '" "struct config_str2list *""'"); 
  }
  arg1 = (struct config_str2list *)(argp1);
  result = (char *) ((arg1)->str);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_str2list_str2_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_str2list *arg1 = (struct config_str2list *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_str2list_str2_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_str2list, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_str2list_str2_set" "', argument " "1"" of type '" "struct config_str2list *""'"); 
  }
  arg1 = (struct config_str2list *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_str2list_str2_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->str2);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->str2 = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->str2 = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_str2list_str2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_str2list *arg1 = (struct config_str2list *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_str2list, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_str2list_str2_get" "', argument " "1"" of type '" "struct config_str2list *""'"); 
  }
  arg1 = (struct config_str2list *)(argp1);
  result = (char *) ((arg1)->str2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_config_str2list(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_str2list *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_config_str2list", 0, 0, 0)) SWIG_fail;
  result = (struct config_str2list *)calloc(1, sizeof(struct config_str2list));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_str2list, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_config_str2list(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_str2list *arg1 = (struct config_str2list *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_str2list, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_config_str2list" "', argument " "1"" of type '" "struct config_str2list *""'"); 
  }
  arg1 = (struct config_str2list *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *config_str2list_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_config_str2list, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *config_str2list_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_config_file_verbosity_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_verbosity_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_verbosity_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_verbosity_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->verbosity = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_verbosity_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_verbosity_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->verbosity);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_stat_interval_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_stat_interval_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_stat_interval_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_stat_interval_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->stat_interval = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_stat_interval_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_stat_interval_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->stat_interval);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_stat_cumulative_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_stat_cumulative_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_stat_cumulative_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_stat_cumulative_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->stat_cumulative = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_stat_cumulative_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_stat_cumulative_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->stat_cumulative);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_stat_extended_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_stat_extended_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_stat_extended_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_stat_extended_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->stat_extended = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_stat_extended_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_stat_extended_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->stat_extended);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_num_threads_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_num_threads_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_num_threads_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_num_threads_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->num_threads = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_num_threads_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_num_threads_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->num_threads);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_port_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_port_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_port_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_port_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->port = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_port_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_port_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->port);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_do_ip4_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_do_ip4_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_do_ip4_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_do_ip4_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->do_ip4 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_do_ip4_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_do_ip4_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->do_ip4);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_do_ip6_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_do_ip6_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_do_ip6_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_do_ip6_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->do_ip6 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_do_ip6_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_do_ip6_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->do_ip6);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_do_udp_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_do_udp_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_do_udp_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_do_udp_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->do_udp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_do_udp_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_do_udp_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->do_udp);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_do_tcp_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_do_tcp_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_do_tcp_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_do_tcp_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->do_tcp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_do_tcp_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_do_tcp_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->do_tcp);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_outgoing_num_ports_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_outgoing_num_ports_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_outgoing_num_ports_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_outgoing_num_ports_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->outgoing_num_ports = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_outgoing_num_ports_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_outgoing_num_ports_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->outgoing_num_ports);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_outgoing_num_tcp_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_outgoing_num_tcp_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_outgoing_num_tcp_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_outgoing_num_tcp_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->outgoing_num_tcp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_outgoing_num_tcp_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_outgoing_num_tcp_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->outgoing_num_tcp);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_incoming_num_tcp_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_incoming_num_tcp_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_incoming_num_tcp_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_incoming_num_tcp_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->incoming_num_tcp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_incoming_num_tcp_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_incoming_num_tcp_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->incoming_num_tcp);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_outgoing_avail_ports_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_outgoing_avail_ports_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_outgoing_avail_ports_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_outgoing_avail_ports_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = (int *)(argp2);
  if (arg1) (arg1)->outgoing_avail_ports = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_outgoing_avail_ports_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_outgoing_avail_ports_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int *) ((arg1)->outgoing_avail_ports);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_msg_buffer_size_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_msg_buffer_size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_msg_buffer_size_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_msg_buffer_size_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->msg_buffer_size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_msg_buffer_size_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_msg_buffer_size_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->msg_buffer_size);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_msg_cache_size_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_msg_cache_size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_msg_cache_size_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_msg_cache_size_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->msg_cache_size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_msg_cache_size_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_msg_cache_size_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->msg_cache_size);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_msg_cache_slabs_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_msg_cache_slabs_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_msg_cache_slabs_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_msg_cache_slabs_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->msg_cache_slabs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_msg_cache_slabs_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_msg_cache_slabs_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->msg_cache_slabs);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_num_queries_per_thread_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_num_queries_per_thread_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_num_queries_per_thread_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_num_queries_per_thread_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->num_queries_per_thread = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_num_queries_per_thread_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_num_queries_per_thread_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->num_queries_per_thread);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_jostle_time_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_jostle_time_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_jostle_time_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_jostle_time_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->jostle_time = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_jostle_time_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_jostle_time_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->jostle_time);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_rrset_cache_size_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_rrset_cache_size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_rrset_cache_size_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_rrset_cache_size_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->rrset_cache_size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_rrset_cache_size_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_rrset_cache_size_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->rrset_cache_size);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_rrset_cache_slabs_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_rrset_cache_slabs_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_rrset_cache_slabs_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_rrset_cache_slabs_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->rrset_cache_slabs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_rrset_cache_slabs_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_rrset_cache_slabs_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->rrset_cache_slabs);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_host_ttl_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_host_ttl_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_host_ttl_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_host_ttl_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->host_ttl = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_host_ttl_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_host_ttl_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->host_ttl);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_infra_cache_slabs_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_infra_cache_slabs_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_infra_cache_slabs_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_infra_cache_slabs_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->infra_cache_slabs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_infra_cache_slabs_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_infra_cache_slabs_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->infra_cache_slabs);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_infra_cache_numhosts_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_infra_cache_numhosts_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_infra_cache_numhosts_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_infra_cache_numhosts_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->infra_cache_numhosts = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_infra_cache_numhosts_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_infra_cache_numhosts_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->infra_cache_numhosts);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_target_fetch_policy_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_target_fetch_policy_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_target_fetch_policy_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_target_fetch_policy_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->target_fetch_policy);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->target_fetch_policy = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->target_fetch_policy = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_target_fetch_policy_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_target_fetch_policy_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->target_fetch_policy);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_if_automatic_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_if_automatic_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_if_automatic_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_if_automatic_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->if_automatic = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_if_automatic_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_if_automatic_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->if_automatic);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_num_ifs_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_num_ifs_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_num_ifs_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_num_ifs_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->num_ifs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_num_ifs_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_num_ifs_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->num_ifs);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_num_out_ifs_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_num_out_ifs_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_num_out_ifs_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_num_out_ifs_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->num_out_ifs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_num_out_ifs_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_num_out_ifs_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->num_out_ifs);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_root_hints_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_strlist *arg2 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_root_hints_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_root_hints_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_strlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_root_hints_set" "', argument " "2"" of type '" "struct config_strlist *""'"); 
  }
  arg2 = (struct config_strlist *)(argp2);
  if (arg1) (arg1)->root_hints = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_root_hints_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_strlist *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_root_hints_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_strlist *) ((arg1)->root_hints);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_strlist, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_stubs_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_stub *arg2 = (struct config_stub *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_stubs_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_stubs_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_stub, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_stubs_set" "', argument " "2"" of type '" "struct config_stub *""'"); 
  }
  arg2 = (struct config_stub *)(argp2);
  if (arg1) (arg1)->stubs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_stubs_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_stub *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_stubs_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_stub *) ((arg1)->stubs);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_stub, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_forwards_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_stub *arg2 = (struct config_stub *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_forwards_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_forwards_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_stub, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_forwards_set" "', argument " "2"" of type '" "struct config_stub *""'"); 
  }
  arg2 = (struct config_stub *)(argp2);
  if (arg1) (arg1)->forwards = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_forwards_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_stub *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_forwards_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_stub *) ((arg1)->forwards);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_stub, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_donotqueryaddrs_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_strlist *arg2 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_donotqueryaddrs_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_donotqueryaddrs_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_strlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_donotqueryaddrs_set" "', argument " "2"" of type '" "struct config_strlist *""'"); 
  }
  arg2 = (struct config_strlist *)(argp2);
  if (arg1) (arg1)->donotqueryaddrs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_donotqueryaddrs_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_strlist *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_donotqueryaddrs_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_strlist *) ((arg1)->donotqueryaddrs);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_strlist, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_acls_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_str2list *arg2 = (struct config_str2list *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_acls_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_acls_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_str2list, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_acls_set" "', argument " "2"" of type '" "struct config_str2list *""'"); 
  }
  arg2 = (struct config_str2list *)(argp2);
  if (arg1) (arg1)->acls = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_acls_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_str2list *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_acls_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_str2list *) ((arg1)->acls);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_str2list, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_donotquery_localhost_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_donotquery_localhost_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_donotquery_localhost_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_donotquery_localhost_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->donotquery_localhost = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_donotquery_localhost_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_donotquery_localhost_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->donotquery_localhost);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_harden_short_bufsize_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_harden_short_bufsize_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_harden_short_bufsize_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_harden_short_bufsize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->harden_short_bufsize = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_harden_short_bufsize_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_harden_short_bufsize_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->harden_short_bufsize);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_harden_large_queries_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_harden_large_queries_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_harden_large_queries_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_harden_large_queries_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->harden_large_queries = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_harden_large_queries_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_harden_large_queries_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->harden_large_queries);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_harden_glue_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_harden_glue_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_harden_glue_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_harden_glue_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->harden_glue = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_harden_glue_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_harden_glue_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->harden_glue);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_harden_dnssec_stripped_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_harden_dnssec_stripped_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_harden_dnssec_stripped_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_harden_dnssec_stripped_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->harden_dnssec_stripped = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_harden_dnssec_stripped_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_harden_dnssec_stripped_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->harden_dnssec_stripped);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_harden_referral_path_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_harden_referral_path_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_harden_referral_path_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_harden_referral_path_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->harden_referral_path = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_harden_referral_path_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_harden_referral_path_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->harden_referral_path);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_use_caps_bits_for_id_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_use_caps_bits_for_id_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_use_caps_bits_for_id_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_use_caps_bits_for_id_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->use_caps_bits_for_id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_use_caps_bits_for_id_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_use_caps_bits_for_id_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->use_caps_bits_for_id);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_private_address_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_strlist *arg2 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_private_address_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_private_address_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_strlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_private_address_set" "', argument " "2"" of type '" "struct config_strlist *""'"); 
  }
  arg2 = (struct config_strlist *)(argp2);
  if (arg1) (arg1)->private_address = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_private_address_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_strlist *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_private_address_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_strlist *) ((arg1)->private_address);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_strlist, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_private_domain_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_strlist *arg2 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_private_domain_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_private_domain_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_strlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_private_domain_set" "', argument " "2"" of type '" "struct config_strlist *""'"); 
  }
  arg2 = (struct config_strlist *)(argp2);
  if (arg1) (arg1)->private_domain = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_private_domain_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_strlist *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_private_domain_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_strlist *) ((arg1)->private_domain);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_strlist, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_unwanted_threshold_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_unwanted_threshold_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_unwanted_threshold_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_unwanted_threshold_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->unwanted_threshold = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_unwanted_threshold_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_unwanted_threshold_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->unwanted_threshold);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_chrootdir_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_chrootdir_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_chrootdir_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_chrootdir_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->chrootdir);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->chrootdir = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->chrootdir = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_chrootdir_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_chrootdir_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->chrootdir);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_username_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_username_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_username_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_username_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->username);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->username = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->username = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_username_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_username_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->username);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_directory_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_directory_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_directory_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_directory_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->directory);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->directory = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->directory = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_directory_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_directory_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->directory);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_logfile_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_logfile_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_logfile_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_logfile_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->logfile);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->logfile = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->logfile = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_logfile_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_logfile_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->logfile);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_pidfile_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_pidfile_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_pidfile_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_pidfile_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->pidfile);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->pidfile = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->pidfile = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_pidfile_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_pidfile_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->pidfile);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_use_syslog_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_use_syslog_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_use_syslog_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_use_syslog_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->use_syslog = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_use_syslog_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_use_syslog_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->use_syslog);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_hide_identity_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_hide_identity_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_hide_identity_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_hide_identity_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->hide_identity = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_hide_identity_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_hide_identity_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->hide_identity);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_hide_version_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_hide_version_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_hide_version_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_hide_version_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->hide_version = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_hide_version_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_hide_version_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->hide_version);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_identity_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_identity_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_identity_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_identity_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->identity);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->identity = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->identity = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_identity_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_identity_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->identity);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_version_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_version_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_version_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_version_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->version);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->version = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->version = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_version_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_version_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->version);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_module_conf_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_module_conf_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_module_conf_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_module_conf_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->module_conf);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->module_conf = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->module_conf = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_module_conf_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_module_conf_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->module_conf);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_trust_anchor_file_list_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_strlist *arg2 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_trust_anchor_file_list_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_trust_anchor_file_list_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_strlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_trust_anchor_file_list_set" "', argument " "2"" of type '" "struct config_strlist *""'"); 
  }
  arg2 = (struct config_strlist *)(argp2);
  if (arg1) (arg1)->trust_anchor_file_list = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_trust_anchor_file_list_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_strlist *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_trust_anchor_file_list_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_strlist *) ((arg1)->trust_anchor_file_list);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_strlist, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_trust_anchor_list_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_strlist *arg2 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_trust_anchor_list_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_trust_anchor_list_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_strlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_trust_anchor_list_set" "', argument " "2"" of type '" "struct config_strlist *""'"); 
  }
  arg2 = (struct config_strlist *)(argp2);
  if (arg1) (arg1)->trust_anchor_list = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_trust_anchor_list_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_strlist *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_trust_anchor_list_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_strlist *) ((arg1)->trust_anchor_list);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_strlist, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_trusted_keys_file_list_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_strlist *arg2 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_trusted_keys_file_list_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_trusted_keys_file_list_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_strlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_trusted_keys_file_list_set" "', argument " "2"" of type '" "struct config_strlist *""'"); 
  }
  arg2 = (struct config_strlist *)(argp2);
  if (arg1) (arg1)->trusted_keys_file_list = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_trusted_keys_file_list_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_strlist *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_trusted_keys_file_list_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_strlist *) ((arg1)->trusted_keys_file_list);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_strlist, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_max_ttl_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_max_ttl_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_max_ttl_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_max_ttl_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->max_ttl = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_max_ttl_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_max_ttl_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->max_ttl);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_val_date_override_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_val_date_override_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_val_date_override_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_val_date_override_set" "', argument " "2"" of type '" "int32_t""'");
  } 
  arg2 = (int32_t)(val2);
  if (arg1) (arg1)->val_date_override = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_val_date_override_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int32_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_val_date_override_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int32_t) ((arg1)->val_date_override);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_bogus_ttl_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_bogus_ttl_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_bogus_ttl_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_bogus_ttl_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->bogus_ttl = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_bogus_ttl_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_bogus_ttl_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->bogus_ttl);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_val_clean_additional_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_val_clean_additional_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_val_clean_additional_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_val_clean_additional_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->val_clean_additional = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_val_clean_additional_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_val_clean_additional_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->val_clean_additional);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_val_permissive_mode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_val_permissive_mode_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_val_permissive_mode_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_val_permissive_mode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->val_permissive_mode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_val_permissive_mode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_val_permissive_mode_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->val_permissive_mode);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_val_nsec3_key_iterations_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_val_nsec3_key_iterations_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_val_nsec3_key_iterations_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_val_nsec3_key_iterations_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->val_nsec3_key_iterations);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->val_nsec3_key_iterations = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->val_nsec3_key_iterations = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_val_nsec3_key_iterations_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_val_nsec3_key_iterations_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->val_nsec3_key_iterations);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_key_cache_size_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_key_cache_size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_key_cache_size_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_key_cache_size_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->key_cache_size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_key_cache_size_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_key_cache_size_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->key_cache_size);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_key_cache_slabs_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_key_cache_slabs_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_key_cache_slabs_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_key_cache_slabs_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->key_cache_slabs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_key_cache_slabs_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_key_cache_slabs_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->key_cache_slabs);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_neg_cache_size_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_neg_cache_size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_neg_cache_size_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_neg_cache_size_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = (size_t)(val2);
  if (arg1) (arg1)->neg_cache_size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_neg_cache_size_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_neg_cache_size_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->neg_cache_size);
  resultobj = SWIG_From_size_t((size_t)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_local_zones_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_str2list *arg2 = (struct config_str2list *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_local_zones_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_local_zones_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_str2list, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_local_zones_set" "', argument " "2"" of type '" "struct config_str2list *""'"); 
  }
  arg2 = (struct config_str2list *)(argp2);
  if (arg1) (arg1)->local_zones = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_local_zones_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_str2list *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_local_zones_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_str2list *) ((arg1)->local_zones);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_str2list, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_local_zones_nodefault_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_strlist *arg2 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_local_zones_nodefault_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_local_zones_nodefault_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_strlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_local_zones_nodefault_set" "', argument " "2"" of type '" "struct config_strlist *""'"); 
  }
  arg2 = (struct config_strlist *)(argp2);
  if (arg1) (arg1)->local_zones_nodefault = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_local_zones_nodefault_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_strlist *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_local_zones_nodefault_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_strlist *) ((arg1)->local_zones_nodefault);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_strlist, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_local_data_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_strlist *arg2 = (struct config_strlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_local_data_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_local_data_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_config_strlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_local_data_set" "', argument " "2"" of type '" "struct config_strlist *""'"); 
  }
  arg2 = (struct config_strlist *)(argp2);
  if (arg1) (arg1)->local_data = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_local_data_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_strlist *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_local_data_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (struct config_strlist *) ((arg1)->local_data);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_strlist, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_remote_control_enable_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_remote_control_enable_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_remote_control_enable_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_remote_control_enable_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->remote_control_enable = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_remote_control_enable_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_remote_control_enable_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->remote_control_enable);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_control_ifs_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  struct config_strlist_head arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_control_ifs_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_control_ifs_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_config_strlist_head,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_control_ifs_set" "', argument " "2"" of type '" "struct config_strlist_head""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "config_file_control_ifs_set" "', argument " "2"" of type '" "struct config_strlist_head""'");
    } else {
      arg2 = *((struct config_strlist_head *)(argp2));
    }
  }
  if (arg1) (arg1)->control_ifs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_control_ifs_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct config_strlist_head result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_control_ifs_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result =  ((arg1)->control_ifs);
  resultobj = SWIG_NewPointerObj((struct config_strlist_head *)memcpy((struct config_strlist_head *)calloc(1,sizeof(struct config_strlist_head)),&result,sizeof(struct config_strlist_head)), SWIGTYPE_p_config_strlist_head, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_control_port_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_control_port_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_control_port_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_control_port_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->control_port = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_control_port_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_control_port_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->control_port);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_server_key_file_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_server_key_file_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_server_key_file_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_server_key_file_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->server_key_file);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->server_key_file = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->server_key_file = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_server_key_file_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_server_key_file_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->server_key_file);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_server_cert_file_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_server_cert_file_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_server_cert_file_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_server_cert_file_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->server_cert_file);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->server_cert_file = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->server_cert_file = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_server_cert_file_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_server_cert_file_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->server_cert_file);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_control_key_file_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_control_key_file_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_control_key_file_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_control_key_file_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->control_key_file);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->control_key_file = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->control_key_file = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_control_key_file_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_control_key_file_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->control_key_file);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_control_cert_file_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_control_cert_file_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_control_cert_file_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "config_file_control_cert_file_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  free((char*)arg1->control_cert_file);
  if (arg2) {
    size_t size = strlen((const char *)(arg2)) + 1;
    arg1->control_cert_file = (char *)(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));
  } else {
    arg1->control_cert_file = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_control_cert_file_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_control_cert_file_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (char *) ((arg1)->control_cert_file);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_do_daemonize_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "config_file_do_daemonize_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_do_daemonize_set" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "config_file_do_daemonize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->do_daemonize = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_config_file_do_daemonize_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "config_file_do_daemonize_get" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (int) ((arg1)->do_daemonize);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_config_file(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_config_file", 0, 0, 0)) SWIG_fail;
  result = (struct config_file *)calloc(1, sizeof(struct config_file));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_config_file, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_config_file(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_config_file" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *config_file_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_config_file, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *config_file_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap__get_ifs_tuple(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_ifs_tuple" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (PyObject *)_get_ifs_tuple(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__get_ifs_out_tuple(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct config_file *arg1 = (struct config_file *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_config_file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_ifs_out_tuple" "', argument " "1"" of type '" "struct config_file *""'"); 
  }
  arg1 = (struct config_file *)(argp1);
  result = (PyObject *)_get_ifs_out_tuple(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_next_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  struct delegpt_ns *arg2 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_ns_next_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_next_set" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_delegpt_ns, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "delegpt_ns_next_set" "', argument " "2"" of type '" "struct delegpt_ns *""'"); 
  }
  arg2 = (struct delegpt_ns *)(argp2);
  if (arg1) (arg1)->next = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_next_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct delegpt_ns *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_next_get" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  result = (struct delegpt_ns *) ((arg1)->next);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt_ns, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_resolved_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_ns_resolved_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_resolved_set" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_ns_resolved_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->resolved = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_resolved_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_resolved_get" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  result = (int) ((arg1)->resolved);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_got4_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_ns_got4_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_got4_set" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_ns_got4_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = (uint8_t)(val2);
  if (arg1) (arg1)->got4 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_got4_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint8_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_got4_get" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  result = (uint8_t) ((arg1)->got4);
  resultobj = SWIG_From_unsigned_SS_char((unsigned char)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_got6_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_ns_got6_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_got6_set" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_ns_got6_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = (uint8_t)(val2);
  if (arg1) (arg1)->got6 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_got6_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint8_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_got6_get" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  result = (uint8_t) ((arg1)->got6);
  resultobj = SWIG_From_unsigned_SS_char((unsigned char)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_lame_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_ns_lame_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_lame_set" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_ns_lame_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = (uint8_t)(val2);
  if (arg1) (arg1)->lame = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_lame_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint8_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_lame_get" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  result = (uint8_t) ((arg1)->lame);
  resultobj = SWIG_From_unsigned_SS_char((unsigned char)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_done_pside4_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_ns_done_pside4_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_done_pside4_set" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_ns_done_pside4_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = (uint8_t)(val2);
  if (arg1) (arg1)->done_pside4 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_done_pside4_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint8_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_done_pside4_get" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  result = (uint8_t) ((arg1)->done_pside4);
  resultobj = SWIG_From_unsigned_SS_char((unsigned char)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_done_pside6_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_ns_done_pside6_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_done_pside6_set" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_ns_done_pside6_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = (uint8_t)(val2);
  if (arg1) (arg1)->done_pside6 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_ns_done_pside6_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint8_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_ns_done_pside6_get" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  result = (uint8_t) ((arg1)->done_pside6);
  resultobj = SWIG_From_unsigned_SS_char((unsigned char)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_delegpt_ns(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_delegpt_ns", 0, 0, 0)) SWIG_fail;
  result = (struct delegpt_ns *)calloc(1, sizeof(struct delegpt_ns));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt_ns, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_delegpt_ns(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_delegpt_ns" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *delegpt_ns_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_delegpt_ns, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *delegpt_ns_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delegpt_addr_next_result_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  struct delegpt_addr *arg2 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_addr_next_result_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_next_result_set" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_delegpt_addr, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "delegpt_addr_next_result_set" "', argument " "2"" of type '" "struct delegpt_addr *""'"); 
  }
  arg2 = (struct delegpt_addr *)(argp2);
  if (arg1) (arg1)->next_result = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_next_result_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct delegpt_addr *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_next_result_get" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  result = (struct delegpt_addr *) ((arg1)->next_result);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt_addr, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_next_usable_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  struct delegpt_addr *arg2 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_addr_next_usable_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_next_usable_set" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_delegpt_addr, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "delegpt_addr_next_usable_set" "', argument " "2"" of type '" "struct delegpt_addr *""'"); 
  }
  arg2 = (struct delegpt_addr *)(argp2);
  if (arg1) (arg1)->next_usable = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_next_usable_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct delegpt_addr *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_next_usable_get" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  result = (struct delegpt_addr *) ((arg1)->next_usable);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt_addr, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_next_target_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  struct delegpt_addr *arg2 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_addr_next_target_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_next_target_set" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_delegpt_addr, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "delegpt_addr_next_target_set" "', argument " "2"" of type '" "struct delegpt_addr *""'"); 
  }
  arg2 = (struct delegpt_addr *)(argp2);
  if (arg1) (arg1)->next_target = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_next_target_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct delegpt_addr *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_next_target_get" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  result = (struct delegpt_addr *) ((arg1)->next_target);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt_addr, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_attempts_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_addr_attempts_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_attempts_set" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_addr_attempts_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->attempts = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_attempts_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_attempts_get" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  result = (int) ((arg1)->attempts);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_sel_rtt_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_addr_sel_rtt_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_sel_rtt_set" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_addr_sel_rtt_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->sel_rtt = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_sel_rtt_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_sel_rtt_get" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  result = (int) ((arg1)->sel_rtt);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_bogus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_addr_bogus_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_bogus_set" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_addr_bogus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->bogus = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_bogus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_bogus_get" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  result = (int) ((arg1)->bogus);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_lame_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_addr_lame_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_lame_set" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_addr_lame_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->lame = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_addr_lame_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_addr_lame_get" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  result = (int) ((arg1)->lame);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_delegpt_addr(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_delegpt_addr", 0, 0, 0)) SWIG_fail;
  result = (struct delegpt_addr *)calloc(1, sizeof(struct delegpt_addr));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt_addr, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_delegpt_addr(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_delegpt_addr" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *delegpt_addr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_delegpt_addr, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *delegpt_addr_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delegpt_namelabs_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_namelabs_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_namelabs_set" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_namelabs_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->namelabs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_namelabs_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_namelabs_get" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  result = (int) ((arg1)->namelabs);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_nslist_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  struct delegpt_ns *arg2 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_nslist_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_nslist_set" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_delegpt_ns, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "delegpt_nslist_set" "', argument " "2"" of type '" "struct delegpt_ns *""'"); 
  }
  arg2 = (struct delegpt_ns *)(argp2);
  if (arg1) (arg1)->nslist = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_nslist_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct delegpt_ns *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_nslist_get" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  result = (struct delegpt_ns *) ((arg1)->nslist);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt_ns, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_target_list_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  struct delegpt_addr *arg2 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_target_list_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_target_list_set" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_delegpt_addr, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "delegpt_target_list_set" "', argument " "2"" of type '" "struct delegpt_addr *""'"); 
  }
  arg2 = (struct delegpt_addr *)(argp2);
  if (arg1) (arg1)->target_list = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_target_list_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct delegpt_addr *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_target_list_get" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  result = (struct delegpt_addr *) ((arg1)->target_list);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt_addr, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_usable_list_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  struct delegpt_addr *arg2 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_usable_list_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_usable_list_set" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_delegpt_addr, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "delegpt_usable_list_set" "', argument " "2"" of type '" "struct delegpt_addr *""'"); 
  }
  arg2 = (struct delegpt_addr *)(argp2);
  if (arg1) (arg1)->usable_list = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_usable_list_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct delegpt_addr *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_usable_list_get" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  result = (struct delegpt_addr *) ((arg1)->usable_list);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt_addr, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_result_list_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  struct delegpt_addr *arg2 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_result_list_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_result_list_set" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_delegpt_addr, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "delegpt_result_list_set" "', argument " "2"" of type '" "struct delegpt_addr *""'"); 
  }
  arg2 = (struct delegpt_addr *)(argp2);
  if (arg1) (arg1)->result_list = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_result_list_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  struct delegpt_addr *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_result_list_get" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  result = (struct delegpt_addr *) ((arg1)->result_list);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt_addr, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_bogus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_bogus_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_bogus_set" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_bogus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  if (arg1) (arg1)->bogus = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_bogus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_bogus_get" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  result = (int) ((arg1)->bogus);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_has_parent_side_NS_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_has_parent_side_NS_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_has_parent_side_NS_set" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_has_parent_side_NS_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = (uint8_t)(val2);
  if (arg1) (arg1)->has_parent_side_NS = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_has_parent_side_NS_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint8_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_has_parent_side_NS_get" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  result = (uint8_t) ((arg1)->has_parent_side_NS);
  resultobj = SWIG_From_unsigned_SS_char((unsigned char)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_dp_type_mlc_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delegpt_dp_type_mlc_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_dp_type_mlc_set" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "delegpt_dp_type_mlc_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = (uint8_t)(val2);
  if (arg1) (arg1)->dp_type_mlc = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delegpt_dp_type_mlc_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint8_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delegpt_dp_type_mlc_get" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  result = (uint8_t) ((arg1)->dp_type_mlc);
  resultobj = SWIG_From_unsigned_SS_char((unsigned char)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_delegpt(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_delegpt", 0, 0, 0)) SWIG_fail;
  result = (struct delegpt *)calloc(1, sizeof(struct delegpt));
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_delegpt(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_delegpt" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  free((char *) arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *delegpt_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_delegpt, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *delegpt_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap__get_dp_dname(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_dp_dname" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  result = (PyObject *)_get_dp_dname(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__get_dp_dname_components(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt *arg1 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_dp_dname_components" "', argument " "1"" of type '" "struct delegpt *""'"); 
  }
  arg1 = (struct delegpt *)(argp1);
  result = (PyObject *)_get_dp_dname_components(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__get_dpns_dname(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_dpns_dname" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  result = (PyObject *)_get_dpns_dname(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__get_dpns_dname_components(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_ns *arg1 = (struct delegpt_ns *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_ns, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_get_dpns_dname_components" "', argument " "1"" of type '" "struct delegpt_ns *""'"); 
  }
  arg1 = (struct delegpt_ns *)(argp1);
  result = (PyObject *)_get_dpns_dname_components(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__delegpt_addr_addr_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct delegpt_addr *arg1 = (struct delegpt_addr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_delegpt_addr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_delegpt_addr_addr_get" "', argument " "1"" of type '" "struct delegpt_addr *""'"); 
  }
  arg1 = (struct delegpt_addr *)(argp1);
  result = (PyObject *)_delegpt_addr_addr_get(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_set_return_msg(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int arg4 ;
  uint16_t arg5 ;
  uint32_t arg6 ;
  PyObject *arg7 = (PyObject *) 0 ;
  PyObject *arg8 = (PyObject *) 0 ;
  PyObject *arg9 = (PyObject *) 0 ;
  PyObject *arg10 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned short val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  PyObject *swig_obj[10] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "set_return_msg", 10, 10, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "set_return_msg" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "set_return_msg" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "set_return_msg" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "set_return_msg" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_short(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "set_return_msg" "', argument " "5"" of type '" "uint16_t""'");
  } 
  arg5 = (uint16_t)(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "set_return_msg" "', argument " "6"" of type '" "uint32_t""'");
  } 
  arg6 = (uint32_t)(val6);
  arg7 = swig_obj[6];
  arg8 = swig_obj[7];
  arg9 = swig_obj[8];
  arg10 = swig_obj[9];
  result = (int)set_return_msg(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  resultobj = SWIG_From_int((int)(result));
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_dns_cache_find_delegation(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_env *arg1 = (struct module_env *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  size_t arg3 ;
  uint16_t arg4 ;
  uint16_t arg5 ;
  struct regional *arg6 = (struct regional *) 0 ;
  struct dns_msg **arg7 = (struct dns_msg **) 0 ;
  uint32_t arg8 ;
  int arg9 ;
  uint8_t *arg10 = (uint8_t *) 0 ;
  size_t arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  unsigned short val4 ;
  int ecode4 = 0 ;
  unsigned short val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  unsigned int val8 ;
  int ecode8 = 0 ;
  int val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  size_t val11 ;
  int ecode11 = 0 ;
  PyObject *swig_obj[11] ;
  struct delegpt *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "dns_cache_find_delegation", 11, 11, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dns_cache_find_delegation" "', argument " "1"" of type '" "struct module_env *""'"); 
  }
  arg1 = (struct module_env *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dns_cache_find_delegation" "', argument " "2"" of type '" "uint8_t *""'"); 
  }
  arg2 = (uint8_t *)(argp2);
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dns_cache_find_delegation" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_short(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "dns_cache_find_delegation" "', argument " "4"" of type '" "uint16_t""'");
  } 
  arg4 = (uint16_t)(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_short(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "dns_cache_find_delegation" "', argument " "5"" of type '" "uint16_t""'");
  } 
  arg5 = (uint16_t)(val5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6,SWIGTYPE_p_regional, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "dns_cache_find_delegation" "', argument " "6"" of type '" "struct regional *""'"); 
  }
  arg6 = (struct regional *)(argp6);
  res7 = SWIG_ConvertPtr(swig_obj[6], &argp7,SWIGTYPE_p_p_dns_msg, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "dns_cache_find_delegation" "', argument " "7"" of type '" "struct dns_msg **""'"); 
  }
  arg7 = (struct dns_msg **)(argp7);
  ecode8 = SWIG_AsVal_unsigned_SS_int(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "dns_cache_find_delegation" "', argument " "8"" of type '" "uint32_t""'");
  } 
  arg8 = (uint32_t)(val8);
  ecode9 = SWIG_AsVal_int(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "dns_cache_find_delegation" "', argument " "9"" of type '" "int""'");
  } 
  arg9 = (int)(val9);
  res10 = SWIG_ConvertPtr(swig_obj[9], &argp10,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "dns_cache_find_delegation" "', argument " "10"" of type '" "uint8_t *""'"); 
  }
  arg10 = (uint8_t *)(argp10);
  ecode11 = SWIG_AsVal_size_t(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "dns_cache_find_delegation" "', argument " "11"" of type '" "size_t""'");
  } 
  arg11 = (size_t)(val11);
  result = (struct delegpt *)dns_cache_find_delegation(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iter_dp_is_useless(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct query_info *arg1 = (struct query_info *) 0 ;
  uint16_t arg2 ;
  struct delegpt *arg3 = (struct delegpt *) 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject *swig_obj[6] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "iter_dp_is_useless", 6, 6, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_query_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iter_dp_is_useless" "', argument " "1"" of type '" "struct query_info *""'"); 
  }
  arg1 = (struct query_info *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iter_dp_is_useless" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iter_dp_is_useless" "', argument " "3"" of type '" "struct delegpt *""'"); 
  }
  arg3 = (struct delegpt *)(argp3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iter_dp_is_useless" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "iter_dp_is_useless" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "iter_dp_is_useless" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = (int)(val6);
  result = (int)iter_dp_is_useless(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_hints_lookup_stub(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct iter_hints *arg1 = (struct iter_hints *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  uint16_t arg3 ;
  struct delegpt *arg4 = (struct delegpt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  struct iter_hints_stub *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "hints_lookup_stub", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_iter_hints, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "hints_lookup_stub" "', argument " "1"" of type '" "struct iter_hints *""'"); 
  }
  arg1 = (struct iter_hints *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "hints_lookup_stub" "', argument " "2"" of type '" "uint8_t *""'"); 
  }
  arg2 = (uint8_t *)(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_short(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "hints_lookup_stub" "', argument " "3"" of type '" "uint16_t""'");
  } 
  arg3 = (uint16_t)(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_delegpt, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "hints_lookup_stub" "', argument " "4"" of type '" "struct delegpt *""'"); 
  }
  arg4 = (struct delegpt *)(argp4);
  result = (struct iter_hints_stub *)hints_lookup_stub(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iter_hints_stub, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_find_delegation(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  struct delegpt *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "find_delegation", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "find_delegation" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "find_delegation" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = (char *)(buf2);
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "find_delegation" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  result = (struct delegpt *)find_delegation(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_delegpt, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_unbound_verbose__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  enum verbosity_value arg1 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_UnpackTuple(args, "unbound_verbose", 2, 2, &obj0, &obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "unbound_verbose" "', argument " "1"" of type '" "enum verbosity_value""'");
  } 
  arg1 = (enum verbosity_value)(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "unbound_verbose" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  verbose(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_unbound_verbose(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args, 0, 2);
  varargs = PyTuple_GetSlice(args, 2, PyTuple_Size(args));
  resultobj = _wrap_unbound_verbose__varargs__(NULL, newargs, varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_unbound_log_info__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_UnpackTuple(args, "unbound_log_info", 1, 1, &obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unbound_log_info" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  log_info((char const *)arg1,arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_unbound_log_info(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args, 0, 1);
  varargs = PyTuple_GetSlice(args, 1, PyTuple_Size(args));
  resultobj = _wrap_unbound_log_info__varargs__(NULL, newargs, varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_unbound_log_err__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_UnpackTuple(args, "unbound_log_err", 1, 1, &obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unbound_log_err" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  log_err((char const *)arg1,arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_unbound_log_err(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args, 0, 1);
  varargs = PyTuple_GetSlice(args, 1, PyTuple_Size(args));
  resultobj = _wrap_unbound_log_err__varargs__(NULL, newargs, varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_unbound_log_warn__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_UnpackTuple(args, "unbound_log_warn", 1, 1, &obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unbound_log_warn" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  log_warn((char const *)arg1,arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_unbound_log_warn(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args, 0, 1);
  varargs = PyTuple_GetSlice(args, 1, PyTuple_Size(args));
  resultobj = _wrap_unbound_log_warn__varargs__(NULL, newargs, varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_log_hex(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "log_hex", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "log_hex" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "log_hex" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "log_hex" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = (size_t)(val3);
  log_hex((char const *)arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_log_dns_msg(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  struct query_info *arg2 = (struct query_info *) 0 ;
  struct reply_info *arg3 = (struct reply_info *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "log_dns_msg", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "log_dns_msg" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_query_info, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "log_dns_msg" "', argument " "2"" of type '" "struct query_info *""'"); 
  }
  arg2 = (struct query_info *)(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "log_dns_msg" "', argument " "3"" of type '" "struct reply_info *""'"); 
  }
  arg3 = (struct reply_info *)(argp3);
  log_dns_msg((char const *)arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_log_query_info(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  enum verbosity_value arg1 ;
  char *arg2 = (char *) 0 ;
  struct query_info *arg3 = (struct query_info *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "log_query_info", 3, 3, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "log_query_info" "', argument " "1"" of type '" "enum verbosity_value""'");
  } 
  arg1 = (enum verbosity_value)(val1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "log_query_info" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_query_info, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "log_query_info" "', argument " "3"" of type '" "struct query_info *""'"); 
  }
  arg3 = (struct query_info *)(argp3);
  log_query_info(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_regional_log_stats(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct regional *arg1 = (struct regional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_regional, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "regional_log_stats" "', argument " "1"" of type '" "struct regional *""'"); 
  }
  arg1 = (struct regional *)(argp1);
  regional_log_stats(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_log_info(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "log_info" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  pymod_log_info((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_log_err(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "log_err" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  pymod_log_err((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_log_warn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "log_warn" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  pymod_log_warn((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_verbose(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  enum verbosity_value arg1 ;
  char *arg2 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "verbose", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "verbose" "', argument " "1"" of type '" "enum verbosity_value""'");
  } 
  arg1 = (enum verbosity_value)(val1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "verbose" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  pymod_verbose(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_sldns_wire2str_type(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  uint16_t arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_short(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sldns_wire2str_type" "', argument " "1"" of type '" "uint16_t""'");
  } 
  arg1 = (uint16_t)(val1);
  result = (char *)sldns_wire2str_type(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  free(result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sldns_wire2str_class(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  uint16_t arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_short(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sldns_wire2str_class" "', argument " "1"" of type '" "uint16_t""'");
  } 
  arg1 = (uint16_t)(val1);
  result = (char *)sldns_wire2str_class(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  free(result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_storeQueryInCache(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  struct query_info *arg2 = (struct query_info *) 0 ;
  struct reply_info *arg3 = (struct reply_info *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "storeQueryInCache", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "storeQueryInCache" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_query_info, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "storeQueryInCache" "', argument " "2"" of type '" "struct query_info *""'"); 
  }
  arg2 = (struct query_info *)(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_reply_info, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "storeQueryInCache" "', argument " "3"" of type '" "struct reply_info *""'"); 
  }
  arg3 = (struct reply_info *)(argp3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "storeQueryInCache" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = (int)(val4);
  result = (int)storeQueryInCache(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_invalidateQueryInCache(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct module_qstate *arg1 = (struct module_qstate *) 0 ;
  struct query_info *arg2 = (struct query_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "invalidateQueryInCache", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_module_qstate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "invalidateQueryInCache" "', argument " "1"" of type '" "struct module_qstate *""'"); 
  }
  arg1 = (struct module_qstate *)(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_query_info, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "invalidateQueryInCache" "', argument " "2"" of type '" "struct query_info *""'"); 
  }
  arg2 = (struct query_info *)(argp2);
  invalidateQueryInCache(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_strextstate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  enum module_ext_state arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "strextstate" "', argument " "1"" of type '" "enum module_ext_state""'");
  } 
  arg1 = (enum module_ext_state)(val1);
  result = (char *)strextstate(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_strmodulevent(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  enum module_ev arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "strmodulevent" "', argument " "1"" of type '" "enum module_ev""'");
  } 
  arg1 = (enum module_ev)(val1);
  result = (char *)strmodulevent(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_opt_list_find(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option *arg1 = (struct edns_option *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  struct edns_option *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_opt_list_find", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_opt_list_find" "', argument " "1"" of type '" "struct edns_option *""'"); 
  }
  arg1 = (struct edns_option *)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_opt_list_find" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  result = (struct edns_option *)edns_opt_list_find(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_edns_option, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_register_option(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  uint16_t arg1 ;
  int arg2 ;
  int arg3 ;
  struct module_env *arg4 = (struct module_env *) 0 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_register_option", 4, 4, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "edns_register_option" "', argument " "1"" of type '" "uint16_t""'");
  } 
  arg1 = (uint16_t)(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_register_option" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = (int)(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "edns_register_option" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "edns_register_option" "', argument " "4"" of type '" "struct module_env *""'"); 
  }
  arg4 = (struct module_env *)(argp4);
  result = (int)edns_register_option(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_opt_list_remove(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option **arg1 = (struct edns_option **) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_opt_list_remove", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_opt_list_remove" "', argument " "1"" of type '" "struct edns_option **""'"); 
  }
  arg1 = (struct edns_option **)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_opt_list_remove" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  result = (int)edns_opt_list_remove(arg1,arg2);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_edns_opt_list_append(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  struct edns_option **arg1 = (struct edns_option **) 0 ;
  uint16_t arg2 ;
  size_t arg3 ;
  uint8_t *arg4 = (uint8_t *) 0 ;
  struct regional *arg5 = (struct regional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject *swig_obj[4] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "edns_opt_list_append", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_p_edns_option, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "edns_opt_list_append" "', argument " "1"" of type '" "struct edns_option **""'"); 
  }
  arg1 = (struct edns_option **)(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "edns_opt_list_append" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = (uint16_t)(val2);
  {
    if (!PyByteArray_CheckExact(swig_obj[2])) {
      SWIG_exception_fail(SWIG_TypeError, "Expected bytearray!");
      return NULL;
    }
    arg4 = (void*)PyByteArray_AsString(swig_obj[2]);
    arg3 = PyByteArray_Size(swig_obj[2]);
  }
  res5 = SWIG_ConvertPtr(swig_obj[3], &argp5,SWIGTYPE_p_regional, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "edns_opt_list_append" "', argument " "5"" of type '" "struct regional *""'"); 
  }
  arg5 = (struct regional *)(argp5);
  result = (int)edns_opt_list_append(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_inplace_cb_register(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  enum inplace_cb_list_type arg2 ;
  void *arg3 = (void *) 0 ;
  struct module_env *arg4 = (struct module_env *) 0 ;
  int arg5 ;
  int res1 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject *swig_obj[5] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "inplace_cb_register", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "inplace_cb_register" "', argument " "1"" of type '" "void *""'"); 
  }
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "inplace_cb_register" "', argument " "2"" of type '" "enum inplace_cb_list_type""'");
  } 
  arg2 = (enum inplace_cb_list_type)(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "inplace_cb_register" "', argument " "3"" of type '" "void *""'"); 
  }
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "inplace_cb_register" "', argument " "4"" of type '" "struct module_env *""'"); 
  }
  arg4 = (struct module_env *)(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "inplace_cb_register" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = (int)(val5);
  result = (int)inplace_cb_register(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_register_inplace_cb_reply(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  struct module_env *arg2 = (struct module_env *) 0 ;
  int arg3 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "register_inplace_cb_reply", 3, 3, swig_obj)) SWIG_fail;
  {
    if (!PyCallable_Check(swig_obj[0])) {
      SWIG_exception_fail(SWIG_TypeError, "Need a callable object!");
      return NULL;
    }
    arg1 = swig_obj[0];
  }
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "register_inplace_cb_reply" "', argument " "2"" of type '" "struct module_env *""'"); 
  }
  arg2 = (struct module_env *)(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "register_inplace_cb_reply" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (int)register_inplace_cb_reply(arg1,arg2,arg3);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_register_inplace_cb_reply_cache(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  struct module_env *arg2 = (struct module_env *) 0 ;
  int arg3 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "register_inplace_cb_reply_cache", 3, 3, swig_obj)) SWIG_fail;
  {
    if (!PyCallable_Check(swig_obj[0])) {
      SWIG_exception_fail(SWIG_TypeError, "Need a callable object!");
      return NULL;
    }
    arg1 = swig_obj[0];
  }
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "register_inplace_cb_reply_cache" "', argument " "2"" of type '" "struct module_env *""'"); 
  }
  arg2 = (struct module_env *)(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "register_inplace_cb_reply_cache" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (int)register_inplace_cb_reply_cache(arg1,arg2,arg3);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_register_inplace_cb_reply_local(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  struct module_env *arg2 = (struct module_env *) 0 ;
  int arg3 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "register_inplace_cb_reply_local", 3, 3, swig_obj)) SWIG_fail;
  {
    if (!PyCallable_Check(swig_obj[0])) {
      SWIG_exception_fail(SWIG_TypeError, "Need a callable object!");
      return NULL;
    }
    arg1 = swig_obj[0];
  }
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "register_inplace_cb_reply_local" "', argument " "2"" of type '" "struct module_env *""'"); 
  }
  arg2 = (struct module_env *)(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "register_inplace_cb_reply_local" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (int)register_inplace_cb_reply_local(arg1,arg2,arg3);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_register_inplace_cb_reply_servfail(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  struct module_env *arg2 = (struct module_env *) 0 ;
  int arg3 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "register_inplace_cb_reply_servfail", 3, 3, swig_obj)) SWIG_fail;
  {
    if (!PyCallable_Check(swig_obj[0])) {
      SWIG_exception_fail(SWIG_TypeError, "Need a callable object!");
      return NULL;
    }
    arg1 = swig_obj[0];
  }
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "register_inplace_cb_reply_servfail" "', argument " "2"" of type '" "struct module_env *""'"); 
  }
  arg2 = (struct module_env *)(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "register_inplace_cb_reply_servfail" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (int)register_inplace_cb_reply_servfail(arg1,arg2,arg3);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_register_inplace_cb_query(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  struct module_env *arg2 = (struct module_env *) 0 ;
  int arg3 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "register_inplace_cb_query", 3, 3, swig_obj)) SWIG_fail;
  {
    if (!PyCallable_Check(swig_obj[0])) {
      SWIG_exception_fail(SWIG_TypeError, "Need a callable object!");
      return NULL;
    }
    arg1 = swig_obj[0];
  }
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "register_inplace_cb_query" "', argument " "2"" of type '" "struct module_env *""'"); 
  }
  arg2 = (struct module_env *)(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "register_inplace_cb_query" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (int)register_inplace_cb_query(arg1,arg2,arg3);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_register_inplace_cb_query_response(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  struct module_env *arg2 = (struct module_env *) 0 ;
  int arg3 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "register_inplace_cb_query_response", 3, 3, swig_obj)) SWIG_fail;
  {
    if (!PyCallable_Check(swig_obj[0])) {
      SWIG_exception_fail(SWIG_TypeError, "Need a callable object!");
      return NULL;
    }
    arg1 = swig_obj[0];
  }
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "register_inplace_cb_query_response" "', argument " "2"" of type '" "struct module_env *""'"); 
  }
  arg2 = (struct module_env *)(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "register_inplace_cb_query_response" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (int)register_inplace_cb_query_response(arg1,arg2,arg3);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_register_inplace_cb_edns_back_parsed_call(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  struct module_env *arg2 = (struct module_env *) 0 ;
  int arg3 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "register_inplace_cb_edns_back_parsed_call", 3, 3, swig_obj)) SWIG_fail;
  {
    if (!PyCallable_Check(swig_obj[0])) {
      SWIG_exception_fail(SWIG_TypeError, "Need a callable object!");
      return NULL;
    }
    arg1 = swig_obj[0];
  }
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_module_env, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "register_inplace_cb_edns_back_parsed_call" "', argument " "2"" of type '" "struct module_env *""'"); 
  }
  arg2 = (struct module_env *)(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "register_inplace_cb_edns_back_parsed_call" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = (int)(val3);
  result = (int)register_inplace_cb_edns_back_parsed_call(arg1,arg2,arg3);
  resultobj = SWIG_From_int((int)(result));
  return resultobj;
fail:
  return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { "GetNameAsLabelList", _wrap_GetNameAsLabelList, METH_VARARGS, NULL},
	 { "CharArrayAsStringList", _wrap_CharArrayAsStringList, METH_VARARGS, NULL},
	 { "query_info_qtype_get", _wrap_query_info_qtype_get, METH_O, NULL},
	 { "query_info_qclass_get", _wrap_query_info_qclass_get, METH_O, NULL},
	 { "new_query_info", _wrap_new_query_info, METH_NOARGS, NULL},
	 { "delete_query_info", _wrap_delete_query_info, METH_O, NULL},
	 { "query_info_swigregister", query_info_swigregister, METH_O, NULL},
	 { "query_info_swiginit", query_info_swiginit, METH_VARARGS, NULL},
	 { "_get_qname", _wrap__get_qname, METH_O, NULL},
	 { "_get_qname_components", _wrap__get_qname_components, METH_O, NULL},
	 { "dnameAsStr", _wrap_dnameAsStr, METH_O, NULL},
	 { "packed_rrset_key_flags_get", _wrap_packed_rrset_key_flags_get, METH_O, NULL},
	 { "packed_rrset_key_type_get", _wrap_packed_rrset_key_type_get, METH_O, NULL},
	 { "packed_rrset_key_rrset_class_get", _wrap_packed_rrset_key_rrset_class_get, METH_O, NULL},
	 { "new_packed_rrset_key", _wrap_new_packed_rrset_key, METH_NOARGS, NULL},
	 { "delete_packed_rrset_key", _wrap_delete_packed_rrset_key, METH_O, NULL},
	 { "packed_rrset_key_swigregister", packed_rrset_key_swigregister, METH_O, NULL},
	 { "packed_rrset_key_swiginit", packed_rrset_key_swiginit, METH_VARARGS, NULL},
	 { "ntohs", _wrap_ntohs, METH_O, NULL},
	 { "_get_dname", _wrap__get_dname, METH_O, NULL},
	 { "_get_dname_components", _wrap__get_dname_components, METH_O, NULL},
	 { "ub_packed_rrset_key_entry_set", _wrap_ub_packed_rrset_key_entry_set, METH_VARARGS, NULL},
	 { "ub_packed_rrset_key_entry_get", _wrap_ub_packed_rrset_key_entry_get, METH_O, NULL},
	 { "ub_packed_rrset_key_id_set", _wrap_ub_packed_rrset_key_id_set, METH_VARARGS, NULL},
	 { "ub_packed_rrset_key_id_get", _wrap_ub_packed_rrset_key_id_get, METH_O, NULL},
	 { "ub_packed_rrset_key_rk_set", _wrap_ub_packed_rrset_key_rk_set, METH_VARARGS, NULL},
	 { "ub_packed_rrset_key_rk_get", _wrap_ub_packed_rrset_key_rk_get, METH_O, NULL},
	 { "new_ub_packed_rrset_key", _wrap_new_ub_packed_rrset_key, METH_NOARGS, NULL},
	 { "delete_ub_packed_rrset_key", _wrap_delete_ub_packed_rrset_key, METH_O, NULL},
	 { "ub_packed_rrset_key_swigregister", ub_packed_rrset_key_swigregister, METH_O, NULL},
	 { "ub_packed_rrset_key_swiginit", ub_packed_rrset_key_swiginit, METH_VARARGS, NULL},
	 { "lruhash_entry_lock_set", _wrap_lruhash_entry_lock_set, METH_VARARGS, NULL},
	 { "lruhash_entry_lock_get", _wrap_lruhash_entry_lock_get, METH_O, NULL},
	 { "lruhash_entry_overflow_next_set", _wrap_lruhash_entry_overflow_next_set, METH_VARARGS, NULL},
	 { "lruhash_entry_overflow_next_get", _wrap_lruhash_entry_overflow_next_get, METH_O, NULL},
	 { "lruhash_entry_lru_next_set", _wrap_lruhash_entry_lru_next_set, METH_VARARGS, NULL},
	 { "lruhash_entry_lru_next_get", _wrap_lruhash_entry_lru_next_get, METH_O, NULL},
	 { "lruhash_entry_lru_prev_set", _wrap_lruhash_entry_lru_prev_set, METH_VARARGS, NULL},
	 { "lruhash_entry_lru_prev_get", _wrap_lruhash_entry_lru_prev_get, METH_O, NULL},
	 { "lruhash_entry_hash_set", _wrap_lruhash_entry_hash_set, METH_VARARGS, NULL},
	 { "lruhash_entry_hash_get", _wrap_lruhash_entry_hash_get, METH_O, NULL},
	 { "lruhash_entry_key_set", _wrap_lruhash_entry_key_set, METH_VARARGS, NULL},
	 { "lruhash_entry_key_get", _wrap_lruhash_entry_key_get, METH_O, NULL},
	 { "lruhash_entry_data_set", _wrap_lruhash_entry_data_set, METH_VARARGS, NULL},
	 { "lruhash_entry_data_get", _wrap_lruhash_entry_data_get, METH_O, NULL},
	 { "new_lruhash_entry", _wrap_new_lruhash_entry, METH_NOARGS, NULL},
	 { "delete_lruhash_entry", _wrap_delete_lruhash_entry, METH_O, NULL},
	 { "lruhash_entry_swigregister", lruhash_entry_swigregister, METH_O, NULL},
	 { "lruhash_entry_swiginit", lruhash_entry_swiginit, METH_VARARGS, NULL},
	 { "packed_rrset_data_ttl_set", _wrap_packed_rrset_data_ttl_set, METH_VARARGS, NULL},
	 { "packed_rrset_data_ttl_get", _wrap_packed_rrset_data_ttl_get, METH_O, NULL},
	 { "packed_rrset_data_count_set", _wrap_packed_rrset_data_count_set, METH_VARARGS, NULL},
	 { "packed_rrset_data_count_get", _wrap_packed_rrset_data_count_get, METH_O, NULL},
	 { "packed_rrset_data_rrsig_count_set", _wrap_packed_rrset_data_rrsig_count_set, METH_VARARGS, NULL},
	 { "packed_rrset_data_rrsig_count_get", _wrap_packed_rrset_data_rrsig_count_get, METH_O, NULL},
	 { "packed_rrset_data_trust_set", _wrap_packed_rrset_data_trust_set, METH_VARARGS, NULL},
	 { "packed_rrset_data_trust_get", _wrap_packed_rrset_data_trust_get, METH_O, NULL},
	 { "packed_rrset_data_security_set", _wrap_packed_rrset_data_security_set, METH_VARARGS, NULL},
	 { "packed_rrset_data_security_get", _wrap_packed_rrset_data_security_get, METH_O, NULL},
	 { "new_packed_rrset_data", _wrap_new_packed_rrset_data, METH_NOARGS, NULL},
	 { "delete_packed_rrset_data", _wrap_delete_packed_rrset_data, METH_O, NULL},
	 { "packed_rrset_data_swigregister", packed_rrset_data_swigregister, METH_O, NULL},
	 { "packed_rrset_data_swiginit", packed_rrset_data_swiginit, METH_VARARGS, NULL},
	 { "_get_data_rr_len", _wrap__get_data_rr_len, METH_VARARGS, NULL},
	 { "_set_data_rr_ttl", _wrap__set_data_rr_ttl, METH_VARARGS, NULL},
	 { "_get_data_rr_ttl", _wrap__get_data_rr_ttl, METH_VARARGS, NULL},
	 { "_get_data_rr_data", _wrap__get_data_rr_data, METH_VARARGS, NULL},
	 { "reply_info_flags_set", _wrap_reply_info_flags_set, METH_VARARGS, NULL},
	 { "reply_info_flags_get", _wrap_reply_info_flags_get, METH_O, NULL},
	 { "reply_info_qdcount_set", _wrap_reply_info_qdcount_set, METH_VARARGS, NULL},
	 { "reply_info_qdcount_get", _wrap_reply_info_qdcount_get, METH_O, NULL},
	 { "reply_info_ttl_set", _wrap_reply_info_ttl_set, METH_VARARGS, NULL},
	 { "reply_info_ttl_get", _wrap_reply_info_ttl_get, METH_O, NULL},
	 { "reply_info_prefetch_ttl_set", _wrap_reply_info_prefetch_ttl_set, METH_VARARGS, NULL},
	 { "reply_info_prefetch_ttl_get", _wrap_reply_info_prefetch_ttl_get, METH_O, NULL},
	 { "reply_info_authoritative_set", _wrap_reply_info_authoritative_set, METH_VARARGS, NULL},
	 { "reply_info_authoritative_get", _wrap_reply_info_authoritative_get, METH_O, NULL},
	 { "reply_info_security_set", _wrap_reply_info_security_set, METH_VARARGS, NULL},
	 { "reply_info_security_get", _wrap_reply_info_security_get, METH_O, NULL},
	 { "reply_info_an_numrrsets_set", _wrap_reply_info_an_numrrsets_set, METH_VARARGS, NULL},
	 { "reply_info_an_numrrsets_get", _wrap_reply_info_an_numrrsets_get, METH_O, NULL},
	 { "reply_info_ns_numrrsets_set", _wrap_reply_info_ns_numrrsets_set, METH_VARARGS, NULL},
	 { "reply_info_ns_numrrsets_get", _wrap_reply_info_ns_numrrsets_get, METH_O, NULL},
	 { "reply_info_ar_numrrsets_set", _wrap_reply_info_ar_numrrsets_set, METH_VARARGS, NULL},
	 { "reply_info_ar_numrrsets_get", _wrap_reply_info_ar_numrrsets_get, METH_O, NULL},
	 { "reply_info_rrset_count_set", _wrap_reply_info_rrset_count_set, METH_VARARGS, NULL},
	 { "reply_info_rrset_count_get", _wrap_reply_info_rrset_count_get, METH_O, NULL},
	 { "new_reply_info", _wrap_new_reply_info, METH_NOARGS, NULL},
	 { "delete_reply_info", _wrap_delete_reply_info, METH_O, NULL},
	 { "reply_info_swigregister", reply_info_swigregister, METH_O, NULL},
	 { "reply_info_swiginit", reply_info_swiginit, METH_VARARGS, NULL},
	 { "rrset_ref_key_set", _wrap_rrset_ref_key_set, METH_VARARGS, NULL},
	 { "rrset_ref_key_get", _wrap_rrset_ref_key_get, METH_O, NULL},
	 { "rrset_ref_id_set", _wrap_rrset_ref_id_set, METH_VARARGS, NULL},
	 { "rrset_ref_id_get", _wrap_rrset_ref_id_get, METH_O, NULL},
	 { "new_rrset_ref", _wrap_new_rrset_ref, METH_NOARGS, NULL},
	 { "delete_rrset_ref", _wrap_delete_rrset_ref, METH_O, NULL},
	 { "rrset_ref_swigregister", rrset_ref_swigregister, METH_O, NULL},
	 { "rrset_ref_swiginit", rrset_ref_swiginit, METH_VARARGS, NULL},
	 { "dns_msg_qinfo_set", _wrap_dns_msg_qinfo_set, METH_VARARGS, NULL},
	 { "dns_msg_qinfo_get", _wrap_dns_msg_qinfo_get, METH_O, NULL},
	 { "dns_msg_rep_set", _wrap_dns_msg_rep_set, METH_VARARGS, NULL},
	 { "dns_msg_rep_get", _wrap_dns_msg_rep_get, METH_O, NULL},
	 { "new_dns_msg", _wrap_new_dns_msg, METH_NOARGS, NULL},
	 { "delete_dns_msg", _wrap_delete_dns_msg, METH_O, NULL},
	 { "dns_msg_swigregister", dns_msg_swigregister, METH_O, NULL},
	 { "dns_msg_swiginit", dns_msg_swiginit, METH_VARARGS, NULL},
	 { "_rrset_rrsets_get", _wrap__rrset_rrsets_get, METH_VARARGS, NULL},
	 { "_rrset_ref_get", _wrap__rrset_ref_get, METH_VARARGS, NULL},
	 { "new_sockaddr_storage", _wrap_new_sockaddr_storage, METH_NOARGS, NULL},
	 { "delete_sockaddr_storage", _wrap_delete_sockaddr_storage, METH_O, NULL},
	 { "sockaddr_storage_swigregister", sockaddr_storage_swigregister, METH_O, NULL},
	 { "sockaddr_storage_swiginit", sockaddr_storage_swiginit, METH_VARARGS, NULL},
	 { "_sockaddr_storage_len", _wrap__sockaddr_storage_len, METH_O, NULL},
	 { "_sockaddr_storage_family", _wrap__sockaddr_storage_family, METH_O, NULL},
	 { "_sockaddr_storage_addr", _wrap__sockaddr_storage_addr, METH_O, NULL},
	 { "_sockaddr_storage_raw_addr", _wrap__sockaddr_storage_raw_addr, METH_O, NULL},
	 { "_sockaddr_storage_port", _wrap__sockaddr_storage_port, METH_O, NULL},
	 { "_sockaddr_storage_flowinfo", _wrap__sockaddr_storage_flowinfo, METH_O, NULL},
	 { "_sockaddr_storage_scope_id", _wrap__sockaddr_storage_scope_id, METH_O, NULL},
	 { "mesh_state_reply_list_set", _wrap_mesh_state_reply_list_set, METH_VARARGS, NULL},
	 { "mesh_state_reply_list_get", _wrap_mesh_state_reply_list_get, METH_O, NULL},
	 { "new_mesh_state", _wrap_new_mesh_state, METH_NOARGS, NULL},
	 { "delete_mesh_state", _wrap_delete_mesh_state, METH_O, NULL},
	 { "mesh_state_swigregister", mesh_state_swigregister, METH_O, NULL},
	 { "mesh_state_swiginit", mesh_state_swiginit, METH_VARARGS, NULL},
	 { "mesh_reply_next_set", _wrap_mesh_reply_next_set, METH_VARARGS, NULL},
	 { "mesh_reply_next_get", _wrap_mesh_reply_next_get, METH_O, NULL},
	 { "mesh_reply_query_reply_set", _wrap_mesh_reply_query_reply_set, METH_VARARGS, NULL},
	 { "mesh_reply_query_reply_get", _wrap_mesh_reply_query_reply_get, METH_O, NULL},
	 { "new_mesh_reply", _wrap_new_mesh_reply, METH_NOARGS, NULL},
	 { "delete_mesh_reply", _wrap_delete_mesh_reply, METH_O, NULL},
	 { "mesh_reply_swigregister", mesh_reply_swigregister, METH_O, NULL},
	 { "mesh_reply_swiginit", mesh_reply_swiginit, METH_VARARGS, NULL},
	 { "comm_reply__addr_set", _wrap_comm_reply__addr_set, METH_VARARGS, NULL},
	 { "comm_reply__addr_get", _wrap_comm_reply__addr_get, METH_O, NULL},
	 { "new_comm_reply", _wrap_new_comm_reply, METH_NOARGS, NULL},
	 { "delete_comm_reply", _wrap_delete_comm_reply, METH_O, NULL},
	 { "comm_reply_swigregister", comm_reply_swigregister, METH_O, NULL},
	 { "comm_reply_swiginit", comm_reply_swiginit, METH_VARARGS, NULL},
	 { "edns_option__next_set", _wrap_edns_option__next_set, METH_VARARGS, NULL},
	 { "edns_option__next_get", _wrap_edns_option__next_get, METH_O, NULL},
	 { "edns_option__opt_code_set", _wrap_edns_option__opt_code_set, METH_VARARGS, NULL},
	 { "edns_option__opt_code_get", _wrap_edns_option__opt_code_get, METH_O, NULL},
	 { "edns_option__opt_len_set", _wrap_edns_option__opt_len_set, METH_VARARGS, NULL},
	 { "edns_option__opt_len_get", _wrap_edns_option__opt_len_get, METH_O, NULL},
	 { "edns_option__opt_data_set", _wrap_edns_option__opt_data_set, METH_VARARGS, NULL},
	 { "edns_option__opt_data_get", _wrap_edns_option__opt_data_get, METH_O, NULL},
	 { "new_edns_option", _wrap_new_edns_option, METH_NOARGS, NULL},
	 { "delete_edns_option", _wrap_delete_edns_option, METH_O, NULL},
	 { "edns_option_swigregister", edns_option_swigregister, METH_O, NULL},
	 { "edns_option_swiginit", edns_option_swiginit, METH_VARARGS, NULL},
	 { "_edns_option_opt_code_get", _wrap__edns_option_opt_code_get, METH_O, NULL},
	 { "_edns_option_opt_data_get", _wrap__edns_option_opt_data_get, METH_O, NULL},
	 { "edns_data_edns_present_set", _wrap_edns_data_edns_present_set, METH_VARARGS, NULL},
	 { "edns_data_edns_present_get", _wrap_edns_data_edns_present_get, METH_O, NULL},
	 { "edns_data_ext_rcode_set", _wrap_edns_data_ext_rcode_set, METH_VARARGS, NULL},
	 { "edns_data_ext_rcode_get", _wrap_edns_data_ext_rcode_get, METH_O, NULL},
	 { "edns_data_edns_version_set", _wrap_edns_data_edns_version_set, METH_VARARGS, NULL},
	 { "edns_data_edns_version_get", _wrap_edns_data_edns_version_get, METH_O, NULL},
	 { "edns_data_bits_set", _wrap_edns_data_bits_set, METH_VARARGS, NULL},
	 { "edns_data_bits_get", _wrap_edns_data_bits_get, METH_O, NULL},
	 { "edns_data_udp_size_set", _wrap_edns_data_udp_size_set, METH_VARARGS, NULL},
	 { "edns_data_udp_size_get", _wrap_edns_data_udp_size_get, METH_O, NULL},
	 { "edns_data_opt_list_in_set", _wrap_edns_data_opt_list_in_set, METH_VARARGS, NULL},
	 { "edns_data_opt_list_in_get", _wrap_edns_data_opt_list_in_get, METH_O, NULL},
	 { "edns_data_opt_list_out_set", _wrap_edns_data_opt_list_out_set, METH_VARARGS, NULL},
	 { "edns_data_opt_list_out_get", _wrap_edns_data_opt_list_out_get, METH_O, NULL},
	 { "edns_data_opt_list_inplace_cb_out_set", _wrap_edns_data_opt_list_inplace_cb_out_set, METH_VARARGS, NULL},
	 { "edns_data_opt_list_inplace_cb_out_get", _wrap_edns_data_opt_list_inplace_cb_out_get, METH_O, NULL},
	 { "edns_data_padding_block_size_set", _wrap_edns_data_padding_block_size_set, METH_VARARGS, NULL},
	 { "edns_data_padding_block_size_get", _wrap_edns_data_padding_block_size_get, METH_O, NULL},
	 { "new_edns_data", _wrap_new_edns_data, METH_NOARGS, NULL},
	 { "delete_edns_data", _wrap_delete_edns_data, METH_O, NULL},
	 { "edns_data_swigregister", edns_data_swigregister, METH_O, NULL},
	 { "edns_data_swiginit", edns_data_swiginit, METH_VARARGS, NULL},
	 { "_edns_data_opt_list_get", _wrap__edns_data_opt_list_get, METH_O, NULL},
	 { "module_env_cfg_set", _wrap_module_env_cfg_set, METH_VARARGS, NULL},
	 { "module_env_cfg_get", _wrap_module_env_cfg_get, METH_O, NULL},
	 { "module_env_msg_cache_set", _wrap_module_env_msg_cache_set, METH_VARARGS, NULL},
	 { "module_env_msg_cache_get", _wrap_module_env_msg_cache_get, METH_O, NULL},
	 { "module_env_rrset_cache_set", _wrap_module_env_rrset_cache_set, METH_VARARGS, NULL},
	 { "module_env_rrset_cache_get", _wrap_module_env_rrset_cache_get, METH_O, NULL},
	 { "module_env_infra_cache_set", _wrap_module_env_infra_cache_set, METH_VARARGS, NULL},
	 { "module_env_infra_cache_get", _wrap_module_env_infra_cache_get, METH_O, NULL},
	 { "module_env_key_cache_set", _wrap_module_env_key_cache_set, METH_VARARGS, NULL},
	 { "module_env_key_cache_get", _wrap_module_env_key_cache_get, METH_O, NULL},
	 { "module_env_send_query_set", _wrap_module_env_send_query_set, METH_VARARGS, NULL},
	 { "module_env_send_query_get", _wrap_module_env_send_query_get, METH_O, NULL},
	 { "module_env_detach_subs_set", _wrap_module_env_detach_subs_set, METH_VARARGS, NULL},
	 { "module_env_detach_subs_get", _wrap_module_env_detach_subs_get, METH_O, NULL},
	 { "module_env_attach_sub_set", _wrap_module_env_attach_sub_set, METH_VARARGS, NULL},
	 { "module_env_attach_sub_get", _wrap_module_env_attach_sub_get, METH_O, NULL},
	 { "module_env_kill_sub_set", _wrap_module_env_kill_sub_set, METH_VARARGS, NULL},
	 { "module_env_kill_sub_get", _wrap_module_env_kill_sub_get, METH_O, NULL},
	 { "module_env_detect_cycle_set", _wrap_module_env_detect_cycle_set, METH_VARARGS, NULL},
	 { "module_env_detect_cycle_get", _wrap_module_env_detect_cycle_get, METH_O, NULL},
	 { "module_env_scratch_set", _wrap_module_env_scratch_set, METH_VARARGS, NULL},
	 { "module_env_scratch_get", _wrap_module_env_scratch_get, METH_O, NULL},
	 { "module_env_scratch_buffer_set", _wrap_module_env_scratch_buffer_set, METH_VARARGS, NULL},
	 { "module_env_scratch_buffer_get", _wrap_module_env_scratch_buffer_get, METH_O, NULL},
	 { "module_env_worker_set", _wrap_module_env_worker_set, METH_VARARGS, NULL},
	 { "module_env_worker_get", _wrap_module_env_worker_get, METH_O, NULL},
	 { "module_env_mesh_set", _wrap_module_env_mesh_set, METH_VARARGS, NULL},
	 { "module_env_mesh_get", _wrap_module_env_mesh_get, METH_O, NULL},
	 { "module_env_alloc_set", _wrap_module_env_alloc_set, METH_VARARGS, NULL},
	 { "module_env_alloc_get", _wrap_module_env_alloc_get, METH_O, NULL},
	 { "module_env_rnd_set", _wrap_module_env_rnd_set, METH_VARARGS, NULL},
	 { "module_env_rnd_get", _wrap_module_env_rnd_get, METH_O, NULL},
	 { "module_env__now_set", _wrap_module_env__now_set, METH_VARARGS, NULL},
	 { "module_env__now_get", _wrap_module_env__now_get, METH_O, NULL},
	 { "module_env__now_tv_set", _wrap_module_env__now_tv_set, METH_VARARGS, NULL},
	 { "module_env__now_tv_get", _wrap_module_env__now_tv_get, METH_O, NULL},
	 { "module_env_need_to_validate_set", _wrap_module_env_need_to_validate_set, METH_VARARGS, NULL},
	 { "module_env_need_to_validate_get", _wrap_module_env_need_to_validate_get, METH_O, NULL},
	 { "module_env_anchors_set", _wrap_module_env_anchors_set, METH_VARARGS, NULL},
	 { "module_env_anchors_get", _wrap_module_env_anchors_get, METH_O, NULL},
	 { "module_env_neg_cache_set", _wrap_module_env_neg_cache_set, METH_VARARGS, NULL},
	 { "module_env_neg_cache_get", _wrap_module_env_neg_cache_get, METH_O, NULL},
	 { "module_env_probe_timer_set", _wrap_module_env_probe_timer_set, METH_VARARGS, NULL},
	 { "module_env_probe_timer_get", _wrap_module_env_probe_timer_get, METH_O, NULL},
	 { "module_env_fwds_set", _wrap_module_env_fwds_set, METH_VARARGS, NULL},
	 { "module_env_fwds_get", _wrap_module_env_fwds_get, METH_O, NULL},
	 { "module_env_hints_set", _wrap_module_env_hints_set, METH_VARARGS, NULL},
	 { "module_env_hints_get", _wrap_module_env_hints_get, METH_O, NULL},
	 { "module_env_modinfo_set", _wrap_module_env_modinfo_set, METH_VARARGS, NULL},
	 { "module_env_modinfo_get", _wrap_module_env_modinfo_get, METH_O, NULL},
	 { "module_env_inplace_cb_lists_set", _wrap_module_env_inplace_cb_lists_set, METH_VARARGS, NULL},
	 { "module_env_inplace_cb_lists_get", _wrap_module_env_inplace_cb_lists_get, METH_O, NULL},
	 { "module_env_edns_known_options_set", _wrap_module_env_edns_known_options_set, METH_VARARGS, NULL},
	 { "module_env_edns_known_options_get", _wrap_module_env_edns_known_options_get, METH_O, NULL},
	 { "module_env_edns_known_options_num_set", _wrap_module_env_edns_known_options_num_set, METH_VARARGS, NULL},
	 { "module_env_edns_known_options_num_get", _wrap_module_env_edns_known_options_num_get, METH_O, NULL},
	 { "new_module_env", _wrap_new_module_env, METH_NOARGS, NULL},
	 { "delete_module_env", _wrap_delete_module_env, METH_O, NULL},
	 { "module_env_swigregister", module_env_swigregister, METH_O, NULL},
	 { "module_env_swiginit", module_env_swiginit, METH_VARARGS, NULL},
	 { "_module_env_now_get", _wrap__module_env_now_get, METH_O, NULL},
	 { "module_qstate_qinfo_set", _wrap_module_qstate_qinfo_set, METH_VARARGS, NULL},
	 { "module_qstate_qinfo_get", _wrap_module_qstate_qinfo_get, METH_O, NULL},
	 { "module_qstate_query_flags_set", _wrap_module_qstate_query_flags_set, METH_VARARGS, NULL},
	 { "module_qstate_query_flags_get", _wrap_module_qstate_query_flags_get, METH_O, NULL},
	 { "module_qstate_is_priming_set", _wrap_module_qstate_is_priming_set, METH_VARARGS, NULL},
	 { "module_qstate_is_priming_get", _wrap_module_qstate_is_priming_get, METH_O, NULL},
	 { "module_qstate_is_valrec_set", _wrap_module_qstate_is_valrec_set, METH_VARARGS, NULL},
	 { "module_qstate_is_valrec_get", _wrap_module_qstate_is_valrec_get, METH_O, NULL},
	 { "module_qstate_reply_set", _wrap_module_qstate_reply_set, METH_VARARGS, NULL},
	 { "module_qstate_reply_get", _wrap_module_qstate_reply_get, METH_O, NULL},
	 { "module_qstate_return_msg_set", _wrap_module_qstate_return_msg_set, METH_VARARGS, NULL},
	 { "module_qstate_return_msg_get", _wrap_module_qstate_return_msg_get, METH_O, NULL},
	 { "module_qstate_return_rcode_set", _wrap_module_qstate_return_rcode_set, METH_VARARGS, NULL},
	 { "module_qstate_return_rcode_get", _wrap_module_qstate_return_rcode_get, METH_O, NULL},
	 { "module_qstate_region_set", _wrap_module_qstate_region_set, METH_VARARGS, NULL},
	 { "module_qstate_region_get", _wrap_module_qstate_region_get, METH_O, NULL},
	 { "module_qstate_curmod_set", _wrap_module_qstate_curmod_set, METH_VARARGS, NULL},
	 { "module_qstate_curmod_get", _wrap_module_qstate_curmod_get, METH_O, NULL},
	 { "module_qstate_prefetch_leeway_set", _wrap_module_qstate_prefetch_leeway_set, METH_VARARGS, NULL},
	 { "module_qstate_prefetch_leeway_get", _wrap_module_qstate_prefetch_leeway_get, METH_O, NULL},
	 { "module_qstate_env_set", _wrap_module_qstate_env_set, METH_VARARGS, NULL},
	 { "module_qstate_env_get", _wrap_module_qstate_env_get, METH_O, NULL},
	 { "module_qstate_mesh_info_set", _wrap_module_qstate_mesh_info_set, METH_VARARGS, NULL},
	 { "module_qstate_mesh_info_get", _wrap_module_qstate_mesh_info_get, METH_O, NULL},
	 { "module_qstate_no_cache_lookup_set", _wrap_module_qstate_no_cache_lookup_set, METH_VARARGS, NULL},
	 { "module_qstate_no_cache_lookup_get", _wrap_module_qstate_no_cache_lookup_get, METH_O, NULL},
	 { "module_qstate_no_cache_store_set", _wrap_module_qstate_no_cache_store_set, METH_VARARGS, NULL},
	 { "module_qstate_no_cache_store_get", _wrap_module_qstate_no_cache_store_get, METH_O, NULL},
	 { "new_module_qstate", _wrap_new_module_qstate, METH_NOARGS, NULL},
	 { "delete_module_qstate", _wrap_delete_module_qstate, METH_O, NULL},
	 { "module_qstate_swigregister", module_qstate_swigregister, METH_O, NULL},
	 { "module_qstate_swiginit", module_qstate_swiginit, METH_VARARGS, NULL},
	 { "_ext_state_get", _wrap__ext_state_get, METH_VARARGS, NULL},
	 { "_ext_state_set", _wrap__ext_state_set, METH_VARARGS, NULL},
	 { "edns_opt_list_is_empty", _wrap_edns_opt_list_is_empty, METH_O, NULL},
	 { "_dereference_edns_option", _wrap__dereference_edns_option, METH_O, NULL},
	 { "_p_p_edns_option_get_next", _wrap__p_p_edns_option_get_next, METH_O, NULL},
	 { "_edns_opts_front_in_get", _wrap__edns_opts_front_in_get, METH_O, NULL},
	 { "_edns_opts_back_out_get", _wrap__edns_opts_back_out_get, METH_O, NULL},
	 { "_edns_opts_back_in_get", _wrap__edns_opts_back_in_get, METH_O, NULL},
	 { "_edns_opts_front_out_get", _wrap__edns_opts_front_out_get, METH_O, NULL},
	 { "config_strlist_next_set", _wrap_config_strlist_next_set, METH_VARARGS, NULL},
	 { "config_strlist_next_get", _wrap_config_strlist_next_get, METH_O, NULL},
	 { "config_strlist_str_set", _wrap_config_strlist_str_set, METH_VARARGS, NULL},
	 { "config_strlist_str_get", _wrap_config_strlist_str_get, METH_O, NULL},
	 { "new_config_strlist", _wrap_new_config_strlist, METH_NOARGS, NULL},
	 { "delete_config_strlist", _wrap_delete_config_strlist, METH_O, NULL},
	 { "config_strlist_swigregister", config_strlist_swigregister, METH_O, NULL},
	 { "config_strlist_swiginit", config_strlist_swiginit, METH_VARARGS, NULL},
	 { "config_str2list_next_set", _wrap_config_str2list_next_set, METH_VARARGS, NULL},
	 { "config_str2list_next_get", _wrap_config_str2list_next_get, METH_O, NULL},
	 { "config_str2list_str_set", _wrap_config_str2list_str_set, METH_VARARGS, NULL},
	 { "config_str2list_str_get", _wrap_config_str2list_str_get, METH_O, NULL},
	 { "config_str2list_str2_set", _wrap_config_str2list_str2_set, METH_VARARGS, NULL},
	 { "config_str2list_str2_get", _wrap_config_str2list_str2_get, METH_O, NULL},
	 { "new_config_str2list", _wrap_new_config_str2list, METH_NOARGS, NULL},
	 { "delete_config_str2list", _wrap_delete_config_str2list, METH_O, NULL},
	 { "config_str2list_swigregister", config_str2list_swigregister, METH_O, NULL},
	 { "config_str2list_swiginit", config_str2list_swiginit, METH_VARARGS, NULL},
	 { "config_file_verbosity_set", _wrap_config_file_verbosity_set, METH_VARARGS, NULL},
	 { "config_file_verbosity_get", _wrap_config_file_verbosity_get, METH_O, NULL},
	 { "config_file_stat_interval_set", _wrap_config_file_stat_interval_set, METH_VARARGS, NULL},
	 { "config_file_stat_interval_get", _wrap_config_file_stat_interval_get, METH_O, NULL},
	 { "config_file_stat_cumulative_set", _wrap_config_file_stat_cumulative_set, METH_VARARGS, NULL},
	 { "config_file_stat_cumulative_get", _wrap_config_file_stat_cumulative_get, METH_O, NULL},
	 { "config_file_stat_extended_set", _wrap_config_file_stat_extended_set, METH_VARARGS, NULL},
	 { "config_file_stat_extended_get", _wrap_config_file_stat_extended_get, METH_O, NULL},
	 { "config_file_num_threads_set", _wrap_config_file_num_threads_set, METH_VARARGS, NULL},
	 { "config_file_num_threads_get", _wrap_config_file_num_threads_get, METH_O, NULL},
	 { "config_file_port_set", _wrap_config_file_port_set, METH_VARARGS, NULL},
	 { "config_file_port_get", _wrap_config_file_port_get, METH_O, NULL},
	 { "config_file_do_ip4_set", _wrap_config_file_do_ip4_set, METH_VARARGS, NULL},
	 { "config_file_do_ip4_get", _wrap_config_file_do_ip4_get, METH_O, NULL},
	 { "config_file_do_ip6_set", _wrap_config_file_do_ip6_set, METH_VARARGS, NULL},
	 { "config_file_do_ip6_get", _wrap_config_file_do_ip6_get, METH_O, NULL},
	 { "config_file_do_udp_set", _wrap_config_file_do_udp_set, METH_VARARGS, NULL},
	 { "config_file_do_udp_get", _wrap_config_file_do_udp_get, METH_O, NULL},
	 { "config_file_do_tcp_set", _wrap_config_file_do_tcp_set, METH_VARARGS, NULL},
	 { "config_file_do_tcp_get", _wrap_config_file_do_tcp_get, METH_O, NULL},
	 { "config_file_outgoing_num_ports_set", _wrap_config_file_outgoing_num_ports_set, METH_VARARGS, NULL},
	 { "config_file_outgoing_num_ports_get", _wrap_config_file_outgoing_num_ports_get, METH_O, NULL},
	 { "config_file_outgoing_num_tcp_set", _wrap_config_file_outgoing_num_tcp_set, METH_VARARGS, NULL},
	 { "config_file_outgoing_num_tcp_get", _wrap_config_file_outgoing_num_tcp_get, METH_O, NULL},
	 { "config_file_incoming_num_tcp_set", _wrap_config_file_incoming_num_tcp_set, METH_VARARGS, NULL},
	 { "config_file_incoming_num_tcp_get", _wrap_config_file_incoming_num_tcp_get, METH_O, NULL},
	 { "config_file_outgoing_avail_ports_set", _wrap_config_file_outgoing_avail_ports_set, METH_VARARGS, NULL},
	 { "config_file_outgoing_avail_ports_get", _wrap_config_file_outgoing_avail_ports_get, METH_O, NULL},
	 { "config_file_msg_buffer_size_set", _wrap_config_file_msg_buffer_size_set, METH_VARARGS, NULL},
	 { "config_file_msg_buffer_size_get", _wrap_config_file_msg_buffer_size_get, METH_O, NULL},
	 { "config_file_msg_cache_size_set", _wrap_config_file_msg_cache_size_set, METH_VARARGS, NULL},
	 { "config_file_msg_cache_size_get", _wrap_config_file_msg_cache_size_get, METH_O, NULL},
	 { "config_file_msg_cache_slabs_set", _wrap_config_file_msg_cache_slabs_set, METH_VARARGS, NULL},
	 { "config_file_msg_cache_slabs_get", _wrap_config_file_msg_cache_slabs_get, METH_O, NULL},
	 { "config_file_num_queries_per_thread_set", _wrap_config_file_num_queries_per_thread_set, METH_VARARGS, NULL},
	 { "config_file_num_queries_per_thread_get", _wrap_config_file_num_queries_per_thread_get, METH_O, NULL},
	 { "config_file_jostle_time_set", _wrap_config_file_jostle_time_set, METH_VARARGS, NULL},
	 { "config_file_jostle_time_get", _wrap_config_file_jostle_time_get, METH_O, NULL},
	 { "config_file_rrset_cache_size_set", _wrap_config_file_rrset_cache_size_set, METH_VARARGS, NULL},
	 { "config_file_rrset_cache_size_get", _wrap_config_file_rrset_cache_size_get, METH_O, NULL},
	 { "config_file_rrset_cache_slabs_set", _wrap_config_file_rrset_cache_slabs_set, METH_VARARGS, NULL},
	 { "config_file_rrset_cache_slabs_get", _wrap_config_file_rrset_cache_slabs_get, METH_O, NULL},
	 { "config_file_host_ttl_set", _wrap_config_file_host_ttl_set, METH_VARARGS, NULL},
	 { "config_file_host_ttl_get", _wrap_config_file_host_ttl_get, METH_O, NULL},
	 { "config_file_infra_cache_slabs_set", _wrap_config_file_infra_cache_slabs_set, METH_VARARGS, NULL},
	 { "config_file_infra_cache_slabs_get", _wrap_config_file_infra_cache_slabs_get, METH_O, NULL},
	 { "config_file_infra_cache_numhosts_set", _wrap_config_file_infra_cache_numhosts_set, METH_VARARGS, NULL},
	 { "config_file_infra_cache_numhosts_get", _wrap_config_file_infra_cache_numhosts_get, METH_O, NULL},
	 { "config_file_target_fetch_policy_set", _wrap_config_file_target_fetch_policy_set, METH_VARARGS, NULL},
	 { "config_file_target_fetch_policy_get", _wrap_config_file_target_fetch_policy_get, METH_O, NULL},
	 { "config_file_if_automatic_set", _wrap_config_file_if_automatic_set, METH_VARARGS, NULL},
	 { "config_file_if_automatic_get", _wrap_config_file_if_automatic_get, METH_O, NULL},
	 { "config_file_num_ifs_set", _wrap_config_file_num_ifs_set, METH_VARARGS, NULL},
	 { "config_file_num_ifs_get", _wrap_config_file_num_ifs_get, METH_O, NULL},
	 { "config_file_num_out_ifs_set", _wrap_config_file_num_out_ifs_set, METH_VARARGS, NULL},
	 { "config_file_num_out_ifs_get", _wrap_config_file_num_out_ifs_get, METH_O, NULL},
	 { "config_file_root_hints_set", _wrap_config_file_root_hints_set, METH_VARARGS, NULL},
	 { "config_file_root_hints_get", _wrap_config_file_root_hints_get, METH_O, NULL},
	 { "config_file_stubs_set", _wrap_config_file_stubs_set, METH_VARARGS, NULL},
	 { "config_file_stubs_get", _wrap_config_file_stubs_get, METH_O, NULL},
	 { "config_file_forwards_set", _wrap_config_file_forwards_set, METH_VARARGS, NULL},
	 { "config_file_forwards_get", _wrap_config_file_forwards_get, METH_O, NULL},
	 { "config_file_donotqueryaddrs_set", _wrap_config_file_donotqueryaddrs_set, METH_VARARGS, NULL},
	 { "config_file_donotqueryaddrs_get", _wrap_config_file_donotqueryaddrs_get, METH_O, NULL},
	 { "config_file_acls_set", _wrap_config_file_acls_set, METH_VARARGS, NULL},
	 { "config_file_acls_get", _wrap_config_file_acls_get, METH_O, NULL},
	 { "config_file_donotquery_localhost_set", _wrap_config_file_donotquery_localhost_set, METH_VARARGS, NULL},
	 { "config_file_donotquery_localhost_get", _wrap_config_file_donotquery_localhost_get, METH_O, NULL},
	 { "config_file_harden_short_bufsize_set", _wrap_config_file_harden_short_bufsize_set, METH_VARARGS, NULL},
	 { "config_file_harden_short_bufsize_get", _wrap_config_file_harden_short_bufsize_get, METH_O, NULL},
	 { "config_file_harden_large_queries_set", _wrap_config_file_harden_large_queries_set, METH_VARARGS, NULL},
	 { "config_file_harden_large_queries_get", _wrap_config_file_harden_large_queries_get, METH_O, NULL},
	 { "config_file_harden_glue_set", _wrap_config_file_harden_glue_set, METH_VARARGS, NULL},
	 { "config_file_harden_glue_get", _wrap_config_file_harden_glue_get, METH_O, NULL},
	 { "config_file_harden_dnssec_stripped_set", _wrap_config_file_harden_dnssec_stripped_set, METH_VARARGS, NULL},
	 { "config_file_harden_dnssec_stripped_get", _wrap_config_file_harden_dnssec_stripped_get, METH_O, NULL},
	 { "config_file_harden_referral_path_set", _wrap_config_file_harden_referral_path_set, METH_VARARGS, NULL},
	 { "config_file_harden_referral_path_get", _wrap_config_file_harden_referral_path_get, METH_O, NULL},
	 { "config_file_use_caps_bits_for_id_set", _wrap_config_file_use_caps_bits_for_id_set, METH_VARARGS, NULL},
	 { "config_file_use_caps_bits_for_id_get", _wrap_config_file_use_caps_bits_for_id_get, METH_O, NULL},
	 { "config_file_private_address_set", _wrap_config_file_private_address_set, METH_VARARGS, NULL},
	 { "config_file_private_address_get", _wrap_config_file_private_address_get, METH_O, NULL},
	 { "config_file_private_domain_set", _wrap_config_file_private_domain_set, METH_VARARGS, NULL},
	 { "config_file_private_domain_get", _wrap_config_file_private_domain_get, METH_O, NULL},
	 { "config_file_unwanted_threshold_set", _wrap_config_file_unwanted_threshold_set, METH_VARARGS, NULL},
	 { "config_file_unwanted_threshold_get", _wrap_config_file_unwanted_threshold_get, METH_O, NULL},
	 { "config_file_chrootdir_set", _wrap_config_file_chrootdir_set, METH_VARARGS, NULL},
	 { "config_file_chrootdir_get", _wrap_config_file_chrootdir_get, METH_O, NULL},
	 { "config_file_username_set", _wrap_config_file_username_set, METH_VARARGS, NULL},
	 { "config_file_username_get", _wrap_config_file_username_get, METH_O, NULL},
	 { "config_file_directory_set", _wrap_config_file_directory_set, METH_VARARGS, NULL},
	 { "config_file_directory_get", _wrap_config_file_directory_get, METH_O, NULL},
	 { "config_file_logfile_set", _wrap_config_file_logfile_set, METH_VARARGS, NULL},
	 { "config_file_logfile_get", _wrap_config_file_logfile_get, METH_O, NULL},
	 { "config_file_pidfile_set", _wrap_config_file_pidfile_set, METH_VARARGS, NULL},
	 { "config_file_pidfile_get", _wrap_config_file_pidfile_get, METH_O, NULL},
	 { "config_file_use_syslog_set", _wrap_config_file_use_syslog_set, METH_VARARGS, NULL},
	 { "config_file_use_syslog_get", _wrap_config_file_use_syslog_get, METH_O, NULL},
	 { "config_file_hide_identity_set", _wrap_config_file_hide_identity_set, METH_VARARGS, NULL},
	 { "config_file_hide_identity_get", _wrap_config_file_hide_identity_get, METH_O, NULL},
	 { "config_file_hide_version_set", _wrap_config_file_hide_version_set, METH_VARARGS, NULL},
	 { "config_file_hide_version_get", _wrap_config_file_hide_version_get, METH_O, NULL},
	 { "config_file_identity_set", _wrap_config_file_identity_set, METH_VARARGS, NULL},
	 { "config_file_identity_get", _wrap_config_file_identity_get, METH_O, NULL},
	 { "config_file_version_set", _wrap_config_file_version_set, METH_VARARGS, NULL},
	 { "config_file_version_get", _wrap_config_file_version_get, METH_O, NULL},
	 { "config_file_module_conf_set", _wrap_config_file_module_conf_set, METH_VARARGS, NULL},
	 { "config_file_module_conf_get", _wrap_config_file_module_conf_get, METH_O, NULL},
	 { "config_file_trust_anchor_file_list_set", _wrap_config_file_trust_anchor_file_list_set, METH_VARARGS, NULL},
	 { "config_file_trust_anchor_file_list_get", _wrap_config_file_trust_anchor_file_list_get, METH_O, NULL},
	 { "config_file_trust_anchor_list_set", _wrap_config_file_trust_anchor_list_set, METH_VARARGS, NULL},
	 { "config_file_trust_anchor_list_get", _wrap_config_file_trust_anchor_list_get, METH_O, NULL},
	 { "config_file_trusted_keys_file_list_set", _wrap_config_file_trusted_keys_file_list_set, METH_VARARGS, NULL},
	 { "config_file_trusted_keys_file_list_get", _wrap_config_file_trusted_keys_file_list_get, METH_O, NULL},
	 { "config_file_max_ttl_set", _wrap_config_file_max_ttl_set, METH_VARARGS, NULL},
	 { "config_file_max_ttl_get", _wrap_config_file_max_ttl_get, METH_O, NULL},
	 { "config_file_val_date_override_set", _wrap_config_file_val_date_override_set, METH_VARARGS, NULL},
	 { "config_file_val_date_override_get", _wrap_config_file_val_date_override_get, METH_O, NULL},
	 { "config_file_bogus_ttl_set", _wrap_config_file_bogus_ttl_set, METH_VARARGS, NULL},
	 { "config_file_bogus_ttl_get", _wrap_config_file_bogus_ttl_get, METH_O, NULL},
	 { "config_file_val_clean_additional_set", _wrap_config_file_val_clean_additional_set, METH_VARARGS, NULL},
	 { "config_file_val_clean_additional_get", _wrap_config_file_val_clean_additional_get, METH_O, NULL},
	 { "config_file_val_permissive_mode_set", _wrap_config_file_val_permissive_mode_set, METH_VARARGS, NULL},
	 { "config_file_val_permissive_mode_get", _wrap_config_file_val_permissive_mode_get, METH_O, NULL},
	 { "config_file_val_nsec3_key_iterations_set", _wrap_config_file_val_nsec3_key_iterations_set, METH_VARARGS, NULL},
	 { "config_file_val_nsec3_key_iterations_get", _wrap_config_file_val_nsec3_key_iterations_get, METH_O, NULL},
	 { "config_file_key_cache_size_set", _wrap_config_file_key_cache_size_set, METH_VARARGS, NULL},
	 { "config_file_key_cache_size_get", _wrap_config_file_key_cache_size_get, METH_O, NULL},
	 { "config_file_key_cache_slabs_set", _wrap_config_file_key_cache_slabs_set, METH_VARARGS, NULL},
	 { "config_file_key_cache_slabs_get", _wrap_config_file_key_cache_slabs_get, METH_O, NULL},
	 { "config_file_neg_cache_size_set", _wrap_config_file_neg_cache_size_set, METH_VARARGS, NULL},
	 { "config_file_neg_cache_size_get", _wrap_config_file_neg_cache_size_get, METH_O, NULL},
	 { "config_file_local_zones_set", _wrap_config_file_local_zones_set, METH_VARARGS, NULL},
	 { "config_file_local_zones_get", _wrap_config_file_local_zones_get, METH_O, NULL},
	 { "config_file_local_zones_nodefault_set", _wrap_config_file_local_zones_nodefault_set, METH_VARARGS, NULL},
	 { "config_file_local_zones_nodefault_get", _wrap_config_file_local_zones_nodefault_get, METH_O, NULL},
	 { "config_file_local_data_set", _wrap_config_file_local_data_set, METH_VARARGS, NULL},
	 { "config_file_local_data_get", _wrap_config_file_local_data_get, METH_O, NULL},
	 { "config_file_remote_control_enable_set", _wrap_config_file_remote_control_enable_set, METH_VARARGS, NULL},
	 { "config_file_remote_control_enable_get", _wrap_config_file_remote_control_enable_get, METH_O, NULL},
	 { "config_file_control_ifs_set", _wrap_config_file_control_ifs_set, METH_VARARGS, NULL},
	 { "config_file_control_ifs_get", _wrap_config_file_control_ifs_get, METH_O, NULL},
	 { "config_file_control_port_set", _wrap_config_file_control_port_set, METH_VARARGS, NULL},
	 { "config_file_control_port_get", _wrap_config_file_control_port_get, METH_O, NULL},
	 { "config_file_server_key_file_set", _wrap_config_file_server_key_file_set, METH_VARARGS, NULL},
	 { "config_file_server_key_file_get", _wrap_config_file_server_key_file_get, METH_O, NULL},
	 { "config_file_server_cert_file_set", _wrap_config_file_server_cert_file_set, METH_VARARGS, NULL},
	 { "config_file_server_cert_file_get", _wrap_config_file_server_cert_file_get, METH_O, NULL},
	 { "config_file_control_key_file_set", _wrap_config_file_control_key_file_set, METH_VARARGS, NULL},
	 { "config_file_control_key_file_get", _wrap_config_file_control_key_file_get, METH_O, NULL},
	 { "config_file_control_cert_file_set", _wrap_config_file_control_cert_file_set, METH_VARARGS, NULL},
	 { "config_file_control_cert_file_get", _wrap_config_file_control_cert_file_get, METH_O, NULL},
	 { "config_file_do_daemonize_set", _wrap_config_file_do_daemonize_set, METH_VARARGS, NULL},
	 { "config_file_do_daemonize_get", _wrap_config_file_do_daemonize_get, METH_O, NULL},
	 { "new_config_file", _wrap_new_config_file, METH_NOARGS, NULL},
	 { "delete_config_file", _wrap_delete_config_file, METH_O, NULL},
	 { "config_file_swigregister", config_file_swigregister, METH_O, NULL},
	 { "config_file_swiginit", config_file_swiginit, METH_VARARGS, NULL},
	 { "_get_ifs_tuple", _wrap__get_ifs_tuple, METH_O, NULL},
	 { "_get_ifs_out_tuple", _wrap__get_ifs_out_tuple, METH_O, NULL},
	 { "delegpt_ns_next_set", _wrap_delegpt_ns_next_set, METH_VARARGS, NULL},
	 { "delegpt_ns_next_get", _wrap_delegpt_ns_next_get, METH_O, NULL},
	 { "delegpt_ns_resolved_set", _wrap_delegpt_ns_resolved_set, METH_VARARGS, NULL},
	 { "delegpt_ns_resolved_get", _wrap_delegpt_ns_resolved_get, METH_O, NULL},
	 { "delegpt_ns_got4_set", _wrap_delegpt_ns_got4_set, METH_VARARGS, NULL},
	 { "delegpt_ns_got4_get", _wrap_delegpt_ns_got4_get, METH_O, NULL},
	 { "delegpt_ns_got6_set", _wrap_delegpt_ns_got6_set, METH_VARARGS, NULL},
	 { "delegpt_ns_got6_get", _wrap_delegpt_ns_got6_get, METH_O, NULL},
	 { "delegpt_ns_lame_set", _wrap_delegpt_ns_lame_set, METH_VARARGS, NULL},
	 { "delegpt_ns_lame_get", _wrap_delegpt_ns_lame_get, METH_O, NULL},
	 { "delegpt_ns_done_pside4_set", _wrap_delegpt_ns_done_pside4_set, METH_VARARGS, NULL},
	 { "delegpt_ns_done_pside4_get", _wrap_delegpt_ns_done_pside4_get, METH_O, NULL},
	 { "delegpt_ns_done_pside6_set", _wrap_delegpt_ns_done_pside6_set, METH_VARARGS, NULL},
	 { "delegpt_ns_done_pside6_get", _wrap_delegpt_ns_done_pside6_get, METH_O, NULL},
	 { "new_delegpt_ns", _wrap_new_delegpt_ns, METH_NOARGS, NULL},
	 { "delete_delegpt_ns", _wrap_delete_delegpt_ns, METH_O, NULL},
	 { "delegpt_ns_swigregister", delegpt_ns_swigregister, METH_O, NULL},
	 { "delegpt_ns_swiginit", delegpt_ns_swiginit, METH_VARARGS, NULL},
	 { "delegpt_addr_next_result_set", _wrap_delegpt_addr_next_result_set, METH_VARARGS, NULL},
	 { "delegpt_addr_next_result_get", _wrap_delegpt_addr_next_result_get, METH_O, NULL},
	 { "delegpt_addr_next_usable_set", _wrap_delegpt_addr_next_usable_set, METH_VARARGS, NULL},
	 { "delegpt_addr_next_usable_get", _wrap_delegpt_addr_next_usable_get, METH_O, NULL},
	 { "delegpt_addr_next_target_set", _wrap_delegpt_addr_next_target_set, METH_VARARGS, NULL},
	 { "delegpt_addr_next_target_get", _wrap_delegpt_addr_next_target_get, METH_O, NULL},
	 { "delegpt_addr_attempts_set", _wrap_delegpt_addr_attempts_set, METH_VARARGS, NULL},
	 { "delegpt_addr_attempts_get", _wrap_delegpt_addr_attempts_get, METH_O, NULL},
	 { "delegpt_addr_sel_rtt_set", _wrap_delegpt_addr_sel_rtt_set, METH_VARARGS, NULL},
	 { "delegpt_addr_sel_rtt_get", _wrap_delegpt_addr_sel_rtt_get, METH_O, NULL},
	 { "delegpt_addr_bogus_set", _wrap_delegpt_addr_bogus_set, METH_VARARGS, NULL},
	 { "delegpt_addr_bogus_get", _wrap_delegpt_addr_bogus_get, METH_O, NULL},
	 { "delegpt_addr_lame_set", _wrap_delegpt_addr_lame_set, METH_VARARGS, NULL},
	 { "delegpt_addr_lame_get", _wrap_delegpt_addr_lame_get, METH_O, NULL},
	 { "new_delegpt_addr", _wrap_new_delegpt_addr, METH_NOARGS, NULL},
	 { "delete_delegpt_addr", _wrap_delete_delegpt_addr, METH_O, NULL},
	 { "delegpt_addr_swigregister", delegpt_addr_swigregister, METH_O, NULL},
	 { "delegpt_addr_swiginit", delegpt_addr_swiginit, METH_VARARGS, NULL},
	 { "delegpt_namelabs_set", _wrap_delegpt_namelabs_set, METH_VARARGS, NULL},
	 { "delegpt_namelabs_get", _wrap_delegpt_namelabs_get, METH_O, NULL},
	 { "delegpt_nslist_set", _wrap_delegpt_nslist_set, METH_VARARGS, NULL},
	 { "delegpt_nslist_get", _wrap_delegpt_nslist_get, METH_O, NULL},
	 { "delegpt_target_list_set", _wrap_delegpt_target_list_set, METH_VARARGS, NULL},
	 { "delegpt_target_list_get", _wrap_delegpt_target_list_get, METH_O, NULL},
	 { "delegpt_usable_list_set", _wrap_delegpt_usable_list_set, METH_VARARGS, NULL},
	 { "delegpt_usable_list_get", _wrap_delegpt_usable_list_get, METH_O, NULL},
	 { "delegpt_result_list_set", _wrap_delegpt_result_list_set, METH_VARARGS, NULL},
	 { "delegpt_result_list_get", _wrap_delegpt_result_list_get, METH_O, NULL},
	 { "delegpt_bogus_set", _wrap_delegpt_bogus_set, METH_VARARGS, NULL},
	 { "delegpt_bogus_get", _wrap_delegpt_bogus_get, METH_O, NULL},
	 { "delegpt_has_parent_side_NS_set", _wrap_delegpt_has_parent_side_NS_set, METH_VARARGS, NULL},
	 { "delegpt_has_parent_side_NS_get", _wrap_delegpt_has_parent_side_NS_get, METH_O, NULL},
	 { "delegpt_dp_type_mlc_set", _wrap_delegpt_dp_type_mlc_set, METH_VARARGS, NULL},
	 { "delegpt_dp_type_mlc_get", _wrap_delegpt_dp_type_mlc_get, METH_O, NULL},
	 { "new_delegpt", _wrap_new_delegpt, METH_NOARGS, NULL},
	 { "delete_delegpt", _wrap_delete_delegpt, METH_O, NULL},
	 { "delegpt_swigregister", delegpt_swigregister, METH_O, NULL},
	 { "delegpt_swiginit", delegpt_swiginit, METH_VARARGS, NULL},
	 { "_get_dp_dname", _wrap__get_dp_dname, METH_O, NULL},
	 { "_get_dp_dname_components", _wrap__get_dp_dname_components, METH_O, NULL},
	 { "_get_dpns_dname", _wrap__get_dpns_dname, METH_O, NULL},
	 { "_get_dpns_dname_components", _wrap__get_dpns_dname_components, METH_O, NULL},
	 { "_delegpt_addr_addr_get", _wrap__delegpt_addr_addr_get, METH_O, NULL},
	 { "set_return_msg", _wrap_set_return_msg, METH_VARARGS, NULL},
	 { "dns_cache_find_delegation", _wrap_dns_cache_find_delegation, METH_VARARGS, NULL},
	 { "iter_dp_is_useless", _wrap_iter_dp_is_useless, METH_VARARGS, NULL},
	 { "hints_lookup_stub", _wrap_hints_lookup_stub, METH_VARARGS, NULL},
	 { "find_delegation", _wrap_find_delegation, METH_VARARGS, NULL},
	 { "unbound_verbose", _wrap_unbound_verbose, METH_VARARGS, NULL},
	 { "unbound_log_info", _wrap_unbound_log_info, METH_VARARGS, NULL},
	 { "unbound_log_err", _wrap_unbound_log_err, METH_VARARGS, NULL},
	 { "unbound_log_warn", _wrap_unbound_log_warn, METH_VARARGS, NULL},
	 { "log_hex", _wrap_log_hex, METH_VARARGS, NULL},
	 { "log_dns_msg", _wrap_log_dns_msg, METH_VARARGS, NULL},
	 { "log_query_info", _wrap_log_query_info, METH_VARARGS, NULL},
	 { "regional_log_stats", _wrap_regional_log_stats, METH_O, NULL},
	 { "log_info", _wrap_log_info, METH_O, NULL},
	 { "log_err", _wrap_log_err, METH_O, NULL},
	 { "log_warn", _wrap_log_warn, METH_O, NULL},
	 { "verbose", _wrap_verbose, METH_VARARGS, NULL},
	 { "sldns_wire2str_type", _wrap_sldns_wire2str_type, METH_O, NULL},
	 { "sldns_wire2str_class", _wrap_sldns_wire2str_class, METH_O, NULL},
	 { "storeQueryInCache", _wrap_storeQueryInCache, METH_VARARGS, NULL},
	 { "invalidateQueryInCache", _wrap_invalidateQueryInCache, METH_VARARGS, NULL},
	 { "strextstate", _wrap_strextstate, METH_O, NULL},
	 { "strmodulevent", _wrap_strmodulevent, METH_O, NULL},
	 { "edns_opt_list_find", _wrap_edns_opt_list_find, METH_VARARGS, NULL},
	 { "edns_register_option", _wrap_edns_register_option, METH_VARARGS, NULL},
	 { "edns_opt_list_remove", _wrap_edns_opt_list_remove, METH_VARARGS, NULL},
	 { "edns_opt_list_append", _wrap_edns_opt_list_append, METH_VARARGS, NULL},
	 { "inplace_cb_register", _wrap_inplace_cb_register, METH_VARARGS, NULL},
	 { "register_inplace_cb_reply", _wrap_register_inplace_cb_reply, METH_VARARGS, NULL},
	 { "register_inplace_cb_reply_cache", _wrap_register_inplace_cb_reply_cache, METH_VARARGS, NULL},
	 { "register_inplace_cb_reply_local", _wrap_register_inplace_cb_reply_local, METH_VARARGS, NULL},
	 { "register_inplace_cb_reply_servfail", _wrap_register_inplace_cb_reply_servfail, METH_VARARGS, NULL},
	 { "register_inplace_cb_query", _wrap_register_inplace_cb_query, METH_VARARGS, NULL},
	 { "register_inplace_cb_query_response", _wrap_register_inplace_cb_query_response, METH_VARARGS, NULL},
	 { "register_inplace_cb_edns_back_parsed_call", _wrap_register_inplace_cb_edns_back_parsed_call, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static swig_type_info _swigt__p_alloc_cache = {"_p_alloc_cache", "struct alloc_cache *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_comm_reply = {"_p_comm_reply", "struct comm_reply *|comm_reply *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_comm_timer = {"_p_comm_timer", "struct comm_timer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_config_file = {"_p_config_file", "struct config_file *|config_file *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_config_str2list = {"_p_config_str2list", "struct config_str2list *|config_str2list *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_config_strlist = {"_p_config_strlist", "struct config_strlist *|config_strlist *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_config_strlist_head = {"_p_config_strlist_head", "struct config_strlist_head *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_config_stub = {"_p_config_stub", "struct config_stub *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_delegpt = {"_p_delegpt", "struct delegpt *|delegpt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_delegpt_addr = {"_p_delegpt_addr", "struct delegpt_addr *|delegpt_addr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_delegpt_ns = {"_p_delegpt_ns", "struct delegpt_ns *|delegpt_ns *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dns_msg = {"_p_dns_msg", "struct dns_msg *|dns_msg *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_edns_data = {"_p_edns_data", "struct edns_data *|edns_data *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_edns_known_option = {"_p_edns_known_option", "struct edns_known_option *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_edns_option = {"_p_edns_option", "struct edns_option *|edns_option *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_struct_module_qstate__void = {"_p_f_p_struct_module_qstate__void", "void (*)(struct module_qstate *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int__int = {"_p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int__int", "int (*)(struct module_qstate *,struct query_info *,uint16_t,int,int)|int (*)(struct module_qstate *,struct query_info *,unsigned short,int,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int_p_p_struct_module_qstate__int = {"_p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int_p_p_struct_module_qstate__int", "int (*)(struct module_qstate *,struct query_info *,uint16_t,int,int,struct module_qstate **)|int (*)(struct module_qstate *,struct query_info *,unsigned short,int,int,struct module_qstate **)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_struct_query_info_unsigned_short_int_int_int_int_p_struct_sockaddr_storage_socklen_t_p_unsigned_char_size_t_int_int_p_char_p_struct_module_qstate_p_int__p_outbound_entry = {"_p_f_p_struct_query_info_unsigned_short_int_int_int_int_p_struct_sockaddr_storage_socklen_t_p_unsigned_char_size_t_int_int_p_char_p_struct_module_qstate_p_int__p_outbound_entry", "struct outbound_entry *(*)(struct query_info *,uint16_t,int,int,int,int,struct sockaddr_storage *,socklen_t,uint8_t *,size_t,int,int,char *,struct module_qstate *,int *)|struct outbound_entry *(*)(struct query_info *,unsigned short,int,int,int,int,struct sockaddr_storage *,socklen_t,unsigned char *,size_t,int,int,char *,struct module_qstate *,int *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_hashvalue_type = {"_p_hashvalue_type", "hashvalue_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_infra_cache = {"_p_infra_cache", "struct infra_cache *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int32_t *|int_fast16_t *|int_fast32_t *|int_least32_t *|intptr_t *|int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iter_forwards = {"_p_iter_forwards", "struct iter_forwards *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iter_hints = {"_p_iter_hints", "struct iter_hints *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iter_hints_stub = {"_p_iter_hints_stub", "struct iter_hints_stub *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_key_cache = {"_p_key_cache", "struct key_cache *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_lock_rw_type = {"_p_lock_rw_type", "lock_rw_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "int64_t *|int_fast64_t *|int_least64_t *|intmax_t *|rrset_id_type *|long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_lruhash_entry = {"_p_lruhash_entry", "struct lruhash_entry *|lruhash_entry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mesh_area = {"_p_mesh_area", "struct mesh_area *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mesh_reply = {"_p_mesh_reply", "struct mesh_reply *|mesh_reply *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mesh_state = {"_p_mesh_state", "struct mesh_state *|mesh_state *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_module_env = {"_p_module_env", "struct module_env *|module_env *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_module_qstate = {"_p_module_qstate", "struct module_qstate *|module_qstate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_dns_msg = {"_p_p_dns_msg", "struct dns_msg **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_edns_option = {"_p_p_edns_option", "struct edns_option **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_void = {"_p_p_void", "void **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_packed_rrset_data = {"_p_packed_rrset_data", "struct packed_rrset_data *|packed_rrset_data *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_packed_rrset_key = {"_p_packed_rrset_key", "struct packed_rrset_key *|packed_rrset_key *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_query_info = {"_p_query_info", "struct query_info *|query_info *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_regional = {"_p_regional", "struct regional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_reply_info = {"_p_reply_info", "struct reply_info *|reply_info *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_rrset_cache = {"_p_rrset_cache", "struct rrset_cache *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_rrset_ref = {"_p_rrset_ref", "struct rrset_ref *|rrset_ref *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "int16_t *|int_least16_t *|short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "int8_t *|int_fast8_t *|int_least8_t *|signed char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_slabhash = {"_p_slabhash", "struct slabhash *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sldns_buffer = {"_p_sldns_buffer", "struct sldns_buffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sockaddr_storage = {"_p_sockaddr_storage", "struct sockaddr_storage *|sockaddr_storage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_time_t = {"_p_time_t", "time_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_timeval = {"_p_timeval", "struct timeval *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ub_packed_rrset_key = {"_p_ub_packed_rrset_key", "struct ub_packed_rrset_key *|ub_packed_rrset_key *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ub_randstate = {"_p_ub_randstate", "struct ub_randstate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "uint8_t *|uint_fast8_t *|uint_least8_t *|unsigned char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "uint32_t *|uint_fast16_t *|uint_fast32_t *|uint_least32_t *|uintptr_t *|unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "uint64_t *|uint_fast64_t *|uint_least64_t *|uintmax_t *|unsigned long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "uint16_t *|uint_least16_t *|unsigned short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_val_anchors = {"_p_val_anchors", "struct val_anchors *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_val_neg_cache = {"_p_val_neg_cache", "struct val_neg_cache *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_worker = {"_p_worker", "struct worker *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_alloc_cache,
  &_swigt__p_char,
  &_swigt__p_comm_reply,
  &_swigt__p_comm_timer,
  &_swigt__p_config_file,
  &_swigt__p_config_str2list,
  &_swigt__p_config_strlist,
  &_swigt__p_config_strlist_head,
  &_swigt__p_config_stub,
  &_swigt__p_delegpt,
  &_swigt__p_delegpt_addr,
  &_swigt__p_delegpt_ns,
  &_swigt__p_dns_msg,
  &_swigt__p_edns_data,
  &_swigt__p_edns_known_option,
  &_swigt__p_edns_option,
  &_swigt__p_f_p_struct_module_qstate__void,
  &_swigt__p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int__int,
  &_swigt__p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int_p_p_struct_module_qstate__int,
  &_swigt__p_f_p_struct_query_info_unsigned_short_int_int_int_int_p_struct_sockaddr_storage_socklen_t_p_unsigned_char_size_t_int_int_p_char_p_struct_module_qstate_p_int__p_outbound_entry,
  &_swigt__p_hashvalue_type,
  &_swigt__p_infra_cache,
  &_swigt__p_int,
  &_swigt__p_iter_forwards,
  &_swigt__p_iter_hints,
  &_swigt__p_iter_hints_stub,
  &_swigt__p_key_cache,
  &_swigt__p_lock_rw_type,
  &_swigt__p_long_long,
  &_swigt__p_lruhash_entry,
  &_swigt__p_mesh_area,
  &_swigt__p_mesh_reply,
  &_swigt__p_mesh_state,
  &_swigt__p_module_env,
  &_swigt__p_module_qstate,
  &_swigt__p_p_char,
  &_swigt__p_p_dns_msg,
  &_swigt__p_p_edns_option,
  &_swigt__p_p_void,
  &_swigt__p_packed_rrset_data,
  &_swigt__p_packed_rrset_key,
  &_swigt__p_query_info,
  &_swigt__p_regional,
  &_swigt__p_reply_info,
  &_swigt__p_rrset_cache,
  &_swigt__p_rrset_ref,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_slabhash,
  &_swigt__p_sldns_buffer,
  &_swigt__p_sockaddr_storage,
  &_swigt__p_time_t,
  &_swigt__p_timeval,
  &_swigt__p_ub_packed_rrset_key,
  &_swigt__p_ub_randstate,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_val_anchors,
  &_swigt__p_val_neg_cache,
  &_swigt__p_void,
  &_swigt__p_worker,
};

static swig_cast_info _swigc__p_alloc_cache[] = {  {&_swigt__p_alloc_cache, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_comm_reply[] = {  {&_swigt__p_comm_reply, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_comm_timer[] = {  {&_swigt__p_comm_timer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_config_file[] = {  {&_swigt__p_config_file, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_config_str2list[] = {  {&_swigt__p_config_str2list, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_config_strlist[] = {  {&_swigt__p_config_strlist, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_config_strlist_head[] = {  {&_swigt__p_config_strlist_head, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_config_stub[] = {  {&_swigt__p_config_stub, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_delegpt[] = {  {&_swigt__p_delegpt, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_delegpt_addr[] = {  {&_swigt__p_delegpt_addr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_delegpt_ns[] = {  {&_swigt__p_delegpt_ns, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dns_msg[] = {  {&_swigt__p_dns_msg, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_edns_data[] = {  {&_swigt__p_edns_data, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_edns_known_option[] = {  {&_swigt__p_edns_known_option, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_edns_option[] = {  {&_swigt__p_edns_option, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_struct_module_qstate__void[] = {  {&_swigt__p_f_p_struct_module_qstate__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int__int[] = {  {&_swigt__p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int_p_p_struct_module_qstate__int[] = {  {&_swigt__p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int_p_p_struct_module_qstate__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_struct_query_info_unsigned_short_int_int_int_int_p_struct_sockaddr_storage_socklen_t_p_unsigned_char_size_t_int_int_p_char_p_struct_module_qstate_p_int__p_outbound_entry[] = {  {&_swigt__p_f_p_struct_query_info_unsigned_short_int_int_int_int_p_struct_sockaddr_storage_socklen_t_p_unsigned_char_size_t_int_int_p_char_p_struct_module_qstate_p_int__p_outbound_entry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_hashvalue_type[] = {  {&_swigt__p_hashvalue_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_infra_cache[] = {  {&_swigt__p_infra_cache, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iter_forwards[] = {  {&_swigt__p_iter_forwards, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iter_hints[] = {  {&_swigt__p_iter_hints, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iter_hints_stub[] = {  {&_swigt__p_iter_hints_stub, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_key_cache[] = {  {&_swigt__p_key_cache, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_lock_rw_type[] = {  {&_swigt__p_lock_rw_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_lruhash_entry[] = {  {&_swigt__p_lruhash_entry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mesh_area[] = {  {&_swigt__p_mesh_area, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mesh_reply[] = {  {&_swigt__p_mesh_reply, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mesh_state[] = {  {&_swigt__p_mesh_state, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_module_env[] = {  {&_swigt__p_module_env, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_module_qstate[] = {  {&_swigt__p_module_qstate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_dns_msg[] = {  {&_swigt__p_p_dns_msg, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_edns_option[] = {  {&_swigt__p_p_edns_option, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_void[] = {  {&_swigt__p_p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_packed_rrset_data[] = {  {&_swigt__p_packed_rrset_data, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_packed_rrset_key[] = {  {&_swigt__p_packed_rrset_key, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_query_info[] = {  {&_swigt__p_query_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_regional[] = {  {&_swigt__p_regional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_reply_info[] = {  {&_swigt__p_reply_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_rrset_cache[] = {  {&_swigt__p_rrset_cache, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_rrset_ref[] = {  {&_swigt__p_rrset_ref, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_slabhash[] = {  {&_swigt__p_slabhash, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sldns_buffer[] = {  {&_swigt__p_sldns_buffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sockaddr_storage[] = {  {&_swigt__p_sockaddr_storage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_time_t[] = {  {&_swigt__p_time_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_timeval[] = {  {&_swigt__p_timeval, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ub_packed_rrset_key[] = {  {&_swigt__p_ub_packed_rrset_key, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ub_randstate[] = {  {&_swigt__p_ub_randstate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_val_anchors[] = {  {&_swigt__p_val_anchors, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_val_neg_cache[] = {  {&_swigt__p_val_neg_cache, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_worker[] = {  {&_swigt__p_worker, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_alloc_cache,
  _swigc__p_char,
  _swigc__p_comm_reply,
  _swigc__p_comm_timer,
  _swigc__p_config_file,
  _swigc__p_config_str2list,
  _swigc__p_config_strlist,
  _swigc__p_config_strlist_head,
  _swigc__p_config_stub,
  _swigc__p_delegpt,
  _swigc__p_delegpt_addr,
  _swigc__p_delegpt_ns,
  _swigc__p_dns_msg,
  _swigc__p_edns_data,
  _swigc__p_edns_known_option,
  _swigc__p_edns_option,
  _swigc__p_f_p_struct_module_qstate__void,
  _swigc__p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int__int,
  _swigc__p_f_p_struct_module_qstate_p_struct_query_info_unsigned_short_int_int_p_p_struct_module_qstate__int,
  _swigc__p_f_p_struct_query_info_unsigned_short_int_int_int_int_p_struct_sockaddr_storage_socklen_t_p_unsigned_char_size_t_int_int_p_char_p_struct_module_qstate_p_int__p_outbound_entry,
  _swigc__p_hashvalue_type,
  _swigc__p_infra_cache,
  _swigc__p_int,
  _swigc__p_iter_forwards,
  _swigc__p_iter_hints,
  _swigc__p_iter_hints_stub,
  _swigc__p_key_cache,
  _swigc__p_lock_rw_type,
  _swigc__p_long_long,
  _swigc__p_lruhash_entry,
  _swigc__p_mesh_area,
  _swigc__p_mesh_reply,
  _swigc__p_mesh_state,
  _swigc__p_module_env,
  _swigc__p_module_qstate,
  _swigc__p_p_char,
  _swigc__p_p_dns_msg,
  _swigc__p_p_edns_option,
  _swigc__p_p_void,
  _swigc__p_packed_rrset_data,
  _swigc__p_packed_rrset_key,
  _swigc__p_query_info,
  _swigc__p_regional,
  _swigc__p_reply_info,
  _swigc__p_rrset_cache,
  _swigc__p_rrset_ref,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_slabhash,
  _swigc__p_sldns_buffer,
  _swigc__p_sockaddr_storage,
  _swigc__p_time_t,
  _swigc__p_timeval,
  _swigc__p_ub_packed_rrset_key,
  _swigc__p_ub_randstate,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_val_anchors,
  _swigc__p_val_neg_cache,
  _swigc__p_void,
  _swigc__p_worker,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif

#ifndef SWIG_INIT_CLIENT_DATA_TYPE
#define SWIG_INIT_CLIENT_DATA_TYPE void *
#endif

SWIGRUNTIME void
SWIG_InitializeModule(SWIG_INIT_CLIENT_DATA_TYPE clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------
   * Patch %callback methods' docstrings to hold the callback ptrs
   * -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods, const swig_const_info *const_table, swig_type_info **types, swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        const swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              memcpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              memcpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif




/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md, *globals;
  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    SwigPyObject_own,
    SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  PyTypeObject *swigpyobject;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* Metaclass is used to implement static member variables */
  metatype = SwigPyObjectType();
  assert(metatype);
#endif
  
  (void)globals;
  
  /* Create singletons now to avoid potential deadlocks with multi-threaded usage after module initialization */
  SWIG_This();
  SWIG_Python_TypeCache();
  SwigPyPacked_type();
#ifndef SWIGPYTHON_BUILTIN
  SwigPyObject_type();
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule(SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  swigpyobject = SwigPyObject_TypeOnce();
  
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = swigpyobject;
  } else if (swigpyobject->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  SWIG_Python_SetConstant(d, "RR_CLASS_IN",SWIG_From_int((int)(RR_CLASS_IN)));
  SWIG_Python_SetConstant(d, "RR_CLASS_CH",SWIG_From_int((int)(RR_CLASS_CH)));
  SWIG_Python_SetConstant(d, "RR_CLASS_HS",SWIG_From_int((int)(RR_CLASS_HS)));
  SWIG_Python_SetConstant(d, "RR_CLASS_NONE",SWIG_From_int((int)(RR_CLASS_NONE)));
  SWIG_Python_SetConstant(d, "RR_CLASS_ANY",SWIG_From_int((int)(RR_CLASS_ANY)));
  SWIG_Python_SetConstant(d, "RR_TYPE_A",SWIG_From_int((int)(RR_TYPE_A)));
  SWIG_Python_SetConstant(d, "RR_TYPE_NS",SWIG_From_int((int)(RR_TYPE_NS)));
  SWIG_Python_SetConstant(d, "RR_TYPE_MD",SWIG_From_int((int)(RR_TYPE_MD)));
  SWIG_Python_SetConstant(d, "RR_TYPE_MF",SWIG_From_int((int)(RR_TYPE_MF)));
  SWIG_Python_SetConstant(d, "RR_TYPE_CNAME",SWIG_From_int((int)(RR_TYPE_CNAME)));
  SWIG_Python_SetConstant(d, "RR_TYPE_SOA",SWIG_From_int((int)(RR_TYPE_SOA)));
  SWIG_Python_SetConstant(d, "RR_TYPE_MB",SWIG_From_int((int)(RR_TYPE_MB)));
  SWIG_Python_SetConstant(d, "RR_TYPE_MG",SWIG_From_int((int)(RR_TYPE_MG)));
  SWIG_Python_SetConstant(d, "RR_TYPE_MR",SWIG_From_int((int)(RR_TYPE_MR)));
  SWIG_Python_SetConstant(d, "RR_TYPE_NULL",SWIG_From_int((int)(RR_TYPE_NULL)));
  SWIG_Python_SetConstant(d, "RR_TYPE_WKS",SWIG_From_int((int)(RR_TYPE_WKS)));
  SWIG_Python_SetConstant(d, "RR_TYPE_PTR",SWIG_From_int((int)(RR_TYPE_PTR)));
  SWIG_Python_SetConstant(d, "RR_TYPE_HINFO",SWIG_From_int((int)(RR_TYPE_HINFO)));
  SWIG_Python_SetConstant(d, "RR_TYPE_MINFO",SWIG_From_int((int)(RR_TYPE_MINFO)));
  SWIG_Python_SetConstant(d, "RR_TYPE_MX",SWIG_From_int((int)(RR_TYPE_MX)));
  SWIG_Python_SetConstant(d, "RR_TYPE_TXT",SWIG_From_int((int)(RR_TYPE_TXT)));
  SWIG_Python_SetConstant(d, "RR_TYPE_RP",SWIG_From_int((int)(RR_TYPE_RP)));
  SWIG_Python_SetConstant(d, "RR_TYPE_AFSDB",SWIG_From_int((int)(RR_TYPE_AFSDB)));
  SWIG_Python_SetConstant(d, "RR_TYPE_X25",SWIG_From_int((int)(RR_TYPE_X25)));
  SWIG_Python_SetConstant(d, "RR_TYPE_ISDN",SWIG_From_int((int)(RR_TYPE_ISDN)));
  SWIG_Python_SetConstant(d, "RR_TYPE_RT",SWIG_From_int((int)(RR_TYPE_RT)));
  SWIG_Python_SetConstant(d, "RR_TYPE_NSAP",SWIG_From_int((int)(RR_TYPE_NSAP)));
  SWIG_Python_SetConstant(d, "RR_TYPE_NSAP_PTR",SWIG_From_int((int)(RR_TYPE_NSAP_PTR)));
  SWIG_Python_SetConstant(d, "RR_TYPE_SIG",SWIG_From_int((int)(RR_TYPE_SIG)));
  SWIG_Python_SetConstant(d, "RR_TYPE_KEY",SWIG_From_int((int)(RR_TYPE_KEY)));
  SWIG_Python_SetConstant(d, "RR_TYPE_PX",SWIG_From_int((int)(RR_TYPE_PX)));
  SWIG_Python_SetConstant(d, "RR_TYPE_GPOS",SWIG_From_int((int)(RR_TYPE_GPOS)));
  SWIG_Python_SetConstant(d, "RR_TYPE_AAAA",SWIG_From_int((int)(RR_TYPE_AAAA)));
  SWIG_Python_SetConstant(d, "RR_TYPE_LOC",SWIG_From_int((int)(RR_TYPE_LOC)));
  SWIG_Python_SetConstant(d, "RR_TYPE_NXT",SWIG_From_int((int)(RR_TYPE_NXT)));
  SWIG_Python_SetConstant(d, "RR_TYPE_EID",SWIG_From_int((int)(RR_TYPE_EID)));
  SWIG_Python_SetConstant(d, "RR_TYPE_NIMLOC",SWIG_From_int((int)(RR_TYPE_NIMLOC)));
  SWIG_Python_SetConstant(d, "RR_TYPE_SRV",SWIG_From_int((int)(RR_TYPE_SRV)));
  SWIG_Python_SetConstant(d, "RR_TYPE_ATMA",SWIG_From_int((int)(RR_TYPE_ATMA)));
  SWIG_Python_SetConstant(d, "RR_TYPE_NAPTR",SWIG_From_int((int)(RR_TYPE_NAPTR)));
  SWIG_Python_SetConstant(d, "RR_TYPE_KX",SWIG_From_int((int)(RR_TYPE_KX)));
  SWIG_Python_SetConstant(d, "RR_TYPE_CERT",SWIG_From_int((int)(RR_TYPE_CERT)));
  SWIG_Python_SetConstant(d, "RR_TYPE_A6",SWIG_From_int((int)(RR_TYPE_A6)));
  SWIG_Python_SetConstant(d, "RR_TYPE_DNAME",SWIG_From_int((int)(RR_TYPE_DNAME)));
  SWIG_Python_SetConstant(d, "RR_TYPE_SINK",SWIG_From_int((int)(RR_TYPE_SINK)));
  SWIG_Python_SetConstant(d, "RR_TYPE_OPT",SWIG_From_int((int)(RR_TYPE_OPT)));
  SWIG_Python_SetConstant(d, "RR_TYPE_APL",SWIG_From_int((int)(RR_TYPE_APL)));
  SWIG_Python_SetConstant(d, "RR_TYPE_DS",SWIG_From_int((int)(RR_TYPE_DS)));
  SWIG_Python_SetConstant(d, "RR_TYPE_SSHFP",SWIG_From_int((int)(RR_TYPE_SSHFP)));
  SWIG_Python_SetConstant(d, "RR_TYPE_IPSECKEY",SWIG_From_int((int)(RR_TYPE_IPSECKEY)));
  SWIG_Python_SetConstant(d, "RR_TYPE_RRSIG",SWIG_From_int((int)(RR_TYPE_RRSIG)));
  SWIG_Python_SetConstant(d, "RR_TYPE_NSEC",SWIG_From_int((int)(RR_TYPE_NSEC)));
  SWIG_Python_SetConstant(d, "RR_TYPE_DNSKEY",SWIG_From_int((int)(RR_TYPE_DNSKEY)));
  SWIG_Python_SetConstant(d, "RR_TYPE_DHCID",SWIG_From_int((int)(RR_TYPE_DHCID)));
  SWIG_Python_SetConstant(d, "RR_TYPE_NSEC3",SWIG_From_int((int)(RR_TYPE_NSEC3)));
  SWIG_Python_SetConstant(d, "RR_TYPE_NSEC3PARAMS",SWIG_From_int((int)(RR_TYPE_NSEC3PARAMS)));
  SWIG_Python_SetConstant(d, "RR_TYPE_UINFO",SWIG_From_int((int)(RR_TYPE_UINFO)));
  SWIG_Python_SetConstant(d, "RR_TYPE_UID",SWIG_From_int((int)(RR_TYPE_UID)));
  SWIG_Python_SetConstant(d, "RR_TYPE_GID",SWIG_From_int((int)(RR_TYPE_GID)));
  SWIG_Python_SetConstant(d, "RR_TYPE_UNSPEC",SWIG_From_int((int)(RR_TYPE_UNSPEC)));
  SWIG_Python_SetConstant(d, "RR_TYPE_TSIG",SWIG_From_int((int)(RR_TYPE_TSIG)));
  SWIG_Python_SetConstant(d, "RR_TYPE_IXFR",SWIG_From_int((int)(RR_TYPE_IXFR)));
  SWIG_Python_SetConstant(d, "RR_TYPE_AXFR",SWIG_From_int((int)(RR_TYPE_AXFR)));
  SWIG_Python_SetConstant(d, "RR_TYPE_MAILB",SWIG_From_int((int)(RR_TYPE_MAILB)));
  SWIG_Python_SetConstant(d, "RR_TYPE_MAILA",SWIG_From_int((int)(RR_TYPE_MAILA)));
  SWIG_Python_SetConstant(d, "RR_TYPE_ANY",SWIG_From_int((int)(RR_TYPE_ANY)));
  SWIG_Python_SetConstant(d, "RR_TYPE_DLV",SWIG_From_int((int)(RR_TYPE_DLV)));
  SWIG_Python_SetConstant(d, "MODULE_COUNT",SWIG_From_int((int)(MAX_MODULE)));
  SWIG_Python_SetConstant(d, "QF_BIT_CD",SWIG_From_int((int)(0x0010)));
  SWIG_Python_SetConstant(d, "QF_BIT_AD",SWIG_From_int((int)(0x0020)));
  SWIG_Python_SetConstant(d, "QF_BIT_Z",SWIG_From_int((int)(0x0040)));
  SWIG_Python_SetConstant(d, "QF_BIT_RA",SWIG_From_int((int)(0x0080)));
  SWIG_Python_SetConstant(d, "QF_BIT_RD",SWIG_From_int((int)(0x0100)));
  SWIG_Python_SetConstant(d, "QF_BIT_TC",SWIG_From_int((int)(0x0200)));
  SWIG_Python_SetConstant(d, "QF_BIT_AA",SWIG_From_int((int)(0x0400)));
  SWIG_Python_SetConstant(d, "QF_BIT_QR",SWIG_From_int((int)(0x8000)));
  SWIG_Python_SetConstant(d, "RCODE_NOERROR",SWIG_From_int((int)(RCODE_NOERROR)));
  SWIG_Python_SetConstant(d, "RCODE_FORMERR",SWIG_From_int((int)(RCODE_FORMERR)));
  SWIG_Python_SetConstant(d, "RCODE_SERVFAIL",SWIG_From_int((int)(RCODE_SERVFAIL)));
  SWIG_Python_SetConstant(d, "RCODE_NXDOMAIN",SWIG_From_int((int)(RCODE_NXDOMAIN)));
  SWIG_Python_SetConstant(d, "RCODE_NOTIMPL",SWIG_From_int((int)(RCODE_NOTIMPL)));
  SWIG_Python_SetConstant(d, "RCODE_REFUSED",SWIG_From_int((int)(RCODE_REFUSED)));
  SWIG_Python_SetConstant(d, "RCODE_YXDOMAIN",SWIG_From_int((int)(RCODE_YXDOMAIN)));
  SWIG_Python_SetConstant(d, "RCODE_YXRRSET",SWIG_From_int((int)(RCODE_YXRRSET)));
  SWIG_Python_SetConstant(d, "RCODE_NXRRSET",SWIG_From_int((int)(RCODE_NXRRSET)));
  SWIG_Python_SetConstant(d, "RCODE_NOTAUTH",SWIG_From_int((int)(RCODE_NOTAUTH)));
  SWIG_Python_SetConstant(d, "RCODE_NOTZONE",SWIG_From_int((int)(RCODE_NOTZONE)));
  SWIG_Python_SetConstant(d, "MODULE_STATE_INITIAL",SWIG_From_int((int)(module_state_initial)));
  SWIG_Python_SetConstant(d, "MODULE_WAIT_REPLY",SWIG_From_int((int)(module_wait_reply)));
  SWIG_Python_SetConstant(d, "MODULE_WAIT_MODULE",SWIG_From_int((int)(module_wait_module)));
  SWIG_Python_SetConstant(d, "MODULE_RESTART_NEXT",SWIG_From_int((int)(module_restart_next)));
  SWIG_Python_SetConstant(d, "MODULE_WAIT_SUBQUERY",SWIG_From_int((int)(module_wait_subquery)));
  SWIG_Python_SetConstant(d, "MODULE_ERROR",SWIG_From_int((int)(module_error)));
  SWIG_Python_SetConstant(d, "MODULE_FINISHED",SWIG_From_int((int)(module_finished)));
  SWIG_Python_SetConstant(d, "MODULE_EVENT_NEW",SWIG_From_int((int)(module_event_new)));
  SWIG_Python_SetConstant(d, "MODULE_EVENT_PASS",SWIG_From_int((int)(module_event_pass)));
  SWIG_Python_SetConstant(d, "MODULE_EVENT_REPLY",SWIG_From_int((int)(module_event_reply)));
  SWIG_Python_SetConstant(d, "MODULE_EVENT_NOREPLY",SWIG_From_int((int)(module_event_noreply)));
  SWIG_Python_SetConstant(d, "MODULE_EVENT_CAPSFAIL",SWIG_From_int((int)(module_event_capsfail)));
  SWIG_Python_SetConstant(d, "MODULE_EVENT_MODDONE",SWIG_From_int((int)(module_event_moddone)));
  SWIG_Python_SetConstant(d, "MODULE_EVENT_ERROR",SWIG_From_int((int)(module_event_error)));
  SWIG_Python_SetConstant(d, "sec_status_unchecked",SWIG_From_int((int)(sec_status_unchecked)));
  SWIG_Python_SetConstant(d, "sec_status_bogus",SWIG_From_int((int)(sec_status_bogus)));
  SWIG_Python_SetConstant(d, "sec_status_indeterminate",SWIG_From_int((int)(sec_status_indeterminate)));
  SWIG_Python_SetConstant(d, "sec_status_insecure",SWIG_From_int((int)(sec_status_insecure)));
  SWIG_Python_SetConstant(d, "sec_status_secure",SWIG_From_int((int)(sec_status_secure)));
  SWIG_Python_SetConstant(d, "NO_VERBOSE",SWIG_From_int((int)(NO_VERBOSE)));
  SWIG_Python_SetConstant(d, "VERB_OPS",SWIG_From_int((int)(VERB_OPS)));
  SWIG_Python_SetConstant(d, "VERB_DETAIL",SWIG_From_int((int)(VERB_DETAIL)));
  SWIG_Python_SetConstant(d, "VERB_QUERY",SWIG_From_int((int)(VERB_QUERY)));
  SWIG_Python_SetConstant(d, "VERB_ALGO",SWIG_From_int((int)(VERB_ALGO)));
  SWIG_Python_SetConstant(d, "inplace_cb_reply",SWIG_From_int((int)(inplace_cb_reply)));
  SWIG_Python_SetConstant(d, "inplace_cb_reply_cache",SWIG_From_int((int)(inplace_cb_reply_cache)));
  SWIG_Python_SetConstant(d, "inplace_cb_reply_local",SWIG_From_int((int)(inplace_cb_reply_local)));
  SWIG_Python_SetConstant(d, "inplace_cb_reply_servfail",SWIG_From_int((int)(inplace_cb_reply_servfail)));
  SWIG_Python_SetConstant(d, "inplace_cb_query",SWIG_From_int((int)(inplace_cb_query)));
  SWIG_Python_SetConstant(d, "inplace_cb_edns_back_parsed",SWIG_From_int((int)(inplace_cb_edns_back_parsed)));
  SWIG_Python_SetConstant(d, "inplace_cb_types_total",SWIG_From_int((int)(inplace_cb_types_total)));
  SWIG_Python_SetConstant(d, "PKT_QR",SWIG_From_unsigned_SS_short((unsigned short)(1)));
  SWIG_Python_SetConstant(d, "PKT_AA",SWIG_From_unsigned_SS_short((unsigned short)(2)));
  SWIG_Python_SetConstant(d, "PKT_TC",SWIG_From_unsigned_SS_short((unsigned short)(4)));
  SWIG_Python_SetConstant(d, "PKT_RD",SWIG_From_unsigned_SS_short((unsigned short)(8)));
  SWIG_Python_SetConstant(d, "PKT_CD",SWIG_From_unsigned_SS_short((unsigned short)(16)));
  SWIG_Python_SetConstant(d, "PKT_RA",SWIG_From_unsigned_SS_short((unsigned short)(32)));
  SWIG_Python_SetConstant(d, "PKT_AD",SWIG_From_unsigned_SS_short((unsigned short)(64)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

